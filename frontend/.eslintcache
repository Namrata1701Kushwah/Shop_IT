[{"/home/ibm/shopit/frontend/src/index.js":"1","/home/ibm/shopit/frontend/src/App.js":"2","/home/ibm/shopit/frontend/src/components/layouts/Header.js":"3","/home/ibm/shopit/frontend/src/components/layouts/Footer.js":"4","/home/ibm/shopit/frontend/src/components/Home.js":"5","/home/ibm/shopit/frontend/src/components/layouts/MetaData.js":"6","/home/ibm/shopit/frontend/src/store.js":"7","/home/ibm/shopit/frontend/src/reducers/productReducers.js":"8","/home/ibm/shopit/frontend/src/constants/productConstants.js":"9","/home/ibm/shopit/frontend/src/actions/productActions.js":"10","/home/ibm/shopit/frontend/src/components/product/Product.js":"11","/home/ibm/shopit/frontend/src/components/product/productDetails.js":"12","/home/ibm/shopit/frontend/src/components/layouts/Loader.js":"13","/home/ibm/shopit/frontend/src/components/layouts/Search.js":"14","/home/ibm/shopit/frontend/src/reducers/userReducers.js":"15","/home/ibm/shopit/frontend/src/constants/userConstants.js":"16","/home/ibm/shopit/frontend/src/components/user/Login.js":"17","/home/ibm/shopit/frontend/src/actions/userActions.js":"18","/home/ibm/shopit/frontend/src/components/user/Register.js":"19","/home/ibm/shopit/frontend/src/components/user/Profile.js":"20","/home/ibm/shopit/frontend/src/components/route/ProtectedRoute.js":"21","/home/ibm/shopit/frontend/src/components/user/UpdateProfile.js":"22","/home/ibm/shopit/frontend/src/components/user/UpdatePassword.js":"23","/home/ibm/shopit/frontend/src/components/user/ForgotPassword.js":"24","/home/ibm/shopit/frontend/src/components/user/NewPassword.js":"25","/home/ibm/shopit/frontend/src/reducers/cartReducers.js":"26","/home/ibm/shopit/frontend/src/constants/cartConstant.js":"27","/home/ibm/shopit/frontend/src/actions/cartActions.js":"28","/home/ibm/shopit/frontend/src/components/cart/Cart.js":"29","/home/ibm/shopit/frontend/src/components/cart/Shipping.js":"30","/home/ibm/shopit/frontend/src/components/cart/checkoutSteps.js":"31","/home/ibm/shopit/frontend/src/components/cart/ConfirmOrder.js":"32","/home/ibm/shopit/frontend/src/components/cart/Payment.js":"33","/home/ibm/shopit/frontend/src/reducers/orderReducers.js":"34","/home/ibm/shopit/frontend/src/constants/orderConstant.js":"35","/home/ibm/shopit/frontend/src/actions/orderActions.js":"36","/home/ibm/shopit/frontend/src/components/cart/OrderSuccess.js":"37","/home/ibm/shopit/frontend/src/components/order/ListOrders.js":"38","/home/ibm/shopit/frontend/src/components/order/OrderDetails.js":"39","/home/ibm/shopit/frontend/src/components/review/ListReviews.js":"40"},{"size":585,"mtime":1654067602189,"results":"41","hashOfConfig":"42"},{"size":3169,"mtime":1655201230512,"results":"43","hashOfConfig":"42"},{"size":3328,"mtime":1655182415930,"results":"44","hashOfConfig":"42"},{"size":289,"mtime":1653980434980,"results":"45","hashOfConfig":"42"},{"size":8681,"mtime":1654581574624,"results":"46","hashOfConfig":"42"},{"size":198,"mtime":1653635992825,"results":"47","hashOfConfig":"42"},{"size":1473,"mtime":1655209529068,"results":"48","hashOfConfig":"42"},{"size":2684,"mtime":1655204423790,"results":"49","hashOfConfig":"42"},{"size":629,"mtime":1655203218166,"results":"50","hashOfConfig":"42"},{"size":2714,"mtime":1655214198466,"results":"51","hashOfConfig":"42"},{"size":1207,"mtime":1654494507055,"results":"52","hashOfConfig":"42"},{"size":10048,"mtime":1655214018370,"results":"53","hashOfConfig":"42"},{"size":134,"mtime":1654080588089,"results":"54","hashOfConfig":"42"},{"size":1108,"mtime":1654239326122,"results":"55","hashOfConfig":"42"},{"size":4643,"mtime":1654781120340,"results":"56","hashOfConfig":"42"},{"size":1459,"mtime":1654780718429,"results":"57","hashOfConfig":"42"},{"size":2640,"mtime":1654863377008,"results":"58","hashOfConfig":"42"},{"size":5291,"mtime":1655198855564,"results":"59","hashOfConfig":"42"},{"size":5749,"mtime":1654681941076,"results":"60","hashOfConfig":"42"},{"size":2085,"mtime":1654759307890,"results":"61","hashOfConfig":"42"},{"size":778,"mtime":1655192611946,"results":"62","hashOfConfig":"42"},{"size":5078,"mtime":1654772940912,"results":"63","hashOfConfig":"42"},{"size":2985,"mtime":1654778473509,"results":"64","hashOfConfig":"42"},{"size":4638,"mtime":1654836201787,"results":"65","hashOfConfig":"42"},{"size":2890,"mtime":1654835997673,"results":"66","hashOfConfig":"42"},{"size":1329,"mtime":1654863010813,"results":"67","hashOfConfig":"42"},{"size":148,"mtime":1654857052956,"results":"68","hashOfConfig":"42"},{"size":1223,"mtime":1654863055117,"results":"69","hashOfConfig":"42"},{"size":3957,"mtime":1654864176454,"results":"70","hashOfConfig":"42"},{"size":9780,"mtime":1655100756572,"results":"71","hashOfConfig":"42"},{"size":1736,"mtime":1654868079593,"results":"72","hashOfConfig":"42"},{"size":3797,"mtime":1655198225719,"results":"73","hashOfConfig":"42"},{"size":4931,"mtime":1655120521673,"results":"74","hashOfConfig":"42"},{"size":2239,"mtime":1655199980535,"results":"75","hashOfConfig":"42"},{"size":554,"mtime":1655190926551,"results":"76","hashOfConfig":"42"},{"size":2017,"mtime":1655200221892,"results":"77","hashOfConfig":"42"},{"size":704,"mtime":1655121230195,"results":"78","hashOfConfig":"42"},{"size":2710,"mtime":1655187539322,"results":"79","hashOfConfig":"42"},{"size":7579,"mtime":1655202196021,"results":"80","hashOfConfig":"42"},{"size":714,"mtime":1655213201791,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"w4cq39",{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"84"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"84"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"84"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"84"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"84"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"84"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"84"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"/home/ibm/shopit/frontend/src/index.js",[],["172","173"],"/home/ibm/shopit/frontend/src/App.js",[],"/home/ibm/shopit/frontend/src/components/layouts/Header.js",["174"],"import '../../App.css'\nimport { Link, Route, Router } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from \"react-alert\"\n\nimport { Fragment } from \"react\";\nimport Search from './Search';\n\nimport { logout } from '../../actions/userActions';\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch()\n\n    const { user, loading } = useSelector(state => state.auth)\n    const {cartItems}= useSelector(state=>state.cart)\n\n    const logoutHandler =()=>{\n            dispatch(logout());\n            alert.success('Logged out successfully')\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/shopit_logo.png\" alt=\"icon\" />\n                        </Link>\n\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }}>\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n\n                    {user ? (\n                        <div className='ml-4 dropdown d-inline'>\n                            <Link to=\"#!\" className='btn dropdown-toggle text-white mr-4 mt-3'\n                                type=\"button\" id=\"dropDownMenuButton\" data-toggle='dropdown'\n                                area-aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure clasName=\"avatar.avatar-nav\">\n                                    <img src={user.avatar && user.avatar.url} \n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    /><span  style ={{marginLeft:\"12px\"}}>{user && user.name}</span>\n                                </figure>\n\n                                \n                            </Link>\n\n                            <div className='dropdown-menu'  aria-labelledby='dropDownMenuButton'>\n                                {user && user.role === 'admin' && (\n                                    <Link  className='dropdown-item' to=\"/dashboard\">Dashboard</Link>\n                                ) }\n                                  <Link className='dropdown-item' to=\"/orders/me\">Orders</Link>\n                                 <Link className='dropdown-item' to=\"/me\">Profile</Link>\n                                <Link className='dropdown-item  text-danger' to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                        </div>\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>\n                    }\n\n\n                </div>\n            </nav>\n       </Fragment>\n    )\n\n}\n\nexport default Header;","/home/ibm/shopit/frontend/src/components/layouts/Footer.js",[],"/home/ibm/shopit/frontend/src/components/Home.js",[],"/home/ibm/shopit/frontend/src/components/layouts/MetaData.js",[],"/home/ibm/shopit/frontend/src/store.js",["175"],"/home/ibm/shopit/frontend/src/reducers/productReducers.js",["176"],"/home/ibm/shopit/frontend/src/constants/productConstants.js",[],"/home/ibm/shopit/frontend/src/actions/productActions.js",["177"],"/home/ibm/shopit/frontend/src/components/product/Product.js",["178"],"import {Link} from 'react-router-dom'\n\n\nconst Product =({product, col})=>{\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{width:`${(product.ratings / 5)*100}%`}}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">Rs.{product.price}</p>\n                    <Link to={`/product/${product._id} `}id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default Product;","/home/ibm/shopit/frontend/src/components/product/productDetails.js",[],"/home/ibm/shopit/frontend/src/components/layouts/Loader.js",[],"/home/ibm/shopit/frontend/src/components/layouts/Search.js",[],"/home/ibm/shopit/frontend/src/reducers/userReducers.js",[],"/home/ibm/shopit/frontend/src/constants/userConstants.js",[],"/home/ibm/shopit/frontend/src/components/user/Login.js",["179"],"import { Fragment, useEffect, useState } from \"react\";\nimport Loader from \"../layouts/Loader\";\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {login, clearErrors} from '../../actions/userActions';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Login = ({history, location})=>{\n\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const alert = useAlert();\n\n    const dispatch =useDispatch();\n\n    const {isAuthenticated, error, loading} = useSelector(state =>state.auth )\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(()=>{\n\n         if(isAuthenticated){\n             history.push(redirect)\n         }\n\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors()); \n        }\n\n    },[dispatch, isAuthenticated, loading, error, history])\n\n    const submitHandler =(e)=>{\n               e.preventDefault();\n               dispatch(login(email,password))\n    }\n\n\n    return (\n       <Fragment>\n           {loading ? <Loader /> :  (\n               <Fragment>\n                   <MetaData title={'Login'} />\n                   <div className=\"row wrapper\"> \n\t\t<div className=\"col-10 col-lg-5\">\n        <form className=\"shadow-lg\" onSubmit={submitHandler}>\n            <h1 className=\"mb-3\">Login</h1>\n            <div className=\"form-group\">\n              <label htmlFor=\"email_field\">Email</label>\n              <input\n                type=\"email\"\n                id=\"email_field\"\n                className=\"form-control\"\n                value={email}\n                onChange ={(e)=>setEmail(e.target.value)}\n              />\n            </div>\n  \n            <div className=\"form-group\">\n              <label htmlFor=\"password_field\">Password</label>\n              <input\n                type=\"password\"\n                id=\"password_field\"\n                className=\"form-control\"\n                value={password}\n                onChange ={(e)=>setPassword(e.target.value)}\n              />\n            </div>\n\n            <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n  \n            <button\n              id=\"login_button\"\n              type=\"submit\"\n              className=\"btn btn-block py-3\"\n            >\n              LOGIN\n            </button>\n\n            <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n          </form>\n\t\t  </div>\n    </div>\n                   \n                   </Fragment>\n           )}\n       </Fragment>\n    )\n}\n\nexport default Login;","/home/ibm/shopit/frontend/src/actions/userActions.js",[],"/home/ibm/shopit/frontend/src/components/user/Register.js",["180"],"import { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register, clearErrors } from '../../actions/userActions';\n\n\n\n\n\n\n\nconst Register = ({ history }) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: ''\n    })\n\n    const { name, email, password } = user;\n\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth)\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push('/')\n        }\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, isAuthenticated, loading, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('avatar', avatar);\n\n        dispatch(register(formData))\n     }\n\n     const onChange = e =>{\n         if(e.target.name === 'avatar'){\n\n            const reader = new FileReader();\n\n            reader.onload=()=>{\n                if(reader.readyState===2){\n                    setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n\n         } else{\n               setUser({...user, [e.target.name]: [e.target.value]})\n            }\n     }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Register User'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input \n                            type=\"name\" \n                            id=\"name_field\" \n                            className=\"form-control\"\n                            name = 'name'\n                            value={name}\n                            onChange = {onChange}  />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name = 'email'\n                                value={email}\n                                onChange = {onChange}\n\n                                // name='email'\n                                // value={email}\n                                // onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                               name='password'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview }\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"images/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default Register;","/home/ibm/shopit/frontend/src/components/user/Profile.js",[],"/home/ibm/shopit/frontend/src/components/route/ProtectedRoute.js",[],"/home/ibm/shopit/frontend/src/components/user/UpdateProfile.js",["181"],"import { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\n\n\nconst UpdateProfile = ({ history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth)\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('user updated sucessfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, loading, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n\n\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'update profile'} />\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input \n\t\t\t\t\t\t\t\ttype=\"name\" \n\t\t\t\t\t\t\t\tid=\"name_field\" \n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e)=>setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e)=>setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"image/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\"\n                          disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default UpdateProfile;","/home/ibm/shopit/frontend/src/components/user/UpdatePassword.js",["182"],"import { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updatePassword, clearErrors } from '../../actions/userActions';\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\n\n\n\n\n\nconst UpdatePassword = ({history}) =>{\n\n    const [oldPassword, setOldPassword] = useState('')\n    \n    const [password, setPassword] = useState('')\n\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n \n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated sucessfully')\n           \n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, loading, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n      \n\n        dispatch(updatePassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'}/>\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e)=>setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e)=>setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\"\n                            disabled={loading ? true : false} >Update Password</button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default UpdatePassword;","/home/ibm/shopit/frontend/src/components/user/ForgotPassword.js",[],"/home/ibm/shopit/frontend/src/components/user/NewPassword.js",["183"],"\nimport { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPassword, clearErrors } from '../../actions/userActions';\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\n\n\n\n\n\nconst NewPassword= ({history , match})=>{\n\n    const [password, setPassword] = useState('')\n    const [confirmpassword, setConfirmPassword] = useState('')\n    \n\n\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n \n    const { error, success} = useSelector(state => state.ForgotPassword)\n\n    useEffect(() => {\n\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Password updated successfully')\n            history.push('/login')\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmpassword', confirmpassword);\n    \n      \n\n        dispatch(resetPassword(match.pasrams.token,formData))\n    }\n\n\n\n    return (\n        <Fragment>\n            <MetaData title={'New Password Reset'} />\n\n            <div className=\"row wrapper\">\n            <div className=\"col-10 col-lg-5\">\n                <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                    <h1 className=\"mb-3\">New Password</h1>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password_field\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password_field\"\n                            className=\"form-control\"\n                            value={password}\n                            onChange ={(e)=>setPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_password_field\"\n                            className=\"form-control\"\n                            value={confirmpassword}\n                            onChange ={(e)=>setConfirmPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <button\n                        id=\"new_password_button\"\n                        type=\"submit\"\n                        className=\"btn btn-block py-3\">\n                        Set Password\n                    </button>\n\n                </form>\n            </div>\n        </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default NewPassword;","/home/ibm/shopit/frontend/src/reducers/cartReducers.js",[],"/home/ibm/shopit/frontend/src/constants/cartConstant.js",[],"/home/ibm/shopit/frontend/src/actions/cartActions.js",[],"/home/ibm/shopit/frontend/src/components/cart/Cart.js",["184"],"import { Fragment } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport MetaData from \"../layouts/MetaData\";\n\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItemToCart,removeItemFromCart } from \"../../actions/cartActions\";\n\n\n\n\nconst Cart  = ({history})=>{\n    const dispatch = useDispatch();\n    const {cartItems} = useSelector(state=>state.cart)\n    // console.log(cartItems)\n \n    // console.log(cartItems.length)\n\n    const removeItemCartHandler = (id)=>{\n             dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n      const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n       dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity -1;\n\n        if (newQty <= 0) return;\n\n       dispatch(addItemToCart(id, newQty)) \n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=ship')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'}/>\n            {cartItems.length ===0 ?  <h2 className='mt-5'>YOur Cart is Empty</h2> : (\n                <Fragment>\n                       <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length}items</b></h2>\n        \n        <div className=\"row d-flex justify-content-between\">\n            <div className=\"col-12 col-lg-8\">\n                {cartItems.map(item=>(\n                      <Fragment>\n                          <hr/>\n\n                          <div className=\"cart-item\" key={item.product}>\n                    <div className=\"row\">\n                        <div className=\"col-4 col-lg-3\">\n                            <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\"/>\n                        </div>\n\n                        <div className=\"col-5 col-lg-3\">\n                            <Link to={`/ products/${item.product}`}>{item.name}</Link>\n                        </div>\n\n\n                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                            <p id=\"card_item_price\">{item.price}</p>\n                        </div>\n\n                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                            <div className=\"stockCounter d-inline\">\n                                <span className=\"btn btn-danger minus\" onClick={()=>decreaseQty(item.product, item.quantity)}>-</span>\n                                <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n\t\t\t\t\t\t\t\t<span className=\"btn btn-primary plus\" onClick={()=>increaseQty(item.product, item.quantity,item.stock)}>+</span>\n                            </div>\n                        </div>\n\n                        <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                            <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={()=>removeItemCartHandler(item.product)}></i>\n                        </div>\n\n                    </div>\n                </div>\n                <hr />\n                      </Fragment>\n                ))}\n               \n            </div>\n\n            <div className=\"col-12 col-lg-3 my-4\">\n                <div id=\"order_summary\">\n                    <h4>Order Summary</h4>\n                    <hr />\n                    <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc,item)=>(acc + Number(item.quantity)),0)} (Units)</span></p>\n                    <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc,item)=>(acc + item.quantity * item.price),0).toFixed(2)}</span></p>\n    \n                    <hr />\n                    <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                </div>\n            </div>\n        </div>\n                    </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\n\nexport default Cart;","/home/ibm/shopit/frontend/src/components/cart/Shipping.js",[],"/home/ibm/shopit/frontend/src/components/cart/checkoutSteps.js",["185"],"import { Fragment } from \"react\";\nimport {Link}  from 'react-router-dom'\n\nconst CheckoutSteps =({shipping, confirmOrder, payment}) =>{\n    return (\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\n\n        {shipping ? <Link to='shippping' className=\"float-right\">\n            <div className=\"triangle2-active\"></div>\n            <div className=\"step active-step\">Shipping</div>\n            <div className=\"triangle-active\"></div>\n        </Link> : <Link to=\"#!\" disabled>\n                <div className=\"triangle2-incomplete\"></div>\n                <div className=\"step incomplete\">Shipping</div>\n                <div className=\"triangle-incomplete\"></div>\n            </Link>}\n\n        {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\n            <div className=\"triangle2-active\"></div>\n            <div className=\"step active-step\">Confirm Order</div>\n            <div className=\"triangle-active\"></div>\n        </Link> : <Link to=\"#!\" disabled>\n                <div className=\"triangle2-incomplete\"></div>\n                <div className=\"step incomplete\">Confirm Order</div>\n                <div className=\"triangle-incomplete\"></div>\n            </Link>}\n\n        {payment ? <Link to='/payment' className=\"float-right\">\n            <div className=\"triangle2-active\"></div>\n            <div className=\"step active-step\">Payment</div>\n            <div className=\"triangle-active\"></div>\n        </Link> : <Link to=\"#!\" disabled>\n                <div className=\"triangle2-incomplete\"></div>\n                <div className=\"step incomplete\">Payment</div>\n                <div className=\"triangle-incomplete\"></div>\n            </Link>}\n\n    </div>\n    )\n}\n\n\nexport default CheckoutSteps;","/home/ibm/shopit/frontend/src/components/cart/ConfirmOrder.js",[],"/home/ibm/shopit/frontend/src/components/cart/Payment.js",[],"/home/ibm/shopit/frontend/src/reducers/orderReducers.js",[],"/home/ibm/shopit/frontend/src/constants/orderConstant.js",[],"/home/ibm/shopit/frontend/src/actions/orderActions.js",[],"/home/ibm/shopit/frontend/src/components/cart/OrderSuccess.js",[],"/home/ibm/shopit/frontend/src/components/order/ListOrders.js",[],"/home/ibm/shopit/frontend/src/components/order/OrderDetails.js",[],"/home/ibm/shopit/frontend/src/components/review/ListReviews.js",[],{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":2,"column":23,"nodeType":"192","messageId":"193","endLine":2,"endColumn":29},{"ruleId":"190","severity":1,"message":"194","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":16},{"ruleId":"195","severity":1,"message":"196","line":30,"column":29,"nodeType":"197","messageId":"198","endLine":30,"endColumn":55,"fix":"199"},{"ruleId":"190","severity":1,"message":"200","line":12,"column":5,"nodeType":"192","messageId":"193","endLine":12,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":8,"column":17,"nodeType":"203","endLine":11,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":37,"column":7,"nodeType":"206","endLine":37,"endColumn":59,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":46,"column":8,"nodeType":"206","endLine":46,"endColumn":60,"suggestions":"209"},{"ruleId":"204","severity":1,"message":"210","line":49,"column":8,"nodeType":"206","endLine":49,"endColumn":54,"suggestions":"211"},{"ruleId":"204","severity":1,"message":"208","line":49,"column":8,"nodeType":"206","endLine":49,"endColumn":54,"suggestions":"212"},{"ruleId":"190","severity":1,"message":"213","line":9,"column":10,"nodeType":"192","messageId":"193","endLine":9,"endColumn":31},{"ruleId":"190","severity":1,"message":"214","line":7,"column":10,"nodeType":"192","messageId":"193","endLine":7,"endColumn":18},{"ruleId":"190","severity":1,"message":"215","line":1,"column":10,"nodeType":"192","messageId":"193","endLine":1,"endColumn":18},"no-native-reassign",["216"],"no-negated-in-lhs",["217"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Shipping' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property resPerPage.","MemberExpression","unexpectedWhitespace",{"range":"218","text":"219"},"'NEW_REVIEW_RESET' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'alert' and 'redirect'. Either include them or remove the dependency array.","ArrayExpression",["220"],"React Hook useEffect has a missing dependency: 'alert'. Either include it or remove the dependency array.",["221"],"React Hook useEffect has missing dependencies: 'alert' and 'user'. Either include them or remove the dependency array.",["222"],["223"],"'UPDATE_PASSWORD_RESET' is defined but never used.","'useAlert' is defined but never used.","'Fragment' is defined but never used.","no-global-assign","no-unsafe-negation",[789,791],".",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},"Update the dependencies array to be: [dispatch, isAuthenticated, loading, error, history, redirect, alert]",{"range":"232","text":"233"},"Update the dependencies array to be: [dispatch, isAuthenticated, loading, error, history, alert]",{"range":"234","text":"235"},"Update the dependencies array to be: [dispatch, loading, error, history, isUpdated, user, alert]",{"range":"236","text":"237"},"Update the dependencies array to be: [dispatch, loading, error, history, isUpdated, alert]",{"range":"238","text":"239"},[903,955],"[dispatch, isAuthenticated, loading, error, history, redirect, alert]",[942,994],"[dispatch, isAuthenticated, loading, error, history, alert]",[1318,1364],"[dispatch, loading, error, history, isUpdated, user, alert]",[998,1044],"[dispatch, loading, error, history, isUpdated, alert]"]