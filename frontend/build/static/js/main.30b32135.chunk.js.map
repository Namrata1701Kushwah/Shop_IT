{"version":3,"sources":["components/layouts/MetaData.js","components/product/Product.js","constants/productConstants.js","actions/productActions.js","components/Home.js","components/layouts/Footer.js","components/layouts/Search.js","constants/userConstants.js","actions/userActions.js","components/layouts/Header.js","components/layouts/Loader.js","constants/cartConstant.js","actions/cartActions.js","components/product/productDetails.js","components/user/Login.js","components/user/Profile.js","components/route/ProtectedRoute.js","components/user/Register.js","components/user/UpdateProfile.js","components/user/UpdatePassword.js","components/user/ForgotPassword.js","components/user/NewPassword.js","components/cart/Cart.js","components/cart/checkoutSteps.js","components/cart/Shipping.js","components/cart/ConfirmOrder.js","constants/orderConstant.js","actions/orderActions.js","components/cart/Payment.js","components/cart/OrderSuccess.js","components/order/ListOrders.js","components/admin/Sidebar.js","components/admin/Dashboard.js","components/admin/NewProduct.js","components/admin/UpdateProduct.js","components/admin/OrderList.js","components/admin/ProcessOrder.js","components/admin/UsersList.js","components/admin/UpdateUser.js","components/admin/ProductReviews.js","store.js","reducers/productReducers.js","reducers/userReducers.js","reducers/cartReducers.js","reducers/orderReducers.js","components/order/OrderDetails.js","components/admin/ProductList.js","App.js","index.js"],"names":["MetaData","title","Helmet","Product","product","col","className","src","images","url","to","_id","name","console","log","ratings","style","width","id","numOfReviews","price","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","DELETE_REVIEW_REQUEST","DELETE_REVIEW_SUCCESS","DELETE_REVIEW_RESET","DELETE_REVIEW_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_RESET","DELETE_PRODUCT_FAIL","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_RESET","UPDATE_PRODUCT_FAIL","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_RESET","NEW_PRODUCT_FAIL","CLEAR_ERRORS","getProductDetails","dispatch","type","axios","get","data","payload","response","message","getProductReviews","reviews","getAdminProducts","clearErrors","Range","createSliderWithTooltip","Slider","Home","match","useState","currentPage","setCurrentPage","setPrice","category","setCategory","rating","setRating","categories","alert","useAlert","useDispatch","useSelector","state","products","loading","error","resPerPage","productsCount","filteredProductsCount","keyword","params","useEffect","link","getProducts","count","marks","min","max","defaultValue","tipFormatter","value","tipProps","placement","visible","onChange","map","cursor","listStyleType","onClick","star","activePage","itemsCountPerPage","totalItemsCount","PageNumber","nextPageText","prevPageText","firstPageText","lastPageText","itemClass","linkClass","Footer","Search","history","setKeyword","onSubmit","e","preventDefault","trim","push","placeholder","target","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAIL","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAIL","UPDATE_PROFILE_REQUEST","UPDATE_PROFILE_SUCCESS","UPDATE_PROFILE_RESET","UPDATE_PROFILE_FAIL","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_RESET","UPDATE_PASSWORD_FAIL","UPDATE_USER_REQUEST","UPDATE_USER_SUCCESS","UPDATE_USER_RESET","UPDATE_USER_FAIL","DELETE_USER_REQUEST","DELETE_USER_SUCCESS","DELETE_USER_RESET","DELETE_USER_FAIL","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_FAIL","NEW_PASSWORD_REQUEST","NEW_PASSWORD_SUCCESS","NEW_PASSWORD_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","ALL_USERS_REQUEST","ALL_USERS_SUCCESS","ALL_USERS_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","loadUser","user","allUsers","users","Header","auth","cartItems","cart","alt","render","textDecoration","length","avatar","marginLeft","role","success","Loader","ADD_TO_CART","REMOVE_ITEM_CART","SAVE_SHIPPING_INFO","addItemToCart","quantity","getState","image","stock","localStorage","setItem","JSON","stringify","ProductDetails","setQuantity","comment","setComment","productDetails","newReview","reviewError","Carousel","pause","Item","pubic_id","document","querySelector","valueAsNumber","qty","readOnly","disabled","description","seller","stars","querySelectorAll","showRatings","forEach","index","starValue","classList","add","remove","addEventListener","tabIndex","reviewData","formData","FormData","set","config","headers","put","review","Login","location","email","setEmail","password","setPassword","isAuthenticated","redirect","search","split","post","login","htmlFor","Pofile","String","createdAt","substring","ProtectedRoute","isAdmin","Component","component","rest","props","Register","setUser","setAvatar","avatarPreview","setAvatarPreview","reader","FileReader","onload","readyState","result","readAsDataURL","files","userData","encType","accept","UpdateProfile","setName","isUpdated","UpdatePassword","oldPassword","setOldPassword","passwords","ForgotPassword","forgotPassword","NewPassword","confirmpassword","setConfirmPassword","token","Cart","removeItemCartHandler","removeItemFromCart","item","height","newQty","decreaseQty","increaseQty","reduce","acc","Number","toFixed","CheckoutSteps","shipping","confirmOrder","payment","Shipping","countriesList","Object","values","countries","shippingInfo","address","setAddress","city","setCity","postalCode","setPostalCode","phoneNo","setPhoneNo","country","setCountry","required","ConfirmOrder","itemsPrice","shippingPrice","taxPrice","totalPrice","sessionStorage","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ALL_ORDERS_REQUEST","ALL_ORDERS_SUCCESS","ALL_ORDERS_FAIL","UPDATE_ORDER_REQUEST","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAIL","UPDATE_ORDER_RESET","DELETE_ORDER_REQUEST","DELETE_ORDER_SUCCESS","DELETE_ORDER_FAIL","DELETE_ORDER_RESET","ORDERS_DETAILS_REQUEST","ORDERS_DETAILS_SUCCESS","ORDERS_DETAILS_FAIL","createOrder","order","getOrderDetails","allOrders","options","base","fontSize","invalid","color","Payment","stripe","useStripe","elements","useElements","newOrder","orderItems","orderInfo","parse","getItem","paymentData","amount","Math","round","submitHandler","res","clientSecret","client_secret","confirmCardPayment","payment_method","card","getElement","CardNumberElement","billing_details","paymentIntent","status","paymentInfo","OrderSuccess","ListOrders","myOrders","orders","columns","label","field","sort","rows","numOfItems","orderStatus","includes","actions","setOrders","bordered","striped","hover","Sidebar","href","Dashboard","totalAmount","outOfStock","NewProduct","setDescription","setStock","setSeller","setImages","imagesPreview","setImagesPreview","newProduct","productData","append","Array","from","file","oldArray","multiple","img","UpdateProduct","oldImages","setOldImages","updateError","productId","OrdersList","isDeleted","deleteOrderHandler","delete","deleteOrder","numofItems","ProcessOrder","setStatus","orderDetails","orderId","updateOrderHandler","orderData","updateOrder","shippingDetails","isPaid","UsersList","deleteUserHandler","deleteUser","setUsers","UpdateUser","setRole","userDetails","userId","ProductReviews","setProductId","productReviews","deleteReviewHandler","deleteReviews","setReviews","reducer","combineReducers","action","errror","isItemExist","find","i","filter","liading","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","OrderDetails","ProductList","deleteErrror","deleteProductHandler","deleteProduct","marginTop","setProducts","App","stripeApiKey","setStripeApiKey","getStripApiKey","path","exact","loadStripe","Profile","OrderList","timeout","position","positions","BOTTOM_CENTER","transition","transitions","SCALE","ReactDOM","template","AlertTemplate","getElementById"],"mappings":"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","file":"static/js/main.30b32135.chunk.js","sourcesContent":["import {Helmet} from 'react-helmet';\n\n\n\n\nconst MetaData=({title})=>{\n    return(\n        <Helmet>\n            <title>{`${title}-ShopIT`}</title>\n\n        </Helmet>\n    )\n}\n\nexport default MetaData; ","import {Link} from 'react-router-dom'\n\n\nconst Product =({product, col})=>{\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            {console.log(\"abc\",product?.ratings)}\n                            <div className=\"rating-inner\" style={{width:`${(product?.ratings / 5)*100}%`}}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">${product.price}</p>\n                    <Link to={`/product/${product._id} `}id=\"view_btn\" className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\n\nexport default Product;"," export const ADMIN_PRODUCTS_REQUEST = 'ADMIN_PRODUCTS_REQUEST'\n export const ADMIN_PRODUCTS_SUCCESS = 'ADMIN_PRODUCTS_SUCCESS'\n export const ADMIN_PRODUCTS_FAIL = 'ADMIN_PRODUCTS_FAIL'\n\n export const NEW_REVIEW_REQUEST = 'NEW_REVIEW_REQUEST'\n export const NEW_REVIEW_SUCCESS = 'NEW_REVIEW_SUCCESS'\n export const NEW_REVIEW_RESET = 'NEW_REVIEW_RESET'\n export const NEW_REVIEW_FAIL = 'NEW_REVIEW_FAIL'\n\n\n export const DELETE_REVIEW_REQUEST = 'DELETE_REVIEW_REQUEST'\n export const DELETE_REVIEW_SUCCESS = 'DELETE_REVIEW_SUCCESS'\n export const DELETE_REVIEW_RESET = 'DELETE_REVIEW_RESET'\n export const DELETE_REVIEW_FAIL = 'DELETE_REVIEW_FAIL'\n\n\n export const GET_REVIEWS_REQUEST = 'GET_REVIEWS_REQUEST'\n export const GET_REVIEWS_SUCCESS = 'GET_REVIEWS_SUCCESS'\n export const GET_REVIEWS_RESET = 'GET_REVIEWS_RESET'\n export const GET_REVIEWS_FAIL = 'GET_REVIEWS_FAIL'\n\n export const DELETE_PRODUCT_REQUEST = 'DELETE_PRODUCT_REQUEST'\n export const DELETE_PRODUCT_SUCCESS = 'DELETE_PRODUCT_SUCCESS'\n export const DELETE_PRODUCT_RESET = 'DELETE_PRODUCT_RESET'\n export const DELETE_PRODUCT_FAIL = 'DELETE_PRODUCT_FAIL'\n\n export const UPDATE_PRODUCT_REQUEST= 'UPDATE_PRODUCT_REQUEST'\n export const UPDATE_PRODUCT_SUCCESS = 'UPDATE_PRODUCT_SUCCESS'\n export const UPDATE_PRODUCT_RESET = 'UPDATE_PRODUCT_RESET'\n export const UPDATE_PRODUCT_FAIL = 'NEW_REVIEW_FAIL'\n\n\n export const ALL_PRODUCTS_REQUEST = 'ALL_PRODUCTS_REQUEST'\n export const ALL_PRODUCTS_SUCCESS = 'ALL_PRODUCTS_SUCCESS'\n export const ALL_PRODUCTS_FAIL = 'ALL_PRODUCTS_FAIL' \n\n export const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\n export const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\n export const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n \n\n export const NEW_PRODUCT_REQUEST = 'NEW_PRODUCT_REQUEST'\n export const NEW_PRODUCT_SUCCESS = 'NEW_PRODUCT_SUCCESS'\n export const NEW_PRODUCT_RESET = 'NEW_PRODUCT_RESET'\n export const NEW_PRODUCT_FAIL = 'NEW_REVIEW_FAIL'\n\n//  export const GET_REVIEWS_REQUEST = \"GET_REVIEWS_REQUEST\"\n//  export const GET_REVIEWS_SUCCESS = \"GET_REVIEWS_SUCCESS\"\n//  export const GET_REVIEWS_FAIL = \"GET_REVIEWS_FAIL\"\n\n\n \n export const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios';\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_RESET,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_RESET,\n    \n\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_RESET,\n    NEW_REVIEW_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n\n    NEW_PRODUCT_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n} from '../constants/productConstants'\n\n\nexport const getProducts = (keyword = \"\", currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n\n    try {\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        // let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}\n        // &price[gte]=${price[0]}`\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price\n        [1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            //   console.log(\"Actionnnnnnnnnnnnnnnnnnnnnnnnnn\",category)\n\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price\n            [1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n\n        const { data } = await axios.get(link)\n        // console.log(\"===============================================\",data);\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: GET_REVIEWS_REQUEST })\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n      \n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n    } catch (error) {\n        console.log(error);\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const newReview = (reviewData) => async (dispatch) => {\n\n    try {\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': \"application/json\"\n            }\n        }\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n        console.log(\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\", data);\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n\n    try {\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        \n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n        console.log(\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\", data);\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n\nexport const newProduct = (productData) => async (dispatch) => {\n\n    try {\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': \"application/json\"\n            }\n        }\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n        console.log(\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\", data);\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n//UPdate product(Admin)\nexport const updateProduct = (id,productData) => async (dispatch) => {\n\n    try {\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': \"application/json\"\n            }\n        }\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n        console.log(\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\", data);\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n\n\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n        const { data } = await axios.get(`/api/v1/admin/products`)\n        console.log(\"HHHHHHHHHHHHHH\", data);\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n\n// Delete product reviews\nexport const deleteReviews = (id,productId) => async (dispatch) => {\n    try {\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n     \n\n        // const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n      \n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n    } catch (error) {\n        \n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n//Clear Error\n\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n\n}","import { Fragment, useEffect, useState } from \"react\";\nimport MetaData from \"./layouts/MetaData\";\nimport Product from \"./product/Product\";\nimport Pagination from \"react-js-pagination\";\n// import ReactPaginate from 'react-paginate';\n\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from \"../actions/productActions\";\nimport { useAlert } from \"react-alert\";\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\nconst Home = ({ match }) => {\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 1000])\n    const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n    console.log(\"999999999999999999999999\", category)\n\n    const categories = [\n        \"Electronics\",\n        \"Cameras\",\n        \"Laptops\",\n        \"Accessories\",\n        \"Headphones\",\n        \"Food\",\n        \"Books\",\n        \"Clothes/Shoes\",\n        \"Beauty/Health\",\n        \"Sports\",\n        \"Outdoor\",\n        \"Home\",\n    ]\n\n\n\n\n    // console.log(currentPage)\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, products, error, resPerPage, productsCount, filteredProductsCount } = useSelector(state => state.products)\n\n\n    const keyword = match.params.keyword\n\n\n    useEffect(() => {\n        if (error) {\n\n            return alert.error(error)\n        }\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\n        console.log(\"3444444444444444\", price);\n\n\n    }, [dispatch, alert, error, currentPage, keyword, price, category, rating])\n\n\n    const setCurrentPageNo = (PageNumber) => {\n        setCurrentPage(PageNumber)\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n\n    return (\n\n        <Fragment> {/*TODO*/}\n            {loading ? <h1>Loading...</h1> : (\n                <Fragment>\n\n                    <MetaData title={'Buy Best Products Online'} />\n                    <h1 id=\"products_heading\">Latest Products</h1>\n\n                    <section id=\"products\" className=\"container mt-5\">\n                        <div className=\"row\">\n\n                            {keyword ? (\n                                <Fragment>\n                                    <div className=\"col-6 col-md-3 mt-5 mb-5\">\n                                        <div className=\"px-5\" >\n                                            <Range\n                                                marks={{\n                                                    1: `$1`,\n                                                    1000: `$1000`\n                                                }}\n                                                min={1}\n                                                max={1000}\n                                                defaultValue={[1, 1000]}\n                                                tipFormatter={value => `$${value}`}\n                                                tipProps={{\n                                                    placement: \"top\",\n                                                    visible: true\n                                                }}\n                                                value={price}\n                                                onChange={price => setPrice(price)}\n                                            />\n\n                                            <hr className=\"my-3\" />\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    categories\n                                                </h4>\n\n                                                <ul className=\"pl-0\">\n                                                    {categories?.map(category => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={category}\n                                                            onClick={() => setCategory(category)\n                                                            }\n                                                        >\n                                                            {category}\n                                                        </li>\n                                                    ))}\n                                                </ul>\n\n                                            </div>\n\n                                            <hr className=\"my-5\" />\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Ratings\n                                                </h4>\n\n                                                <ul className=\"pl-0\">\n                                                    {[5, 4, 3, 2, 1]?.map(star => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={star}\n                                                            onClick={() => setRating(star)\n                                                            }\n                                                        >\n                                                            <div className=\"rating-outer\">\n                                                                <div className=\"rating-inner\"\n                                                                    style={{\n                                                                        width: `${star * 20}%`\n                                                                    }}\n                                                                >\n\n                                                                </div>\n\n                                                            </div>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n\n                                            </div>\n\n\n\n\n\n                                        </div>\n\n                                    </div>\n\n                                    <div className=\"col-6 col-md-9\">\n                                        <div className=\"row\">\n                                    \n                                            {products?.map(product => (\n                                                <Product key={product?._id} product={product} col={4} />\n                                            ))}\n                                        </div>\n\n                                    </div>\n                                </Fragment>\n                            ) : (\n                                products?.map(product => (\n                                    <Product key={product?._id} product={product} />\n                                ))\n\n\n                            )}\n\n\n\n\n\n                        </div>\n                    </section>\n                    {resPerPage <= count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n\n                            <Pagination\n\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                nextPageText={'Next'}\n                                prevPageText={'Prev'}\n                                firstPageText={'First'}\n                                lastPageText={'Last'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n\n\n                        </div>\n                    )}\n\n\n                </Fragment>\n            )}\n\n        </Fragment>\n        \n    )\n}\n\n\nexport default Home;","import { Fragment } from \"react\";\n\nconst Footer = () => {\n  return (\n    <Fragment>\n      <footer className=\"py-1\">\n        <p className=\"text-center mt-1\">\n          Shopping Cart - 2022-2023, All Rights Reserved\n        </p>\n      </footer>\n\n    </Fragment>\n  )\n}\n\nexport default Footer;","import { useState } from \"react\"\n\nconst Search =({history})=>{\n    const[keyword, setKeyword]=useState(\"\")\n    const searchHandler=(e)=>{\n        e.preventDefault()\n\n        if(keyword.trim()){\n            history.push(`/search/${keyword}`)\n        }else{\n            history.push('/')\n        }\n    }\n    return(\n       \n            <form onSubmit={searchHandler}>\n          <div className=\"input-group\">\n                        <input\n                            type=\"text\"\n                            id=\"search_field\"\n                            className=\"form-control\"\n                            placeholder=\"Enter Product Name ...\"\n                            onChange={(e)=>setKeyword(e.target.value)}\n                        />\n                        <div className=\"input-group-append\">\n                            <button id=\"search_btn\" className=\"btn\">\n                                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\n                            </button>\n                        </div>\n                    </div>\n            </form>\n\n      \n    )\n}\n\nexport default Search;","export const LOGIN_REQUEST = 'LOGIN_REQUEST'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\n\nexport const REGISTER_USER_REQUEST = 'REGISTER_USER_REQUEST'\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS'\nexport const REGISTER_USER_FAIL = 'REGISTER_USER_FAIL'\n\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST'\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\nexport const LOAD_USER_FAIL = 'LOAD_USER_FAIL'\n\nexport const UPDATE_PROFILE_REQUEST = 'UPDATE_PROFILE_REQUEST'\nexport const UPDATE_PROFILE_SUCCESS = 'UPDATE_PROFILE_SUCCESS'\nexport const UPDATE_PROFILE_RESET = 'UPDATE_PROFILE_RESET'\nexport const UPDATE_PROFILE_FAIL = 'UPDATE_PROFILE_FAIL'\n\nexport const UPDATE_PASSWORD_REQUEST = 'UPDATE_PASSWORD_REQUEST'\nexport const UPDATE_PASSWORD_SUCCESS = 'UPDATE_PASSWORD_SUCCESS'\nexport const UPDATE_PASSWORD_RESET = 'UPDATE_PASSWORD_RESET'\nexport const UPDATE_PASSWORD_FAIL = 'UPDATE_PASSWORD_FAIL'\n\n\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST'\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS'\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET'\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL'\n\n\nexport const DELETE_USER_REQUEST = 'DELETE_USER_REQUEST'\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS'\nexport const DELETE_USER_RESET = 'DELETE_USER_RESET'\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL'\n\n\n\n\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST'\nexport const  FORGOT_PASSWORD_SUCCESS = ' FORGOT_PASSWORD_SUCCESS'\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL'\n\n\n\nexport const NEW_PASSWORD_REQUEST = 'NEW_PASSWORD_REQUEST'\nexport const NEW_PASSWORD_SUCCESS = ' NEW_PASSWORD_SUCCESS'\nexport const NEW_PASSWORD_FAIL = 'NEW_PASSWORD_FAIL' \n\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL' \n\nexport const ALL_USERS_REQUEST = 'ALL_USERS_REQUEST'\nexport const ALL_USERS_SUCCESS = 'ALL_USERS_SUCCESS'\nexport const ALL_USERS_FAIL = 'ALL_USERS_FAIL' \n\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS'\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL'\n\n\n\n \n export const CLEAR_ERRORS = 'CLEAR_ERRORS'","import axios from 'axios'\n\n\n\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL, \n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    // UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    // UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    // UPDATE_USER_RESET,\n    UPDATE_USER_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n   NEW_PASSWORD_REQUEST,\n   NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n//Login\n\nexport const login  = (email, password)=> async (dispatch)=>{\n    try {\n        dispatch({type : LOGIN_REQUEST})\n\n        const config = {\n            headers : {\n                'content-Type' : 'application/json'\n            }\n        }\n\n        const {data} = await axios.post('/api/v1/login', {email, password}, config)\n        console.log(data)\n\n        dispatch({\n            type : LOGIN_SUCCESS,\n            payload : data.user\n        })\n\n\n        \n    } catch (error) {\n        dispatch({\n            type : LOGIN_FAIL,\n            payload : error.response.data.message\n        })\n        \n    }\n\n}\n\n//Register User \n\nexport const register = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: REGISTER_USER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/register', userData, config)\n\n        dispatch({\n            type: REGISTER_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: REGISTER_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//Load User \nexport const loadUser = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: LOAD_USER_REQUEST })\n\n        const { data } = await axios.get('/api/v1/me')\n\n        dispatch({\n            type: LOAD_USER_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOAD_USER_FAIL,\n            payload: error?.response?.data?.message\n        })\n    }\n}\n\n//Update Profile\n\nexport const updateProfile = (userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PROFILE_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/me/update', userData, config)\n\n        dispatch({\n            type: UPDATE_PROFILE_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PROFILE_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n//Update Password\n\nexport const updatePassword = (passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PASSWORD_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put('/api/v1/password/update', passwords, config)\n\n        dispatch({\n            type: UPDATE_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n  \n\n//forgot password\nexport const forgotPassword = (email) => async (dispatch) => {\n    try {\n\n        dispatch({ type: FORGOT_PASSWORD_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/password/forgot', email, config)\n\n        dispatch({\n            type: FORGOT_PASSWORD_SUCCESS,\n            payload: data.message\n        })\n\n    } catch (error) {\n        dispatch({\n            type: FORGOT_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\n//reset password\nexport const resetPassword = (token, passwords) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PASSWORD_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/password/reset/${token}`, passwords, config)\n\n        dispatch({\n            type: NEW_PASSWORD_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PASSWORD_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n\n//Logout User \n\nexport const logout = () => async (dispatch) => {\n    try {\n\n     \n\n        await axios.get('/api/v1/logout')\n\n        dispatch({\n            type: LOGOUT_SUCCESS,\n            \n        })\n\n    } catch (error) {\n        dispatch({\n            type: LOGOUT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//Get All  User \nexport const allUsers = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_USERS_REQUEST })\n\n        const { data } = await axios.get('/api/v1/admin/users')\n\n        dispatch({\n            type: ALL_USERS_SUCCESS,\n            payload: data.users\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_USERS_FAIL,\n            payload: error?.response?.data?.message\n        })\n    }\n}\n\n//Update User - Admin\nexport const updateUser = (id, userData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_USER_REQUEST})\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/user/${id}`, userData, config)\n\n        dispatch({\n            type: UPDATE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n//Get User Details - Admin\nexport const getUserDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: USER_DETAILS_REQUEST})\n\n        \n\n        const { data } = await axios.get(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data.user\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//Delete User - Admin\nexport const deleteUser = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_USER_REQUEST})\n\n        \n\n        const { data } = await axios.delete(`/api/v1/admin/user/${id}`)\n\n        dispatch({\n            type: DELETE_USER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n//Clear Error\n\nexport const clearErrors = ()=>async(dispatch)=>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n    \n}\n\n\n","import '../../App.css'\nimport { Link, Route, Router } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from \"react-alert\"\n\nimport { Fragment } from \"react\";\nimport Search from './Search';\n\nimport { logout } from '../../actions/userActions';\n\nconst Header = () => {\n    const alert = useAlert();\n    const dispatch = useDispatch()\n\n    const { user, loading } = useSelector(state => state.auth)\n    const {cartItems}= useSelector(state=>state.cart)\n\n    const logoutHandler =()=>{\n            dispatch(logout());\n            alert.success('Logged out successfully')\n    }\n\n    return (\n        <Fragment>\n            <nav className=\"navbar row\">\n                <div className=\"col-12 col-md-3\">\n                    <div className=\"navbar-brand\">\n                        <Link to=\"/\">\n                            <img src=\"/images/shopit_logo.png\" alt=\"icon\" />\n                        </Link>\n\n                    </div>\n                </div>\n\n                <div className=\"col-12 col-md-6 mt-2 mt-md-0\">\n                    <Route render={({ history }) => <Search history={history} />} />\n\n                </div>\n\n                <div className=\"col-12 col-md-3 mt-4 mt-md-0 text-center\">\n                    <Link to=\"/cart\" style={{ textDecoration: 'none' }}>\n                        <span id=\"cart\" className=\"ml-3\">Cart</span>\n                        <span className=\"ml-1\" id=\"cart_count\">{cartItems.length}</span>\n                    </Link>\n\n                    {user ? (\n                        <div className='ml-4 dropdown d-inline'>\n                            <Link to=\"#!\" className='btn dropdown-toggle text-white mr-4 mt-3'\n                                type=\"button\" id=\"dropDownMenuButton\" data-toggle='dropdown'\n                                area-aria-haspopup=\"true\" aria-expanded=\"false\">\n\n                                <figure className=\"avatar.avatar-nav\">\n                                    <img src={user.avatar && user.avatar.url} \n                                        alt={user && user.name}\n                                        className=\"rounded-circle\"\n                                    /><span  style ={{marginLeft:\"12px\"}}>{user && user.name}</span>\n                                </figure>\n\n                                \n                            </Link>\n\n                            <div className='dropdown-menu'  aria-labelledby='dropDownMenuButton'>\n                                {user && user.role === 'admin' && (\n                                    <Link  className='dropdown-item' to=\"/dashboard\">Dashboard</Link>\n                                ) }\n                                  <Link className='dropdown-item' to=\"/orders/me\">Orders</Link>\n                                 <Link className='dropdown-item' to=\"/me\">Profile</Link>\n                                <Link className='dropdown-item  text-danger' to=\"/\" onClick={logoutHandler}>\n                                    Logout\n                                </Link>\n\n                        </div>\n                        </div>\n\n                    ) : !loading && <Link to=\"/login\" className=\"btn ml-4\" id=\"login_btn\">Login</Link>\n                    }\n\n\n                </div>\n            </nav>\n       </Fragment>\n    )\n\n}\n\nexport default Header;","import React from 'react'\n\nconst Loader = () => {\n    return (\n        <div className=\"loader\"> </div>\n    )\n}\n\nexport default Loader;","export const ADD_TO_CART = 'ADD_TO_CART'\nexport const REMOVE_ITEM_CART = 'REMOVE_ITEM_CART'\nexport const SAVE_SHIPPING_INFO = 'SAVE_SHIPPING_INFO'\n\n","import axios from 'axios'\n\nimport { ADD_TO_CART, REMOVE_ITEM_CART, SAVE_SHIPPING_INFO } from \"../constants/cartConstant\";\n\n\nexport const addItemToCart = (id,quantity) =>async(dispatch,getState)=>{\n    const {data} = await axios.get(`/api/v1/product/${id}`)\n    console.log(\"data\",data)\n\n\n    dispatch({\n        type : ADD_TO_CART,\n        payload : {\n            product : data.product._id,\n            name : data.product.name,\n            price: data.product.price,\n            image : data.product.images[0].url,\n            stock : data.product.stock,\n            quantity \n        }\n    })\n\n    localStorage.setItem('cartItems' , JSON.stringify(getState().cart.cartItems))\n\n}\n\n\n\nexport const removeItemFromCart = (id) =>async(dispatch,getState)=>{\n    // const {data} = await axios.get(`/api/v1/product/${id}`)\n    // console.log(\"data\",data)\n\n\n    dispatch({\n        type : REMOVE_ITEM_CART,\n        payload : id\n    })\n\n    localStorage.setItem('cartItems' , JSON.stringify(getState().cart.cartItems))\n\n}\n\n\nexport const saveShippingInfo = (data) => async (dispatch) => {\n\n    dispatch({\n        type: SAVE_SHIPPING_INFO,\n        payload: data\n    })\n\n    localStorage.setItem('shippingInfo', JSON.stringify(data))\n\n}","import { Fragment, useEffect, useState } from \"react\";\nimport { Carousel } from 'react-bootstrap'\nimport Loader from \"../layouts/Loader\";\nimport MetaData from \"../layouts/MetaData\";\n\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getProductDetails, clearErrors, newReview } from \"../../actions/productActions\";\nimport { addItemToCart } from \"../../actions/cartActions\";\nimport { NEW_REVIEW_RESET } from '../../constants/productConstants'\nimport ListReviews from \"../review/ListReviews\";\n\n\nconst ProductDetails = ({ match }) => {\n\n    const [quantity, setQuantity] = useState(1)\n    const [rating, setRating] = useState(0)\n    const [comment, setComment] = useState('')\n\n    const dispatch = useDispatch();\n    const alert = useAlert();\n\n    const { product, loading, error } = useSelector(state => state.productDetails)\n    // console.log(\"??????//\", product);\n\n\n    // console.log(\">>>>>>>>>>>>>>>>>>>>\", product);\n\n    const { error: reviewError, success } = useSelector(state => state.newReview)\n    const { user } = useSelector((state) => state.auth)\n    useEffect(() => {\n        dispatch(getProductDetails(match.params.id))\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (reviewError) {\n            alert.error(reviewError);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            alert.success('Review Posted successfully')\n            dispatch({ type: NEW_REVIEW_RESET })\n        }\n    }, [match.params.id, error, reviewError, alert, success, dispatch])\n\n\n    const addToCart = () => {\n        dispatch(addItemToCart(match.params.id, quantity));\n        alert.success('Item Added to Cart')\n    }\n\n\n    const increaseQty = () => {\n        const count = document.querySelector('.count')\n\n        if (count.valueAsNumber >= product.stock) return;\n\n        const qty = count.valueAsNumber + 1;\n        setQuantity(qty)\n    }\n\n    const decreaseQty = () => {\n\n        const count = document.querySelector('.count')\n\n        if (count.valueAsNumber <= 1) return;\n\n        const qty = count.valueAsNumber - 1;\n        setQuantity(qty)\n\n    }\n\n\n    const setUserRatings = () => {\n        const stars = document.querySelectorAll('.star')\n\n        stars.forEach((star, index) => {\n            star.starValue = index + 1;\n\n            ['click', 'mouseover', 'mouseout'].forEach(function (e) {\n                star.addEventListener(e, showRatings);\n            })\n        })\n\n\n        function showRatings(e) {\n            stars.forEach((star, index) => {\n                if (e.type === 'click') {\n                    if (index < this.starValue) {\n                        star.classList.add('orange');\n                        setRating(this.starValue)\n                    } else {\n                        star.classList.remove('orange');\n                    }\n\n\n                }\n                if (e.type === 'mouseover') {\n                    if (index < this.starValue) {\n                        star.classList.add('yellow');\n                    } else {\n                        star.classList.remove('yellow');\n                    }\n\n                }\n                if (e.type === 'mouseout') {\n                    star.classList.remove('yellow');\n                }\n            })\n        }\n    }\n\n    const reviewHandler = () => {\n\n        const formData = new FormData()\n\n        formData.set('rating', rating);\n        formData.set('comment', comment);\n        formData.set('productId', match.params.id);\n\n\n        dispatch(newReview(formData));\n        console.log(\"formData\", formData);\n        // alert.success(\"asdfhagsdfhg\")\n\n    }\n\n    return (\n\n\n\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={product?.name} />\n                    {/* {console.log(\"nameeeeeeeeeeeeeeeeee\",product?.product?.name)} */}\n                    <div className=\"row d-flex justify-content-around\">\n                        <div className=\"col-12 col-lg-5 img-fluid\" id=\"product_image\">\n                            {/* {console.log(<h1>product?.reviews[1]?.comment</h1>)} */}\n                            <Carousel pause='hover'>\n                                {product?.images?.map(image => (\n                                    <Carousel.Item key={image?.pubic_id}>\n                                        <img className=\"d-block w-100\" src={image.url} alt={product?.title} />\n                                    </Carousel.Item>\n                                ))}\n\n\n                            </Carousel>\n                        </div>\n\n                        <div className=\"col-12 col-lg-5 mt-5\">\n                            <h3>{product?.name}</h3>\n                            <p id=\"product_id\">Product # {product?._id}</p>\n\n                            <hr />\n\n                            {console.log(\"abcd\", product?.reviews)}\n\n                            <div className=\"rating-outer\">\n                                <div className=\"rating-inner\" style={{ width: `${(product?.ratings / 5) * 100}%` }}></div>\n                            </div>\n                            <span id=\"no_of_reviews\">({product?.numOfReviews} Reviews)</span>\n\n                            <hr />\n\n                            <p id=\"product_price\">${product?.price}</p>\n                            <div className=\"stockCounter d-inline\">\n                                <span className=\"btn btn-danger minus\" onClick={decreaseQty}>-</span>\n\n                                <input type=\"number\" className=\"form-control count d-inline\" value={quantity} readOnly />\n\n                                <span className=\"btn btn-primary plus\" onClick={increaseQty}>+</span>\n                            </div>\n                            <button type=\"button\" id=\"cart_btn\" className=\"btn btn-primary d-inline ml-4\" disabled={product?.stock === 0} onClick={addToCart}>Add to Cart</button>\n\n                            <hr />\n\n                            <p>Status: <span id=\"stock_status\" className={product?.stock > 0 ? 'greenColor' : 'redColor'} >{product?.stock > 0 ? 'In Stock' : 'Out of Stock'}</span></p>\n\n                            <hr />\n\n                            <h4 className=\"mt-2\">Description:</h4>\n                            <p>{product?.description}</p>\n                            <hr />\n                            <p id=\"product_seller mb-3\">Sold by: <strong>{product?.seller}</strong></p>\n\n\n                            {/* \n                            <h1>{product.product?.reviews[1]?.comment}</h1> */}\n\n                            {user ? <button id=\"review_btn\" type=\"button\" className=\"btn btn-primary mt-4\" data-toggle=\"modal\" data-target=\"#ratingModal\" onClick={setUserRatings}>\n                                Submit Your Review\n                            </button>\n                                :\n                                <div className=\"alert alert-danger mt-5\" type='alert'>Login to post your review.</div>\n                            }\n\n\n                            <div className=\"row mt-2 mb-5\">\n                                <div className=\"rating w-50\">\n\n                                    <div className=\"modal fade\" id=\"ratingModal\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ratingModalLabel\" aria-hidden=\"true\">\n                                        <div className=\"modal-dialog\" role=\"document\">\n                                            <div className=\"modal-content\">\n                                                <div className=\"modal-header\">\n\n                                                    <h5 className=\"modal-title\" id=\"ratingModalLabel\">Submit Review</h5>\n                                                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                                        <span aria-hidden=\"true\">&times;</span>\n                                                    </button>\n                                                </div>\n                                                <div className=\"modal-body\">\n\n                                                    <ul className=\"stars\" >\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                        <li className=\"star\"><i className=\"fa fa-star\"></i></li>\n                                                    </ul>\n\n                                                    <textarea\n                                                        name=\"review\"\n                                                        id=\"review\" className=\"form-control mt-3\"\n                                                        value={comment}\n                                                        onChange={(e) => setComment(e.target.value)}\n                                                    >\n\n                                                    </textarea>\n\n                                                    <button className=\"btn my-3 float-right review-btn px-4 text-white\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={reviewHandler}>Submit</button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    {/* {product?.reviews && product?.reviews?.length > 0 && (\n                      <ListReviews reviews = {product?.reviews} />\n                          \n                        \n                    )} */}\n\n                    {/* {product?.product?.reviews && product?.product?.reviews?.length  > 0 && (\n                      <ListReviews reviews = {product?.reviews} />\n                          \n                        \n                    )} */}\n\n                    {product?.reviews && product?.reviews?.length > 0 && (\n                        product?.reviews?.map(review => (\n                            <>\n                                <div className=\"rating-outer\">\n                                    <div className=\"rating-inner\" style={{ width: `${(review?.rating / 5) * 100}%` }}></div>\n                                </div>\n                                <p> {review?.name}</p>\n\n\n                                <p>{review?.comment}</p>\n                                <hr />\n\n                            </>\n\n                        ))\n                    )}\n\n                </Fragment>\n            )}\n        </Fragment>\n\n\n\n\n\n\n    )\n}\n\n\nexport default ProductDetails;\n\n\n\n","import { Fragment, useEffect, useState } from \"react\";\nimport Loader from \"../layouts/Loader\";\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { login, clearErrors } from '../../actions/userActions';\nimport { Link } from 'react-router-dom';\n\n\n\nconst Login = ({ history, location }) => {\n\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const alert = useAlert();\n\n  const dispatch = useDispatch();\n\n  const { isAuthenticated, error, loading } = useSelector(state => state.auth)\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  console.log(\"redirect\", redirect);\n\n  useEffect(() => {\n\n    if (isAuthenticated) {\n      history.push(redirect)\n    }\n\n\n    if (error) {\n      alert.error(error)\n      dispatch(clearErrors());\n    }\n\n  }, [dispatch, isAuthenticated, loading, error, history])\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(login(email, password))\n  }\n\n\n  return (\n    <Fragment>\n      {loading ? <Loader /> : (\n        <Fragment>\n          <MetaData title={'Login'} />\n          <div className=\"row wrapper\">\n            <div className=\"col-10 col-lg-5\">\n              <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                <h1 className=\"mb-3\">Login</h1>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email_field\">Email</label>\n                  <input\n                    type=\"email\"\n                    id=\"email_field\"\n                    className=\"form-control\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password_field\">Password</label>\n                  <input\n                    type=\"password\"\n                    id=\"password_field\"\n                    className=\"form-control\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </div>\n\n                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                <button\n                  id=\"login_button\"\n                  type=\"submit\"\n                  className=\"btn btn-block py-3\"\n                >\n                  LOGIN\n                </button>\n\n                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n              </form>\n            </div>\n          </div>\n\n        </Fragment>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Login;","import { Link } from \"react-router-dom\"\nimport { useSelector } from 'react-redux';\nimport { Fragment } from \"react\";\nimport Loader from \"../layouts/Loader\";\nimport MetaData from \"../layouts/MetaData\";\n\n\n\n\nconst Pofile = () => {\n    const { user, loading } = useSelector(state => state.auth)\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n\n                    <MetaData title={\"Your Profile\"} />\n\n                    <h2 className=\"mt-5 ml-5\">My Profile</h2>\n                    <div className=\"row justify-content-around mt-5 user-info\">\n                        <div className=\"col-12 col-md-3\">\n                            <figure className='avatar avatar-profile'>\n                                <img className=\"rounded-circle img-fluid\" src={user.avatar.url} alt={user.name } />\n                            </figure>\n                            <Link to=\"/me/update\" id=\"edit_profile\" className=\"btn btn-primary btn-block my-5\">\n                                Edit Profile\n                            </Link>\n                        </div>\n\n                        <div className=\"col-12 col-md-5\">\n                            <h4>Full Name</h4>\n                            <p>{user.name}</p>\n\n                            <h4>Email Address</h4>\n                            <p>{user.email}</p>\n\n                            <h4>Joined On</h4>\n                            <p>{String(user.createdAt).substring(0, 10)}</p>\n\n\n                            {user.role !== 'admin' && (\n                                <Link to=\"/orders/me\" className=\"btn btn-success btn-block mt-5\">\n                                    My Orders\n                                </Link>\n                            )}\n\n\n                            <Link to=\"/password/update\" className=\"btn btn-primary btn-block mt-3\">\n                                Change Password\n                            </Link>\n                        </div>\n                    </div>\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Pofile;","import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Fragment } from 'react';\n\n\n\nconst ProtectedRoute = ({isAdmin, component: Component, ...rest }) => {\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\n    console.log(\"data auth\",loading, user?.role);\n    return (\n        <Fragment>\n        {loading === false && (\n            <Route\n                {...rest}\n                render={props => {\n                    if (isAuthenticated === false) {\n                        return <Redirect to='/login' />\n                    }\n                  \n                    if(isAdmin == true && user.role !== 'admin'){\n                        return <Redirect to =\"/\" />\n                    }\n                   \n\n                    return <Component {...props} />\n                }}\n            />\n        )}\n    </Fragment>\n\n  \n\n\n    )\n}\n\n\nexport default ProtectedRoute;","import { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { register, clearErrors } from '../../actions/userActions';\n\n\n\n\n\n\n\nconst Register = ({ history }) => {\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: ''\n    })\n\n    const { name, email, password } = user;\n\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth)\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push('/')\n        }\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, isAuthenticated, loading, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('password', password);\n        formData.set('avatar', avatar);\n\n        dispatch(register(formData))\n     }\n\n     const onChange = e =>{\n         if(e.target.name === 'avatar'){\n\n            const reader = new FileReader();\n\n            reader.onload=()=>{\n                if(reader.readyState===2){\n                    setAvatarPreview(reader.result)\n                    setAvatar(reader.result)\n                }\n            }\n\n            reader.readAsDataURL(e.target.files[0])\n\n         } else{\n               setUser({...user, [e.target.name]: [e.target.value]})\n            }\n     }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Register User'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mb-3\">Register</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input \n                            type=\"name\" \n                            id=\"name_field\" \n                            className=\"form-control\"\n                            name = 'name'\n                            value={name}\n                            onChange = {onChange}  />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name = 'email'\n                                value={email}\n                                onChange = {onChange}\n\n                                // name='email'\n                                // value={email}\n                                // onChange={onChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password_field\">Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"password_field\"\n                                className=\"form-control\"\n                               name='password'\n                                value={password}\n                                onChange={onChange}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview }\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"images/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button\n                            id=\"register_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false}\n                        >\n                            REGISTER\n                        </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default Register;","import { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions';\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\n\n\nconst UpdateProfile = ({ history }) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth)\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar.url)\n        }\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('user updated sucessfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, loading, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n\n\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'update profile'} />\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input \n\t\t\t\t\t\t\t\ttype=\"name\" \n\t\t\t\t\t\t\t\tid=\"name_field\" \n\t\t\t\t\t\t\t\tclassName=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e)=>setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e)=>setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept=\"image/*\"\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\"\n                          disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default UpdateProfile;","import { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updatePassword, clearErrors } from '../../actions/userActions';\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\n\n\n\n\n\nconst UpdatePassword = ({history}) =>{\n\n    const [oldPassword, setOldPassword] = useState('')\n    \n    const [password, setPassword] = useState('')\n\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n \n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('Password updated sucessfully')\n           \n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PASSWORD_RESET\n            })\n        }\n\n    }, [dispatch, loading, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('oldPassword', oldPassword);\n        formData.set('password', password);\n      \n\n        dispatch(updatePassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Change Password'}/>\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mt-2 mb-5\">Update Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"old_password_field\">Old Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"old_password_field\"\n                                className=\"form-control\"\n                                value={oldPassword}\n                                onChange={(e)=>setOldPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"new_password_field\">New Password</label>\n                            <input\n                                type=\"password\"\n                                id=\"new_password_field\"\n                                className=\"form-control\"\n                                value={password}\n                                onChange={(e)=>setPassword(e.target.value)}\n                            />\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\"\n                            disabled={loading ? true : false} >Update Password</button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default UpdatePassword;","\n// import { Fragment, useEffect, useState } from \"react\";\n\n// import MetaData from \"../layouts/MetaData\";\n\n// import { useAlert } from \"react-alert\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { forgotPassword, clearErrors } from '../../actions/userActions';\n// import { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\n\n\n// const ForgotPassword = ({history}) =>{\n//     const [email, setEmail] = useState('')\n    \n\n\n\n//     const alert = useAlert();\n\n//     const dispatch = useDispatch();\n\n \n//     const { error, message , loading} = useSelector(state => state.ForgotPassword)\n\n//     useEffect(() => {\n\n\n\n//         if (error) {\n//             alert.error(error)\n//             dispatch(clearErrors());\n//         }\n\n//         if (message) {\n//             alert.success(message)\n//         }\n\n//     }, [dispatch, loading, error, message])\n\n//     const submitHandler = (e) => {\n//         e.preventDefault();\n\n//         const formData = new FormData();\n//         formData.set('email', email);\n    \n      \n\n//         dispatch(forgotPassword(formData))\n//     }\n\n//     return (\n//         <Fragment>\n//             <MetaData title={'Forgot Password'} />\n\n//             <div className=\"row wrapper\">\n//                 <div className=\"col-10 col-lg-5\">\n//                     <form className=\"shadow-lg\" onSubmit={submitHandler}>\n//                         <h1 className=\"mb-3\">Forgot Password</h1>\n//                         <div className=\"form-group\">\n//                             <label for=\"email_field\">Enter Email</label>\n//                             <input\n//                                 type=\"email\"\n//                                 id=\"email_field\"\n//                                 className=\"form-control\"\n//                                 value={email}\n//                                 onChange={(e)=>setEmail(e.target.value)}\n//                             />\n//                         </div>\n\n//                         <button\n//                             id=\"forgot_password_button\"\n//                             type=\"submit\"\n//                             className=\"btn btn-block py-3\" disabled={loading ? true :false}>\n//                             Send Email\n//                     </button>\n\n//                     </form>\n//                 </div>\n//             </div>\n\n//         </Fragment>\n//     )\n// }\n\n\n// export default ForgotPassword;\n\n\nimport React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (message) {\n            alert.success(message)\n        }\n\n    }, [dispatch, alert, error, message])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false} >\n                            Send Email\n                    </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword","\nimport { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPassword, clearErrors } from '../../actions/userActions';\n// import { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\n\n\n\n\n\nconst NewPassword= ({history , match})=>{\n\n    const [password, setPassword] = useState('')\n    const [confirmpassword, setConfirmPassword] = useState('')\n    \n\n\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n \n    const { error, success} = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Password updated successfully')\n            history.push('/login')\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmpassword', confirmpassword);\n    \n      \n\n        dispatch(resetPassword(match.params.token,formData))\n    }\n\n\n\n    return (\n        <Fragment>\n            <MetaData title={'New Password Reset'} />\n\n            <div className=\"row wrapper\">\n            <div className=\"col-10 col-lg-5\">\n                <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                    <h1 className=\"mb-3\">New Password</h1>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password_field\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password_field\"\n                            className=\"form-control\"\n                            value={password}\n                            onChange ={(e)=>setPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_password_field\"\n                            className=\"form-control\"\n                            value={confirmpassword}\n                            onChange ={(e)=>setConfirmPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <button\n                        id=\"new_password_button\"\n                        type=\"submit\"\n                        className=\"btn btn-block py-3\">\n                        Set Password\n                    </button>\n\n                </form>\n            </div>\n        </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default NewPassword;","import { Fragment } from 'react';\nimport {Link} from 'react-router-dom'\n\nimport MetaData from \"../layouts/MetaData\";\n\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addItemToCart,removeItemFromCart } from \"../../actions/cartActions\";\n\n\n\n\nconst Cart  = ({history})=>{\n    const dispatch = useDispatch();\n    const {cartItems} = useSelector(state=>state.cart)\n    // console.log(cartItems)\n \n    // console.log(cartItems.length)\n\n    const removeItemCartHandler = (id)=>{\n             dispatch(removeItemFromCart(id))\n    }\n\n    const increaseQty = (id, quantity, stock) => {\n      const newQty = quantity + 1;\n\n        if (newQty > stock) return;\n\n       dispatch(addItemToCart(id, newQty))\n    }\n\n    const decreaseQty = (id, quantity) => {\n\n        const newQty = quantity -1;\n\n        if (newQty <= 0) return;\n\n       dispatch(addItemToCart(id, newQty)) \n\n    }\n\n    const checkoutHandler = () => {\n        history.push('/login?redirect=ship')\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Your Cart'}/>\n            {cartItems.length ===0 ?  <h2 className='mt-5'>YOur Cart is Empty</h2> : (\n                <Fragment>\n                       <h2 className=\"mt-5\">Your Cart: <b>{cartItems.length}items</b></h2>\n        \n        <div className=\"row d-flex justify-content-between\">\n            <div className=\"col-12 col-lg-8\">\n                {cartItems.map(item=>(\n                      <Fragment>\n                          <hr/>\n\n                          <div className=\"cart-item\" key={item.product}>\n                    <div className=\"row\">\n                        <div className=\"col-4 col-lg-3\">\n                            <img src={item.image} alt=\"Laptop\" height=\"90\" width=\"115\"/>\n                        </div>\n\n                        <div className=\"col-5 col-lg-3\">\n                            <Link to={`/ products/${item.product}`}>{item.name}</Link>\n                        </div>\n\n\n                        <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                            <p id=\"card_item_price\">{item.price}</p>\n                        </div>\n\n                        <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                            <div className=\"stockCounter d-inline\">\n                                <span className=\"btn btn-danger minus\" onClick={()=>decreaseQty(item.product, item.quantity)}>-</span>\n                                <input type=\"number\" className=\"form-control count d-inline\" value={item.quantity} readOnly />\n\n\t\t\t\t\t\t\t\t<span className=\"btn btn-primary plus\" onClick={()=>increaseQty(item.product, item.quantity,item.stock)}>+</span>\n                            </div>\n                        </div>\n\n                        <div className=\"col-4 col-lg-1 mt-4 mt-lg-0\">\n                            <i id=\"delete_cart_item\" className=\"fa fa-trash btn btn-danger\" onClick={()=>removeItemCartHandler(item.product)}></i>\n                        </div>\n\n                    </div>\n                </div>\n                <hr />\n                      </Fragment>\n                ))}\n               \n            </div>\n\n            <div className=\"col-12 col-lg-3 my-4\">\n                <div id=\"order_summary\">\n                    <h4>Order Summary</h4>\n                    <hr />\n                    <p>Subtotal:  <span className=\"order-summary-values\">{cartItems.reduce((acc,item)=>(acc + Number(item.quantity)),0)} (Units)</span></p>\n                    <p>Est. total: <span className=\"order-summary-values\">${cartItems.reduce((acc,item)=>(acc + item.quantity * item.price),0).toFixed(2)}</span></p>\n    \n                    <hr />\n                    <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={checkoutHandler}>Check out</button>\n                </div>\n            </div>\n        </div>\n                    </Fragment>\n            )}\n\n        </Fragment>\n    )\n}\n\n\nexport default Cart;","import { Fragment } from \"react\";\nimport {Link}  from 'react-router-dom'\n\nconst CheckoutSteps =({shipping, confirmOrder, payment}) =>{\n    return (\n        <div className=\"checkout-progress d-flex justify-content-center mt-5\">\n\n        {shipping ? <Link to='shippping' className=\"float-right\">\n            <div className=\"triangle2-active\"></div>\n            <div className=\"step active-step\">Shipping</div>\n            <div className=\"triangle-active\"></div>\n        </Link> : <Link to=\"#!\" disabled>\n                <div className=\"triangle2-incomplete\"></div>\n                <div className=\"step incomplete\">Shipping</div>\n                <div className=\"triangle-incomplete\"></div>\n            </Link>}\n\n        {confirmOrder ? <Link to='/order/confirm' className=\"float-right\">\n            <div className=\"triangle2-active\"></div>\n            <div className=\"step active-step\">Confirm Order</div>\n            <div className=\"triangle-active\"></div>\n        </Link> : <Link to=\"#!\" disabled>\n                <div className=\"triangle2-incomplete\"></div>\n                <div className=\"step incomplete\">Confirm Order</div>\n                <div className=\"triangle-incomplete\"></div>\n            </Link>}\n\n        {payment ? <Link to='/payment' className=\"float-right\">\n            <div className=\"triangle2-active\"></div>\n            <div className=\"step active-step\">Payment</div>\n            <div className=\"triangle-active\"></div>\n        </Link> : <Link to=\"#!\" disabled>\n                <div className=\"triangle2-incomplete\"></div>\n                <div className=\"step incomplete\">Payment</div>\n                <div className=\"triangle-incomplete\"></div>\n            </Link>}\n\n    </div>\n    )\n}\n\n\nexport default CheckoutSteps;","// import { Fragment, useState } from 'react';\n// import { Link } from 'react-router-dom'\n\n// import MetaData from \"../layouts/MetaData\";\n// import { countries } from 'countries-list';\n\n\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { saveShippingInfo } from \"../../actions/cartActions\";\n\n\n\n\n\n// const Shipping = ({ history }) => {\n\n//     const countriesList = Object.values(countries)\n\n//     const { ShippingInfo } = useSelector(state => state.cart)\n//     const [address, setAddress] = useState(ShippingInfo.address)\n//     const [city, setCity] = useState(ShippingInfo.city)\n//     const [postalCode, setPostalCode] = useState(ShippingInfo.postalCode)\n//     const [phoneNo, setPhoneNo] = useState(ShippingInfo.phoneNo)\n//     const [country, setCountry] = useState(ShippingInfo.country)\n\n//     const dispatch = useDispatch();\n\n//     const submitHandler = (e) => {\n//         e.preventDefault()\n\n//         dispatch(saveShippingInfo({ address, city, postalCode, phoneNo, country }))\n//         history.push('/confirm')\n//     }\n//     return (\n//         <Fragment>\n//             <MetaData title={'Shipping Info'} />\n\n//             <div className=\"row wrapper\">\n//                 <div className=\"col-10 col-lg-5\">\n//                     <form className=\"shadow-lg\" onSubmit={submitHandler}>\n//                         <h1 className=\"mb-4\">Shipping Info</h1>\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"address_field\">Address</label>\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"address_field\"\n//                                 className=\"form-control\"\n//                                 value={address}\n//                                 onChange={(e) => setAddress(e.target.value)}\n//                                 required\n//                             />\n//                         </div>\n\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"city_field\">City</label>\n//                             <input\n//                                 type=\"text\"\n//                                 id=\"city_field\"\n//                                 className=\"form-control\"\n//                                 value={city}\n//                                 onChange={(e) => setCity(e.target.value)}\n//                                 required\n//                             />\n//                         </div>\n\n//                         <div className=\"form-group\">\n//                             <label htmlFor=\"phone_field\">Phone No</label>\n//                             <input\n//                                 type=\"phone\"\n//                                 id=\"phone_field\"\n//                                 className=\"form-control\"\n//                                 value={phoneNo}\n//                                 onChange={(e) => setPhoneNo(e.target.value)}\n//                                 required\n//                             />\n//                         </div>\n\n//                         <div className=\"form-group\">\n//                             <label for=\"postal_code_field\">Postal Code</label>\n//                             <input\n//                                 type=\"number\"\n//                                 id=\"postal_code_field\"\n//                                 className=\"form-control\"\n//                                 value={postalCode}\n//                                 onChange={(e) => setPostalCode(e.target.value)}\n//                                 required\n//                             />\n//                         </div>\n\n//                         <div className=\"form-group\">\n//                             <label for=\"country_field\">Country</label>\n//                             <select\n//                                 id=\"country_field\"\n//                                 className=\"form-control\"\n//                                 value={country}\n//                                 onChange={(e) => setCountry(e.target.value)}\n\n//                                 required\n//                             >\n//                                 {countriesList.map(country => (\n//                                     <option key={country.name} value={country.name}>\n//                                       {country.name}\n//                                     </option>\n\n//                                 ))}\n\n\n//                             </select>\n//                         </div>\n\n//                         <button\n//                             id=\"shipping_btn\"\n//                             type=\"submit\"\n//                             className=\"btn btn-block py-3\"\n//                         >\n//                             CONTINUE\n//                         </button>\n//                     </form>\n//                 </div>\n//             </div>\n\n//         </Fragment>\n//     )\n// }\n\n// export default Shipping;\n\nimport React, { Fragment, useState } from 'react'\nimport { countries } from 'countries-list'\n\nimport MetaData from '../layouts/MetaData'\nimport CheckoutSteps from './checkoutSteps'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { saveShippingInfo } from '../../actions/cartActions'\n\nconst Shipping = ({ history }) => {\n\n    const countriesList = Object.values(countries)\n\n    const { shippingInfo } = useSelector(state => state.cart)\n\n    const [address, setAddress] = useState(shippingInfo.address)\n    const [city, setCity] = useState(shippingInfo.city)\n    const [postalCode, setPostalCode] = useState(shippingInfo.postalCode)\n    const [phoneNo, setPhoneNo] = useState(shippingInfo.phoneNo)\n    const [country, setCountry] = useState(shippingInfo.country)\n\n    const dispatch = useDispatch();\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n\n        dispatch(saveShippingInfo({ address, city, phoneNo, postalCode, country }))\n        history.push('/order/confirm')\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'Shipping Info'} />\n\n            <CheckoutSteps shipping />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-4\">Shipping Info</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"address_field\">Address</label>\n                            <input\n                                type=\"text\"\n                                id=\"address_field\"\n                                className=\"form-control\"\n                                value={address}\n                                onChange={(e) => setAddress(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"city_field\">City</label>\n                            <input\n                                type=\"text\"\n                                id=\"city_field\"\n                                className=\"form-control\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"phone_field\">Phone No</label>\n                            <input\n                                type=\"phone\"\n                                id=\"phone_field\"\n                                className=\"form-control\"\n                                value={phoneNo}\n                                onChange={(e) => setPhoneNo(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"postal_code_field\">Postal Code</label>\n                            <input\n                                type=\"number\"\n                                id=\"postal_code_field\"\n                                className=\"form-control\"\n                                value={postalCode}\n                                onChange={(e) => setPostalCode(e.target.value)}\n                                required\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"country_field\">Country</label>\n                            <select\n                                id=\"country_field\"\n                                className=\"form-control\"\n                                value={country}\n                                onChange={(e) => setCountry(e.target.value)}\n                                required\n                            >\n\n                                {countriesList.map(country => (\n                                    <option key={country.name} value={country.name}>\n                                        {country.name}\n                                    </option>\n                                ))}\n\n                            </select>\n                        </div>\n\n                        <button\n                            id=\"shipping_btn\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                        >\n                            CONTINUE\n                            </button>\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default Shipping","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\n\nimport MetaData from '../layouts/MetaData'\nimport CheckoutSteps from './checkoutSteps'\n\nimport { useSelector } from 'react-redux'\n\n\n\n\n\n\nconst ConfirmOrder = ({ history }) => {\n\n    const { cartItems, shippingInfo } = useSelector(state => state.cart)\n    const { user } = useSelector(state => state.auth)\n\n    //calculate order Prices\n\n    const itemsPrice = cartItems.reduce((acc, item) => acc + item.price * item.quantity, 0)\n    const shippingPrice = itemsPrice > 200 ? 0 : 25\n    const taxPrice = Number((0.05 * itemsPrice).toFixed(2))\n    const totalPrice = (itemsPrice + shippingPrice + taxPrice).toFixed(2)\n\n\n    const processToPayment=()=>{\n        const data = {\n            itemsPrice : itemsPrice.toFixed(2),\n            shippingPrice ,\n            taxPrice,\n            totalPrice\n        }\n\n        sessionStorage.setItem('orderInfo' , JSON.stringify(data))\n        history.push('/payment')\n    }\n    return (\n        <Fragment>\n            <MetaData title={\"Confirm Order\"} />\n            <CheckoutSteps shipping confirmOrder />\n\n            <div className=\"row d-flex justify-content-between\">\n                <div className=\"col-12 col-lg-8 mt-5 order-confirm\">\n\n                    <h4 className=\"mb-3\">Shipping Info</h4>\n                    <p><b>Name:</b>{user && user.name}</p>\n                    <p><b>Phone:</b>{shippingInfo.phoneNo}</p>\n                    <p className=\"mb-4\"><b>Address:</b> {`${shippingInfo.address},${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`}</p>\n\n                    <hr />\n                    <h4 className=\"mt-4\">Your Cart Items:</h4>\n\n                    {cartItems?.map(item => (\n                        <Fragment>\n                            <hr />\n                            <div className=\"cart-item my-1\" key={item?.product}>\n                                <div className=\"row\">\n                                    <div className=\"col-4 col-lg-2\">\n                                        <img src={item?.image} alt=\"Laptop\" height=\"45\" width=\"65\" />\n                                    </div>\n\n                                    <div className=\"col-5 col-lg-6\">\n                                        <Link to={`/product/${item?.product}`}>{item?.name}</Link>\n                                    </div>\n\n\n                                    <div className=\"col-4 col-lg-4 mt-4 mt-lg-0\">\n                                    <p>{item?.quantity} x ${item?.price} = <b>${(item?.quantity * item?.price).toFixed(2)}</b></p>\n                                    </div>\n\n                                </div>\n                            </div>\n                            <hr />\n                        </Fragment>\n                    ))}\n\n\n\n                </div>\n\n                <div className=\"col-12 col-lg-3 my-4\">\n                    <div id=\"order_summary\">\n                        <h4>Order Summary</h4>\n                        <hr />\n                        <p>Subtotal:  <span className=\"order-summary-values\">${itemsPrice}</span></p>\n                        <p>Shipping: <span className=\"order-summary-values\">${shippingPrice}</span></p>\n                        <p>Tax:  <span className=\"order-summary-values\">${taxPrice}</span></p>\n\n                        <hr />\n\n                        <p>Total: <span className=\"order-summary-values\">${totalPrice}</span></p>\n\n                        <hr />\n                        <button id=\"checkout_btn\" className=\"btn btn-primary btn-block\" onClick={processToPayment}>Proceed to Payment</button>\n                    </div>\n                </div>\n\n\n            </div>\n            {/* <h1>hsfadjjjjjjjjjjjjjjjjj</h1> */}\n\n        </Fragment>\n    )\n}\n\n\nexport default ConfirmOrder;\n\n","export const CREATE_ORDER_REQUEST = \"CREATE_ORDER_REQUEST\"\nexport const CREATE_ORDER_SUCCESS = \"CREATE_ORDER_SUCCESS\"\nexport const CREATE_ORDER_FAIL = \"CREATE_ORDER_FAIL\"\n\nexport const MY_ORDERS_REQUEST = \"MY_ORDERS_REQUEST\"\nexport const MY_ORDERS_SUCCESS = \"MY_ORDERS_SUCCESS\"\nexport const MY_ORDERS_FAIL = \"MY_ORDERS_FAIL\"\n\nexport const ALL_ORDERS_REQUEST = \"ALL_ORDERS_REQUEST\"\nexport const ALL_ORDERS_SUCCESS = \"ALL_ORDERS_SUCCESS\"\nexport const ALL_ORDERS_FAIL = \"ALL_ORDERS_FAIL\"\n\nexport const UPDATE_ORDER_REQUEST = \"UPDATE_ORDER_REQUEST\"\nexport const UPDATE_ORDER_SUCCESS = \"UPDATE_ORDER_SUCCESS\"\nexport const UPDATE_ORDER_FAIL = \"UPDATE_ORDER_FAIL\"\nexport const UPDATE_ORDER_RESET = \"UPDATE_ORDER_RESET\"\n\nexport const DELETE_ORDER_REQUEST = \"DELETE_ORDER_REQUEST\"\nexport const DELETE_ORDER_SUCCESS = \"DELETE_ORDER_SUCCESS\"\nexport const DELETE_ORDER_FAIL = \"DELETE_ORDER_FAIL\"\nexport const DELETE_ORDER_RESET = \"DELETE_ORDER_RESET\"\n\nexport const ORDERS_DETAILS_REQUEST = \"ORDERS_DETAILS_REQUEST\"\nexport const ORDERS_DETAILS_SUCCESS = \"ORDERS_DETAILS_SUCCESS\"\nexport const ORDERS_DETAILS_FAIL = \"ORDERS_DETAILS_FAIL\"\n\n\n\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\"","import axios from 'axios'\nimport {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    // UPDATE_ORDER_RESET,\n    UPDATE_ORDER_FAIL,  \n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    // DELETE_ORDER_RESET,\n    DELETE_ORDER_FAIL,\n    ORDERS_DETAILS_REQUEST,\n    ORDERS_DETAILS_SUCCESS,\n    ORDERS_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstant'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CREATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/order/new', order, config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n\n\n    }\n}\n\n\n//Get Currently logged in user orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: MY_ORDERS_REQUEST });\n\n        const { data } = await axios.get('/api/v1/orders/me')\n        console.log(data,\"???????????\");\n\n        dispatch({\n            type: MY_ORDERS_SUCCESS,\n            payload: data.orders\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n//Get order details\nexport const getOrderDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ORDERS_DETAILS_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/order/${id}`)\n        console.log(data,\"???????????\");\n\n        dispatch({\n            type: ORDERS_DETAILS_SUCCESS,\n            payload: data.order\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ORDERS_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n//Get all orders - ADMIN\nexport const allOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_ORDERS_REQUEST });\n\n        const { data } = await axios.get(`/api/v1/admin/orders`)\n        console.log(data,\"???????????\");\n\n        dispatch({\n            type: ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n \n//update order\nexport const updateOrder = (id,orderData) => async (dispatch) => {\n    try {\n        dispatch({ type: UPDATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/order/${id}`, orderData, config)\n\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n\n\n    }\n}\n\n//deleted order\nexport const deleteOrder = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: DELETE_ORDER_REQUEST })\n\n        \n\n        const { data } = await axios.delete(`/api/v1/admin/order/${id}`)\n\n        dispatch({\n            type: UPDATE_ORDER_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n\n\n    }\n}\n\n\n\n//Clear Error\n\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n\n}","import React, { Fragment, useEffect } from 'react'\n\n\nimport MetaData from '../layouts/MetaData'\nimport CheckoutSteps from './checkoutSteps'\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {createOrder, clearErrors} from '../../actions/orderActions'\n\n\nimport { useStripe, useElements, CardNumberElement, CardExpiryElement, CardCvcElement } from '@stripe/react-stripe-js'\nimport axios from 'axios'\n\nconst options ={\n    style:{\n        base:{\n            fontSize : '16px'\n        },\n        invalid:{\n            color : '#9e2146'\n        }\n    }\n}\n\nconst Payment = ({history})=>{\n\n    const alert = useAlert();\n    const stripe = useStripe();\n    const elements = useElements();\n    const dispatch = useDispatch();\n\n    const {user} = useSelector(state=>state.auth)\n    const {cartItems, shippingInfo} = useSelector(state=>state.cart)\n    const {error} = useSelector(state=>state.newOrder)\n\n\n\n    useEffect(()=>{\n\n        if(error){\n            alert.error(error)\n            dispatch(clearErrors())\n        }\n\n    },[dispatch,alert,error])\n\n    const order ={\n        orderItems : cartItems,\n        shippingInfo \n    }\n\n    const orderInfo = JSON.parse(sessionStorage.getItem('orderInfo'))\n    if(orderInfo){\n        order.itemsPrice = orderInfo.itemsPrice\n        order.shippingPrice = orderInfo.shippingPrice\n        order.taxPrice = orderInfo.taxPrice\n        order.totalPrice= orderInfo.totalPrice\n    }\n\n    const paymentData = {\n        amount : Math.round(orderInfo.totalPrice * 100)\n    }\n\n  const submitHandler = async(e) =>{\n      e.preventDefault();\n\n      document.querySelector('#pay_btn').disabled = true;\n\n      let res;\n\n      try {\n\n        const config = {\n            headers:{\n                  'Content-Type' : 'application/json'\n            }\n        }\n\n        res = await axios.post('/api/v1/payment/process' , paymentData, config)\n\n        const clientSecret = res.data.client_secret;\n\n        if(!stripe || !elements){\n            return;\n        }\n\n        const result = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardNumberElement),\n                billing_details: {\n                    name: user.name,\n                    email: user.email\n                }\n            }\n        });\n\n        if (result.error) {\n            alert.error(result.error.message);\n            document.querySelector('#pay_btn').disabled = false;\n        } else {\n\n            // The payment is processed or not\n            if (result.paymentIntent.status === 'succeeded') {\n\n                order.paymentInfo = {\n                    id: result.paymentIntent.id,\n                    status: result.paymentIntent.status\n                }\n\n                dispatch(createOrder(order))\n\n                history.push('/success')\n            } else {\n                alert.error('There is some issue while payment processing')\n            }\n        }\n\n\n    } catch (error) {\n        document.querySelector('#pay_btn').disabled = false;\n        alert.error(error.response.data.message)\n    }\n}\n\n\n    return (\n        <Fragment>\n            <MetaData title={\"Payment\"}/>\n            <CheckoutSteps shipping confirmOrder payment />\n\n            <div className=\"row wrapper\">\n\t\t<div className=\"col-10 col-lg-5\">\n            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                <h1 className=\"mb-4\">Card Info</h1>\n                <div className=\"form-group\">\n                  <label htmlFor=\"card_num_field\">Card Number</label>\n                  <CardNumberElement\n                    type=\"text\"\n                    id=\"card_num_field\"\n                    className=\"form-control\"\n                    options = {options}\n                   \n                  />\n                </div>\n\t\t\t\t\n\t\t\t\t<div className=\"form-group\">\n                  <label htmlFor=\"card_exp_field\">Card Expiry</label>\n                  <CardExpiryElement\n                    type=\"text\"\n                    id=\"card_exp_field\"\n                    className=\"form-control\"\n                    options = {options}\n                \n                  />\n                </div>\n\t\t\t\t\n\t\t\t\t<div className=\"form-group\">\n                  <label htmlFor=\"card_cvc_field\">Card CVC</label>\n                  <CardCvcElement\n                    type=\"text\"\n                    id=\"card_cvc_field\"\n                    className=\"form-control\"\n                    options = {options}\n                   \n                  />\n                </div>\n      \n            \n                <button\n                  id=\"pay_btn\"\n                  type=\"submit\"\n                  className=\"btn btn-block py-3\"\n                >\n                  Pay {`-${orderInfo && orderInfo.totalPrice}`}\n                </button>\n    \n              </form>\n\t\t\t  </div>\n        </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default Payment;","import { Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport MetaData from \"../layouts/MetaData\";\n\n\n\nconst OrderSuccess = ()=>{\n    return (\n        <Fragment>\n            <MetaData title={'order success'}/>\n\n            <div className=\"row justify-content-center\">\n            <div className=\"col-6 mt-5 text-center\">\n                <img className=\"my-5 img-fluid d-block mx-auto\" src=\"/images/order_success.png\" alt=\"Order Success\" width=\"200\" height=\"200\" />\n\n                <h2>Your Order has been placed successfully.</h2>\n\n                <Link to=\"/orders/me\">Go to Orders</Link>\n            </div>\n\n        </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default OrderSuccess;","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { myOrders, clearErrors } from '../../actions/orderActions'\n\nconst ListOrders = () => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.myOrders);\n\n    useEffect(() => {\n        dispatch(myOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error])\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Num of Items',\n                    field: 'numOfItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                    sort: 'asc'\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numOfItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions:\n                    <Link to={`/order/${order._id}`} className=\"btn btn-primary\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n\n            <MetaData title={'My Orders'} />\n\n            <h1 className=\"my-5\">My Orders</h1>\n\n            {loading ? <Loader /> : (\n                <MDBDataTable\n                    data={setOrders()}\n                    className=\"px-3\"\n                    bordered\n                    striped\n                    hover\n                />\n            )}\n\n        </Fragment>\n    )\n}\n\nexport default ListOrders","import {Link} from 'react-router-dom'\n\n\n\nconst Sidebar =()=>{\n    return (\n        <div className=\"sidebar-wrapper\">\n                <nav id=\"sidebar\">\n                    <ul className=\"list-unstyled components\">\n                    <li>\n                        <Link to=\"/dashboard\"><i className=\"fas fa-tachometer-alt\"></i> Dashboard</Link>\n                    </li>\n            \n                    <li>\n                        <a href=\"#productSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\" className=\"dropdown-toggle\"><i\n                            className=\"fa fa-product-hunt\"></i> Products</a>\n                        <ul className=\"collapse list-unstyled\" id=\"productSubmenu\">\n                            <li>\n                            <Link to=\"/admin/products\"><i className=\"fas fa-clipboard-list\"></i> All</Link>\n                            </li>\n            \n                            <li>\n                            <Link to=\"/admin/product\"><i className=\"fas fa-plus\"></i> Create</Link>\n                            </li>\n                        </ul>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/orders\"><i className=\"fa fa-shopping-basket\"></i> Orders</Link>\n                    </li>\n\n                    <li>\n                        <Link to=\"/admin/users\"><i className=\"fa fa-users\"></i> Users</Link>\n                    </li>\n                    <li>\n                        <Link to=\"/admin/reviews\"><i className=\"fa fa-star\"></i> Reviews</Link>\n                    </li>\n            \n                </ul>\n                </nav>\n            </div>\n    )\n}\n\n\nexport default Sidebar;","import { Fragment, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\";\nimport { getAdminProducts } from '../../actions/productActions';\nimport { allOrders } from \"../../actions/orderActions\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from \"../layouts/Loader\";\nimport MetaData from \"../layouts/MetaData\";\nimport { allUsers } from \"../../actions/userActions\";\n\nconst Dashboard = () => {\n\n    const dispatch = useDispatch();\n\n    const {products} = useSelector(state=>state.products)\n    const {users} = useSelector(state=>state.allUsers)\n    const {orders, totalAmount, loading} = useSelector(state=>state.allOrders)\n    useEffect(()=>{\n          dispatch(getAdminProducts())\n          dispatch(allOrders())\n          dispatch(allUsers())\n    },[dispatch])\n\n    let outOfStock = 0;\n\n    products?.products?.forEach(product => {\n        if(product.stock === 0){\n             outOfStock +=1;\n        }\n    });\n    return (\n        <Fragment>\n            <div className=\"row\">'\n                <div className=\"col-5 col-md-2\">\n\n                    <Sidebar />\n                </div>\n                <div className=\"col-9 col-md-18\">\n                    <h1 className=\"my-9\">Dashboard</h1>\n                    {loading ? <Loader/> : (\n                        <Fragment>\n                            <MetaData title={'Admin Dashboard'}/>\n                            <div className=\"row pr-4\">\n                        <div className=\"col-xl-12 col-sm-12 mb-3\">\n                            <div className=\"card text-white bg-primary o-hidden h-100\">\n                                <div className=\"card-body\">\n                                    <div className=\"text-center card-font-size\">Total Amount<br /> <b>${totalAmount && totalAmount.toFixed(2)}</b>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row pr-4\">\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\n                            <div className=\"card text-white bg-success o-hidden h-100\">\n                                <div className=\"card-body\">\n                                    <div className=\"text-center card-font-size\">Products<br /> <b>{products?.products && products?.products?.length}</b></div>\n                                </div>\n                                <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/products\">\n                                    <span className=\"float-left\">View Details</span>\n                                    <span className=\"float-right\">\n                                        <i className=\"fa fa-angle-right\"></i>\n                                    </span>\n                                </Link>\n                            </div>\n                        </div>\n\n\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\n                            <div className=\"card text-white bg-danger o-hidden h-100\">\n                                <div className=\"card-body\">\n                                    <div className=\"text-center card-font-size\">Orders<br /> <b>{orders && orders?.length}</b></div>\n                                </div>\n                                <Link className=\"card-footer text-white clearfix small z-1\" to=\"/admin/orders\">\n                                    <span className=\"float-left\">View Details</span>\n                                    <span className=\"float-right\">\n                                        <i className=\"fa fa-angle-right\"></i>\n                                    </span>\n                                </Link>\n                            </div>\n                        </div>\n\n\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\n                            <div className=\"card text-white bg-info o-hidden h-100\">\n                                <div className=\"card-body\">\n                                    <div className=\"text-center card-font-size\">Users<br /> <b>{users && users.length}</b></div>\n                                </div>\n                                <Link className=\"card-footer text-white clearfix small z-1\" href=\"/admin/users\">\n                                    <span className=\"float-left\">View Details</span>\n                                    <span className=\"float-right\">\n                                        <i className=\"fa fa-angle-right\"></i>\n                                    </span>\n                                </Link>\n                            </div>\n                        </div>\n\n\n                        <div className=\"col-xl-3 col-sm-6 mb-3\">\n                            <div className=\"card text-white bg-warning o-hidden h-100\">\n                                <div className=\"card-body\">\n                                    <div className=\"text-center card-font-size\">Out of Stock<br /> <b>{outOfStock}</b></div>\n                                </div>\n                            </div>\n                        </div>\n                        </div>\n                        </Fragment>\n                    )}\n                  \n                    </div>\n                </div>\n            \n\n        </Fragment>\n    )\n}\n\n\nexport default Dashboard; ","import React, { Fragment, useState ,useEffect} from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport Sidebar from './Sidebar'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\n\n\n\n\nconst NewProduct = ({ history }) => {\n    const [name, setName] = useState(\"\")\n    const [price, setPrice] = useState('')\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('')\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('')\n    const [images, setImages] = useState([])\n    const [imagesPreview, setImagesPreview] = useState([])\n\n\n    const categories = [\n        \"Electronics\",\n        \"Cameras\",\n        \"Laptops\",\n        \"Accessories\",\n        \"Headphones\",\n        \"Food\",\n        \"Books\",\n        \"Clothes/Shoes\",\n        \"Beauty/Health\",\n        \"Sports\",\n        \"Outdoor\",\n        \"Home\",\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state?.newProduct);\n\n    useEffect(() => {\n\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products')\n            alert.success(\"Product created successfully\")\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n        const files = Array.from(e.target.files)\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n\n\n\n\n\n\n    }\n\n\n\n\n\n\n\n\n    return (\n      \n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">New Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                     </label>\n                                    </div>\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewProduct;\n\n","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProduct, getProductDetails, clearErrors } from '../../actions/productActions'\nimport { UPDATE_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst UpdateProduct = ({ match, history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n\n    const [oldImages, setOldImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, product } = useSelector(state => state?.productDetails)\n    const { loading, error: updateError, isUpdated } = useSelector(state => state?.product);\n    console.log()\n    const productId = match.params.id;\n\n    useEffect(() => {\n\n        if (product && product._id !== productId) {\n            dispatch(getProductDetails(productId));\n        } else {\n            setName(product?.name);\n           \n            setPrice(product?.price);\n            setDescription(product?.description);\n            setCategory(product?.category);\n            setSeller(product?.seller);\n            setStock(product?.stock)\n            setOldImages(product?.images)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (updateError) {\n            alert.error(updateError);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            history.push('/admin/products');\n            alert.success('Product updated successfully');\n            dispatch({ type: UPDATE_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, history, updateError, product, productId])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(updateProduct(product._id, formData))\n    }\n// debugger\n    const onChange = (e)=> {\n\n        const files = Array.from(e.target.files)\n        console.log(files);\n\n        setImagesPreview([]);\n        setImages([])\n        setOldImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'Update Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">Update Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category} onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                 </label>\n                                    </div>\n\n                                    {oldImages && oldImages.map(img => (\n                                        <img key={img} src={img.url} alt={img.url} className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    UPDATE\n                            </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateProduct","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allOrders, deleteOrder, clearErrors } from '../../actions/orderActions'\nimport { DELETE_ORDER_RESET } from '../../constants/orderConstant'\n\nconst OrdersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, orders } = useSelector(state => state.allOrders);\n    const { isDeleted } = useSelector(state => state.order)\n\n    useEffect(() => {\n        dispatch(allOrders());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('Order deleted successfully');\n            history.push('/admin/orders');\n            dispatch({ type: DELETE_ORDER_RESET })\n        }\n     \n\n    }, [dispatch, alert, error , isDeleted, history])\n\n    const deleteOrderHandler = (id) => {\n        dispatch(deleteOrder(id))\n    }\n\n    const setOrders = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Order ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'No of Items',\n                    field: 'numofItems',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Amount',\n                    field: 'amount',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Status',\n                    field: 'status',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        orders.forEach(order => {\n            data.rows.push({\n                id: order._id,\n                numofItems: order.orderItems.length,\n                amount: `$${order.totalPrice}`,\n                status: order.orderStatus && String(order.orderStatus).includes('Delivered')\n                    ? <p style={{ color: 'green' }}>{order.orderStatus}</p>\n                    : <p style={{ color: 'red' }}>{order.orderStatus}</p>,\n                actions: <Fragment>\n                    <Link to={`/admin/order/${order._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-eye\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={()=>deleteOrderHandler(order._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Orders'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Orders</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setOrders()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default OrdersList","import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, updateOrder, clearErrors } from '../../actions/orderActions'\nimport { UPDATE_ORDER_RESET } from '../../constants/orderConstant'\n\nconst ProcessOrder = ({ match }) => {\n\n    const [status, setStatus] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, order = {} } = useSelector(state => state.orderDetails)\n    const { shippingInfo, orderItems, paymentInfo, user, totalPrice, orderStatus } = order\n    const { error, isUpdated } = useSelector(state => state.order)\n\n    const orderId = match.params.id;\n\n    useEffect(() => {\n\n        dispatch(getOrderDetails(orderId))\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n\n        if (isUpdated) {\n            alert.success('Order updated successfully');\n            dispatch({ type: UPDATE_ORDER_RESET })\n        }\n\n    }, [dispatch, alert, error, isUpdated, orderId])\n\n\n    const updateOrderHandler = (id) => {\n\n        const formData = new FormData();\n        formData.set('status', status);\n\n        dispatch(updateOrder(id, formData))\n    }\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n    const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n\n    return (\n        <Fragment>\n            <MetaData title={`Process Order # ${order && order._id}`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        {loading ? <Loader /> : (\n                            <div className=\"row d-flex justify-content-around\">\n                                <div className=\"col-12 col-lg-7 order-details\">\n\n                                    <h2 className=\"my-5\">Order # {order._id}</h2>\n\n                                    <h4 className=\"mb-4\">Shipping Info</h4>\n                                    <p><b>Name:</b> {user && user.name}</p>\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                                    <p><b>Amount:</b> ${totalPrice}</p>\n\n                                    <hr />\n\n                                    <h4 className=\"my-4\">Payment</h4>\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n                                    <h4 className=\"my-4\">Stripe ID</h4>\n                                    <p><b>{paymentInfo && paymentInfo.id}</b></p>\n\n                                    <h4 className=\"my-4\">Order Status:</h4>\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n\n\n\n                                    <h4 className=\"my-4\">Order Items:</h4>\n\n                                    <hr />\n                                    <div className=\"cart-item my-1\">\n                                        {orderItems && orderItems.map(item => (\n                                            <div key={item.product} className=\"row my-5\">\n                                                <div className=\"col-4 col-lg-2\">\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                                </div>\n\n                                                <div className=\"col-5 col-lg-5\">\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                </div>\n\n\n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                    <p>${item.price}</p>\n                                                </div>\n\n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                    <p>{item.quantity} Piece(s)</p>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <hr />\n                                </div>\n\n                                <div className=\"col-12 col-lg-3 mt-5\">\n                                    <h4 className=\"my-4\">Status</h4>\n\n                                    <div className=\"form-group\">\n                                        <select\n                                            className=\"form-control\"\n                                            name='status'\n                                            value={status}\n                                            onChange={(e) => setStatus(e.target.value)}\n                                        >\n                                            <option value=\"Processing\">Processing</option>\n                                            <option value=\"Shipped\">Shipped</option>\n                                            <option value=\"Delivered\">Delivered</option>\n                                        </select>\n                                    </div>\n\n                                    <button className=\"btn btn-primary btn-block\" onClick={() => updateOrderHandler(order._id)}>\n                                        Update Status\n                                    </button>\n                                </div>\n\n                            </div>\n                        )}\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProcessOrder","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers,deleteUser,clearErrors } from '../../actions/userActions'\nimport { DELETE_USER_RESET } from '../../constants/userConstants'\n\nconst UsersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    const { isDeleted } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (isDeleted) {\n            alert.success('User deleted successfully');\n            history.push('/admin/users');\n            dispatch({ type: DELETE_USER_RESET })\n        }\n\n    }, [dispatch, alert, error,isDeleted,history])\n\n    const deleteUserHandler = (id) => {\n        dispatch(deleteUser(id))\n    }\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'User ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        users.forEach(user => {\n            data.rows.push({\n                id: user._id,\n                name: user.name,\n                email: user.email,\n                role: user.role,\n\n                actions: <Fragment>\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={()=>deleteUserHandler(user._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Users'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Users</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setUsers()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList","import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateUser, getUserDetails, clearErrors } from '../../actions/userActions'\nimport { UPDATE_USER_RESET } from '../../constants/userConstants'\n\nconst UpdateUser = ({ history, match }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [role, setRole] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, isUpdated } = useSelector(state => state.user);\n    const { user } = useSelector(state => state.userDetails)\n\n    const userId = match.params.id;\n\n    useEffect(() => {\n\n        // console.log(user && user._id !== userId);\n        if (user && user._id !== userId) {\n            dispatch(getUserDetails(userId))\n        } else {\n            setName(user.name);\n            setEmail(user.email);\n            setRole(user.role)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n\n            history.push('/admin/users')\n\n            dispatch({\n                type: UPDATE_USER_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated, userId, user])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('role', role);\n\n        dispatch(updateUser(user._id, formData))\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={`Update User`} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mt-2 mb-5\">Update User</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"name\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        name='name'\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        name='email'\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"role_field\">Role</label>\n\n                                    <select\n                                        id=\"role_field\"\n                                        className=\"form-control\"\n                                        name='role'\n                                        value={role}\n                                        onChange={(e) => setRole(e.target.value)}\n                                    >\n                                        <option value=\"user\">user</option>\n                                        <option value=\"admin\">admin</option>\n                                    </select>\n                                </div>\n\n                                <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" >Update</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UpdateUser ","import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews,deleteReviews, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const {loading, error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        // if (deleteError) {\n        //     alert.error(deleteError);\n        //     dispatch(clearErrors())\n        // }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId ,isDeleted])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReviews(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={()=> deleteReviewHandler(review._id)   }>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n\t\t\t\t\t\t\t\t    </button>\n                                </ form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                                <p className=\"mt-5 text-center\">No Reviews.</p>\n                            )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {productsReducer,productDetailsReducer ,newReviewReducer,productReviewsReducer,newProductReducer,productReducer ,reviewReducer} from './reducers/productReducers'\nimport { authReducer, userReducers,forgotPasswordReducer,allUsersReducer , userDetailsReducer ,} from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport {newOrderReducer, myOrdersReducer, orderDetailsReducer,allOrdersReducer ,orderReducer} from './reducers/orderReducers'\nimport Shipping from './components/cart/Shipping';\n\nconst reducer = combineReducers({\n products : productsReducer,\n productDetails : productDetailsReducer,\n product : productReducer,\n\n auth : authReducer,\n user : userReducers,\n allUsers : allUsersReducer,\n userDetails : userDetailsReducer,\n forgotPassword : forgotPasswordReducer,\n cart : cartReducer,\n newOrder : newOrderReducer,\n myOrders : myOrdersReducer,\n orderDetails : orderDetailsReducer,\n newReview : newReviewReducer,\n productReviews : productReviewsReducer,\n review :reviewReducer,\n newProduct : newProductReducer,\n allOrders : allOrdersReducer,\n order : orderReducer\n\n})\n\n\nlet initialState = {\n    cart: {\n        cartItems: localStorage.getItem('cartItems')\n            ? JSON.parse(localStorage.getItem('cartItems'))\n            : [],\n        shippingInfo: localStorage.getItem('shippingInfo')\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\n            : {}\n    }\n}\n\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store; \n\n\n// fragment\n// useEffect\n// thunk\n// export vs default export\n// package-lock.json // \n// formatting\n// git","import {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    CLEAR_ERRORS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_RESET,\n    NEW_REVIEW_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_RESET,\n    NEW_PRODUCT_FAIL,\n   \n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_RESET,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_RESET,\n    UPDATE_PRODUCT_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n    DELETE_REVIEW_FAIL\n\n} from '../constants/productConstants'\n\n\n\n\nexport const productsReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case ALL_PRODUCTS_REQUEST:\n        case ADMIN_PRODUCTS_REQUEST:\n            return {\n                loading: true,\n                products: []\n            }\n\n        case ALL_PRODUCTS_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload.products,\n                productsCount: action.payload.productsCount,\n                resPerPage: action.payload.resPerPage,\n                filteredProductsCount: action.payload.filteredProductsCount\n            }\n\n        case ADMIN_PRODUCTS_SUCCESS:\n            return {\n                loading: false,\n                products: action.payload\n            }\n\n        case ALL_PRODUCTS_FAIL:\n        case ADMIN_PRODUCTS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    \n\n\n    switch (action.type) {\n\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                product: action.payload.product,\n          \n            }\n\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                error: action?.payload?.product\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state\n    }\n}\n\nexport const newReviewReducer = (state = {}, action) => {\n    switch (action.type) {\n        case NEW_REVIEW_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case NEW_REVIEW_SUCCESS:\n\n            return {\n                loading: false,\n                product: action.payload\n            }\n        case NEW_REVIEW_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_REVIEW_RESET:\n            return {\n                ...state,\n                success: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\nexport const productReducer = (state = {}, action) => {\n    \n    \n    switch (action.type) {\n        case DELETE_PRODUCT_REQUEST:\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n        case DELETE_PRODUCT_SUCCESS:\n       \n\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n            case UPDATE_PRODUCT_SUCCESS:\n       \n\n                return {\n                    ...state,\n                    loading: false,\n                    isUpdated: action.payload\n                }    \n        case DELETE_PRODUCT_FAIL:\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_PRODUCT_RESET:\n       \n\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n            case UPDATE_PRODUCT_RESET :\n                return {\n                   ...state,\n                   isUpdated : false\n                }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\n\n\n\n\n\nexport const newProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case NEW_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case NEW_PRODUCT_SUCCESS:\n\n            return {\n                loading: false,\n                product: action.payload.product,\n                success: action.payload.success\n            }\n        case NEW_PRODUCT_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case NEW_PRODUCT_RESET:\n            return {\n                ...state,\n                success: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\n\n\n\nexport const productReviewsReducer = (state = { review: [] }, action) => {\n    switch (action.type) {\n        case GET_REVIEWS_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case GET_REVIEWS_SUCCESS:\n\n            return {\n                loading: false,\n                reviews: action.payload\n            }\n        case GET_REVIEWS_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const reviewReducer = (state = {}, action) => {\n    \n    \n    switch (action.type) {\n        case DELETE_REVIEW_REQUEST:\n        \n            return {\n                ...state,\n                loading: true,\n            }\n        case DELETE_REVIEW_SUCCESS:\n       \n\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n             \n        case DELETE_REVIEW_FAIL:\n        \n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case DELETE_REVIEW_RESET:\n       \n\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n           \n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\n\n","import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAIL,\n    LOAD_USER_REQUEST,\n    LOAD_USER_SUCCESS,\n    LOAD_USER_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    UPDATE_PASSWORD_REQUEST,\n    UPDATE_PASSWORD_SUCCESS,\n    UPDATE_PASSWORD_RESET,\n    UPDATE_PASSWORD_FAIL,\n    UPDATE_PROFILE_REQUEST,\n    UPDATE_PROFILE_SUCCESS,\n    UPDATE_PROFILE_RESET,\n    UPDATE_PROFILE_FAIL,\n    UPDATE_USER_REQUEST,\n    UPDATE_USER_SUCCESS,\n    UPDATE_USER_RESET,\n    UPDATE_USER_FAIL,\n    DELETE_USER_REQUEST,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_RESET,\n    DELETE_USER_FAIL,\n    FORGOT_PASSWORD_REQUEST,\n    FORGOT_PASSWORD_SUCCESS,\n    FORGOT_PASSWORD_FAIL,\n    NEW_PASSWORD_REQUEST,\n    NEW_PASSWORD_SUCCESS,\n    NEW_PASSWORD_FAIL,\n    ALL_USERS_REQUEST,\n    ALL_USERS_SUCCESS,\n    ALL_USERS_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n\nexport const authReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case LOGIN_REQUEST:\n        case REGISTER_USER_REQUEST:\n        case LOAD_USER_REQUEST:\n            return {\n                loading: true,\n                isAuthenticated: false,\n            }\n\n        case LOGIN_SUCCESS:\n        case REGISTER_USER_SUCCESS:\n        case LOAD_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isAuthenticated: true,\n                user: action.payload\n            }\n\n        case LOAD_USER_FAIL:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n\n            }\n\n\n        case LOGOUT_SUCCESS:\n            return {\n                loading: false,\n                isAuthenticated: false,\n                user: null\n            }\n\n        case LOGOUT_FAIL:\n            return {\n                ...state,\n                errror: action.payload\n            }\n\n\n        case LOGIN_FAIL:\n        case REGISTER_USER_FAIL:\n\n            return {\n                ...state,\n                loading: true,\n                isAuthenticated: false,\n                user: null,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                errror: null\n            }\n        default:\n            return state\n\n    }\n\n}\n\nexport const userReducers = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_PROFILE_REQUEST:\n        case UPDATE_PASSWORD_REQUEST:\n        case UPDATE_USER_REQUEST:\n        case DELETE_USER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n\n        case UPDATE_PROFILE_SUCCESS:\n        case UPDATE_PASSWORD_SUCCESS:\n        case UPDATE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_PROFILE_RESET:\n        case UPDATE_PASSWORD_RESET:\n        case UPDATE_USER_RESET:\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_USER_RESET:\n            return {\n                ...state,\n                isDeleted: false\n            }\n\n\n        case UPDATE_PROFILE_FAIL:\n        case UPDATE_PASSWORD_FAIL:\n        case UPDATE_USER_FAIL:\n        case DELETE_USER_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                errror: null\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const forgotPasswordReducer = (state = {}, action) => {\n    switch (action.type) {\n        case FORGOT_PASSWORD_REQUEST:\n        case NEW_PASSWORD_REQUEST:\n\n            return {\n                ...state,\n                loading: true,\n                error: null\n            }\n\n        case FORGOT_PASSWORD_SUCCESS:\n\n            return {\n                ...state,\n                loading: false,\n                message: action.payload\n            }\n\n        case NEW_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                success: action.payload\n            }\n\n        case FORGOT_PASSWORD_FAIL:\n        case NEW_PASSWORD_FAIL:\n\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                errror: null\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\nexport const allUsersReducer = (state = { users: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_USERS_REQUEST:\n\n            return {\n                ...state,\n                loading: true,\n\n            }\n\n\n        case ALL_USERS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                users: action.payload\n            }\n\n        case FORGOT_PASSWORD_FAIL:\n        case ALL_USERS_FAIL:\n\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                errror: null\n            }\n\n\n        default:\n            return state\n    }\n}\n\n\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case USER_DETAILS_REQUEST:\n\n            return {\n                ...state,\n                loading: true,\n\n            }\n\n\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                user: action.payload\n            }\n\n\n        case USER_DETAILS_FAIL:\n\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                errror: null\n            }\n\n\n        default:\n            return state\n    }\n}","import { ADD_TO_CART } from \"../constants/cartConstant\";\nimport {REMOVE_ITEM_CART, SAVE_SHIPPING_INFO} from \"../constants/cartConstant\"\n\nexport const cartReducer = (state = {cartItems : [], shippingInfo:{}}, action) =>{\n    switch (action.type) {\n        case ADD_TO_CART:\n           \n                const item = action.payload\n                console.log('item',item);\n\n                const isItemExist = state.cartItems.find(i=> i.product === item.product)\n\n                if(isItemExist){\n                    return {\n                        ...state,\n                        cartItems: state.cartItems.map(i => i.product ===isItemExist.product ? item: i )\n                    }\n\n                }else{\n                    return{\n                        ...state,\n                        cartItems:[...state.cartItems, item]\n                    }\n                }\n            \n            case REMOVE_ITEM_CART:\n                return{\n                    ...state,\n                    cartItems : state.cartItems.filter(i => i.product !== action.payload)\n                }\n                case SAVE_SHIPPING_INFO:\n                    return {\n                        ...state,\n                        shippingInfo: action.payload\n                    }\n            \n    \n        default:\n            return state;\n    }\n}","import {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ALL_ORDERS_REQUEST,\n    ALL_ORDERS_SUCCESS,\n    ALL_ORDERS_FAIL,\n    UPDATE_ORDER_REQUEST,\n    UPDATE_ORDER_SUCCESS,\n    UPDATE_ORDER_RESET,\n    UPDATE_ORDER_FAIL,\n    DELETE_ORDER_REQUEST,\n    DELETE_ORDER_SUCCESS,\n    DELETE_ORDER_RESET,\n    DELETE_ORDER_FAIL,\n    ORDERS_DETAILS_REQUEST,\n    ORDERS_DETAILS_SUCCESS,\n    ORDERS_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstant'\n\n\nexport const newOrderReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CREATE_ORDER_REQUEST:\n            return {\n                ...state,\n                liading: true\n            }\n\n        case CREATE_ORDER_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case CREATE_ORDER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport const myOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case MY_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case MY_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload\n            }\n\n        case MY_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n\n\nexport const orderDetailsReducer = (state = { order: {} }, action) => {\n    switch (action.type) {\n\n        case ORDERS_DETAILS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ORDERS_DETAILS_SUCCESS:\n            return {\n                loading: false,\n                order: action.payload\n            }\n\n        case ORDERS_DETAILS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\n\nexport const allOrdersReducer = (state = { orders: [] }, action) => {\n    switch (action.type) {\n\n        case ALL_ORDERS_REQUEST:\n            return {\n                loading: true\n            }\n\n        case ALL_ORDERS_SUCCESS:\n            return {\n                loading: false,\n                orders: action.payload.orders,\n                totalAmount: action.payload.totalAmount\n            }\n\n        case ALL_ORDERS_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const orderReducer = (state = {}, action) => {\n\n\n    switch (action.type) {\n\n        case UPDATE_ORDER_REQUEST:\n        case DELETE_ORDER_REQUEST:\n            return {\n                ...state,\n                loading: true,\n            }\n\n\n        case UPDATE_ORDER_SUCCESS:\n\n\n            return {\n                ...state,\n                loading: false,\n                isUpdated: action.payload\n            }\n\n        case DELETE_ORDER_SUCCESS:\n\n\n            return {\n                ...state,\n                loading: false,\n                isDeleted: action.payload\n            }\n\n        case UPDATE_ORDER_FAIL:\n        case DELETE_ORDER_FAIL:\n            return {\n                ...state,\n                error: action.payload\n            }\n\n        case UPDATE_ORDER_RESET:\n\n            return {\n                ...state,\n                isUpdated: false\n            }\n\n        case DELETE_ORDER_RESET:\n\n            return {\n                ...state,\n                isDeleted: false\n            }\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            }\n        default:\n            return state;\n    }\n}\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getOrderDetails, clearErrors } from '../../actions/orderActions'\n\n\n const OrderDetails=({match})=>{\n\n    const { loading, error, order ={}} = useSelector(state => state.orderDetails)\n         const alert = useAlert();\n    const dispatch = useDispatch();\n    const { shippingInfo,orderItems,paymentInfo,user,totalPrice,orderStatus } = order \n\n     useEffect(() => {\n        dispatch(getOrderDetails(match.params.id));\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n    }, [dispatch, alert, error, match.params.id])\n\n    const shippingDetails = shippingInfo && `${shippingInfo.address}, ${shippingInfo.city}, ${shippingInfo.postalCode}, ${shippingInfo.country}`\n\n        const isPaid = paymentInfo && paymentInfo.status === 'succeeded' ? true : false\n    \n\n    return (\n                <Fragment>\n                    <MetaData title={'Order Details'} />\n        \n                    {loading ? <Loader /> : (\n                        <Fragment>\n                            <div className=\"row d-flex justify-content-between\">\n                                <div className=\"col-12 col-lg-8 mt-5 order-details\">\n        \n                                    <h1 className=\"my-5\">Order # {order._id}</h1>\n        \n                                    <h4 className=\"mb-4\">Shipping Info</h4>\n                                    <p><b>Name:</b> {user && user.name}</p>\n                                    <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n                                    <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n                                    <p><b>Amount:</b> ${totalPrice}</p>\n        \n                                    <hr />\n        \n                                    <h4 className=\"my-4\">Payment</h4>\n                                    <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n        \n        \n                                    <h4 className=\"my-4\">Order Status:</h4>\n                                    <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n        \n        \n                                    <h4 className=\"my-4\">Order Items:</h4>\n        \n                                    <hr />\n                                    <div className=\"cart-item my-1\">\n                                        {orderItems && orderItems.map(item => (\n                                            <div key={item.product} className=\"row my-5\">\n                                                <div className=\"col-4 col-lg-2\">\n                                                    <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n                                                </div>\n        \n                                                <div className=\"col-5 col-lg-5\">\n                                                    <Link to={`/products/${item.product}`}>{item.name}</Link>\n                                                </div>\n        \n        \n                                                <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n                                                    <p>${item.price}</p>\n                                                </div>\n        \n                                                <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n                                                    <p>{item.quantity} Piece(s)</p>\n                                                </div>\n                                            </div>\n                                        ))}\n                                    </div>\n                                    <hr />\n                                </div>\n                            </div>\n                        </Fragment>\n                    )} \n        \n                </Fragment>\n            ) \n    \n}\nexport default OrderDetails\n// const OrderDetails = ({ match }) => {\n \n\n//     const { loading, error, order } = useSelector(state => state.orderDetails)\n//     console.log(\">>>>.\",order)\n//     // const { paymentInfo, user, totalPrice, orderStatus } = order;\n//    \n\n    // useEffect(() => {\n    //     dispatch(getOrderDetails(match.params.id));\n\n    //     if (error) {\n    //         alert.error(error);\n    //         dispatch(clearErrors())\n    //     }\n    // }, [dispatch, alert, error, match.params.id])\n\n//    \n//     return (\n//         <Fragment>\n//             <MetaData title={'Order Details'} />\n\n//             {loading ? <Loader /> : (\n//                 <Fragment>\n//                     <div className=\"row d-flex justify-content-between\">\n//                         <div className=\"col-12 col-lg-8 mt-5 order-details\">\n\n//                             <h1 className=\"my-5\">Order # {order._id}</h1>\n\n//                             <h4 className=\"mb-4\">Shipping Info</h4>\n//                             <p><b>Name:</b> {user && user.name}</p>\n//                             <p><b>Phone:</b> {shippingInfo && shippingInfo.phoneNo}</p>\n//                             <p className=\"mb-4\"><b>Address:</b>{shippingDetails}</p>\n//                             <p><b>Amount:</b> ${totalPrice}</p>\n\n//                             <hr />\n\n//                             <h4 className=\"my-4\">Payment</h4>\n//                             <p className={isPaid ? \"greenColor\" : \"redColor\"}><b>{isPaid ? \"PAID\" : \"NOT PAID\"}</b></p>\n\n\n//                             <h4 className=\"my-4\">Order Status:</h4>\n//                             <p className={order.orderStatus && String(order.orderStatus).includes('Delivered') ? \"greenColor\" : \"redColor\"} ><b>{orderStatus}</b></p>\n\n\n//                             <h4 className=\"my-4\">Order Items:</h4>\n\n//                             <hr />\n//                             <div className=\"cart-item my-1\">\n//                                 {orderItems && orderItems.map(item => (\n//                                     <div key={item.product} className=\"row my-5\">\n//                                         <div className=\"col-4 col-lg-2\">\n//                                             <img src={item.image} alt={item.name} height=\"45\" width=\"65\" />\n//                                         </div>\n\n//                                         <div className=\"col-5 col-lg-5\">\n//                                             <Link to={`/products/${item.product}`}>{item.name}</Link>\n//                                         </div>\n\n\n//                                         <div className=\"col-4 col-lg-2 mt-4 mt-lg-0\">\n//                                             <p>${item.price}</p>\n//                                         </div>\n\n//                                         <div className=\"col-4 col-lg-3 mt-4 mt-lg-0\">\n//                                             <p>{item.quantity} Piece(s)</p>\n//                                         </div>\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                             <hr />\n//                         </div>\n//                     </div>\n//                 </Fragment>\n//             )}\n\n//         </Fragment>\n//     ) \n// }\n\n// export default OrderDetails\n","import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getAdminProducts, clearErrors, deleteProduct } from '../../actions/productActions'\nimport { DELETE_PRODUCT_RESET } from '../../constants/productConstants'\nimport Sidebar from './Sidebar'\n\n\n\n\n\nconst ProductList = ({ history }) => {\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, products } = useSelector(state => state?.products);\n    const {error:deleteErrror, isDeleted} = useSelector(state=>state.product)\n\n    useEffect(() => {\n        dispatch(getAdminProducts());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteErrror) {\n            alert.deleteErrror(error);\n            dispatch(clearErrors())\n        }\n        if(isDeleted){\n            alert.success(\"Product Deleted Successfully\")\n            history.push(\"/admin/products\")\n            dispatch({type : 'DELETE_PRODUCT_RESET '})\n        }\n\n    }, [dispatch, alert, error ,deleteErrror, isDeleted, history])\n\n    const setProducts = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Prpce',\n                    field: 'price',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Stock',\n                    field: 'stock',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n\n                },\n            ],\n            rows: []\n        }\n// console.log(\"pro\",products.products);\n        products?.products?.forEach(product => {\n            data?.rows?.push({\n                id: product?._id,\n                name: product?.name,\n                price: `$${product?.price}`,\n                stock: product?.stock,\n                actions:\n                    <Fragment>\n                        <Link to={`/admin/product/${product?._id}`} className=\"btn btn-primary py-1 px-2\">\n                            <i className='fa fa-pencil'></i>\n                        </Link>\n\n                        <button style={{marginLeft: \"45px\", marginTop: \"-60px\"}} className='btn btn-danger py-1 px-6 ml-7' onClick={()=>deleteProductHandler(product._id)} >\n                            <i className='fa fa-trash'></i>\n                        </button>\n                    </Fragment>\n\n            })\n        })\n\n        return data;\n    }\n\n\n    const deleteProductHandler = (id)=>{\n        dispatch(deleteProduct(id))\n    }\n// console.log(\"KKKKKKKK\",products);\n    return (\n        <Fragment>\n            <MetaData title={'All Product'} />\n            <div className='row'>\n                <div className='col-12 col-md-2'>\n                    <Sidebar />\n\n                </div>\n                <div className='col-12 col-md-10'>\n                    <Fragment>\n                        <h1 className='my-5'>All Products</h1>\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setProducts()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n                    </Fragment>\n\n                </div>\n\n            </div>\n\n        </Fragment>\n    )\n}\n\n\nexport default ProductList;","import { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Home from './components/Home';\nimport Footer from './components/layouts/Footer';\nimport Header from './components/layouts/Header';\nimport ProductDetails from './components/product/productDetails';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile'\nimport ProtectedRoute from './components/route/ProtectedRoute';\nimport Register from './components/user/Register';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport { loadUser } from './actions/userActions'\nimport { useSelector } from 'react-redux';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport NewPassword from './components/user/NewPassword';\nimport Cart from './components/cart/Cart';\nimport Shipping from './components/cart/Shipping';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Payment from './components/cart/Payment'\nimport OrderSuccess from './components/cart/OrderSuccess'\nimport ListOrders from './components/order/ListOrders';\nimport Dashboard from './components/admin/Dashboard';\nimport NewProduct from './components/admin/NewProduct';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport OrderList from './components/admin/OrderList';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport UsersList from './components/admin/UsersList';\nimport UpdateUser from './components/admin/UpdateUser';\nimport ProductReviews from './components/admin/ProductReviews';\nimport store from './store'\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\n\n\n\n//Payments\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport OrderDetails from './components/order/OrderDetails';\nimport ProductList from './components/admin/ProductList';\n\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState()\n\n\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n      console.log(data.stripeApiKey)\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey();\n  }, [])\n  const { user, loading ,isAuthenticated } = useSelector(state => state.auth)\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <div className='container container-fluid'>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/search/:keyword\" component={Home} />\n          <Route path=\"/product/:id\" component={ProductDetails} exact />\n          <Route path=\"/cart\" component={Cart} exact />\n          <ProtectedRoute path=\"/ship\" component={Shipping} />\n          <ProtectedRoute path=\"/order/confirm\" component={ConfirmOrder} />\n          <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n          {stripeApiKey &&\n            <Elements stripe={loadStripe(stripeApiKey)}>\n              <ProtectedRoute path=\"/payment\" component={Payment} />\n            </Elements>\n          }\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n          <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n          <ProtectedRoute path=\"/me\" component={Profile} exact />\n          <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n          <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n          <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\n          <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n          <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n          <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductList} exact />\n          <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrderList} exact />\n          <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n          <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n          <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n          <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n          <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n          <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n\n\n        </div>\n        {/* {!loading && user.role !== 'admin' && (\n          <Footer />\n        )} */}\n\n{!loading && (!isAuthenticated || user.role !== 'admin') && (\n          <Footer />\n        )}\n\n\n      </div>\n\n    </Router>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './store'\n\nimport {positions, transitions, Provider as AlertProvider} from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst options = {\n  timeout : 5000,\n  position: positions.BOTTOM_CENTER,\n  transition : transitions.SCALE\n}\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <AlertProvider template={AlertTemplate} {...options}>\n    <App/>\n    </AlertProvider>\n    </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}