{"ast":null,"code":"var _jsxFileName = \"/home/ibm/shopit/frontend/src/components/user/NewPassword.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport MetaData from \"../layouts/MetaData\";\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPassword, clearErrors } from '../../actions/userActions'; // import { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPassword = _ref => {\n  _s();\n\n  let {\n    history,\n    match\n  } = _ref;\n  const [password, setPassword] = useState('');\n  const [confirmpassword, setConfirmPassword] = useState('');\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    error,\n    success\n  } = useSelector(state => state.ForgotPassword);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      alert.success('Password updated successfully');\n      history.push('/login');\n    }\n  }, [dispatch, alert, error, success, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('password', password);\n    formData.set('confirmpassword', confirmpassword);\n    dispatch(resetPassword(match.pasrams.token, formData));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"hellllllllllllllo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPassword, \"Hhl6M46cdYs2RGbBpgIYliCcLvU=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = NewPassword;\nexport default NewPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPassword\");","map":{"version":3,"names":["Fragment","useEffect","useState","MetaData","useAlert","useDispatch","useSelector","resetPassword","clearErrors","NewPassword","history","match","password","setPassword","confirmpassword","setConfirmPassword","alert","dispatch","error","success","state","ForgotPassword","push","submitHandler","e","preventDefault","formData","FormData","set","pasrams","token"],"sources":["/home/ibm/shopit/frontend/src/components/user/NewPassword.js"],"sourcesContent":["\nimport { Fragment, useEffect, useState } from \"react\";\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from \"react-alert\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { resetPassword, clearErrors } from '../../actions/userActions';\n// import { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\n\n\n\n\n\nconst NewPassword= ({history , match})=>{\n\n    const [password, setPassword] = useState('')\n    const [confirmpassword, setConfirmPassword] = useState('')\n    \n\n\n\n    const alert = useAlert();\n\n    const dispatch = useDispatch();\n\n \n    const { error, success} = useSelector(state => state.ForgotPassword)\n\n    useEffect(() => {\n\n\n\n        if (error) {\n            alert.error(error)\n            dispatch(clearErrors());\n        }\n\n        if (success) {\n            alert.success('Password updated successfully')\n            history.push('/login')\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('password', password);\n        formData.set('confirmpassword', confirmpassword);\n    \n      \n\n        dispatch(resetPassword(match.pasrams.token,formData))\n    }\n\n\n\n    return (\n        <Fragment>\n            {/* <MetaData title={'New Password Reset'} />\n\n            <div className=\"row wrapper\">\n            <div className=\"col-10 col-lg-5\">\n                <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                    <h1 className=\"mb-3\">New Password</h1>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password_field\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password_field\"\n                            className=\"form-control\"\n                            value={password}\n                            onChange ={(e)=>setPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"confirm_password_field\">Confirm Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirm_password_field\"\n                            className=\"form-control\"\n                            value={confirmpassword}\n                            onChange ={(e)=>setConfirmPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <button\n                        id=\"new_password_button\"\n                        type=\"submit\"\n                        className=\"btn btn-block py-3\">\n                        Set Password\n                    </button>\n\n                </form>\n            </div>\n        </div> */}\n<h1>hellllllllllllllo</h1>\n        </Fragment>\n    )\n}\n\n\nexport default NewPassword;"],"mappings":";;;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,2BAA3C,C,CACA;;;;AAOA,MAAMC,WAAW,GAAE,QAAqB;EAAA;;EAAA,IAApB;IAACC,OAAD;IAAWC;EAAX,CAAoB;EAEpC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD;EAKA,MAAMc,KAAK,GAAGZ,QAAQ,EAAtB;EAEA,MAAMa,QAAQ,GAAGZ,WAAW,EAA5B;EAGA,MAAM;IAAEa,KAAF;IAASC;EAAT,IAAoBb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACC,cAAhB,CAArC;EAEApB,SAAS,CAAC,MAAM;IAIZ,IAAIiB,KAAJ,EAAW;MACPF,KAAK,CAACE,KAAN,CAAYA,KAAZ;MACAD,QAAQ,CAACT,WAAW,EAAZ,CAAR;IACH;;IAED,IAAIW,OAAJ,EAAa;MACTH,KAAK,CAACG,OAAN,CAAc,+BAAd;MACAT,OAAO,CAACY,IAAR,CAAa,QAAb;IACH;EAEJ,CAdQ,EAcN,CAACL,QAAD,EAAWD,KAAX,EAAkBE,KAAlB,EAAyBC,OAAzB,EAAkCT,OAAlC,CAdM,CAAT;;EAgBA,MAAMa,aAAa,GAAIC,CAAD,IAAO;IACzBA,CAAC,CAACC,cAAF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAD,QAAQ,CAACE,GAAT,CAAa,UAAb,EAAyBhB,QAAzB;IACAc,QAAQ,CAACE,GAAT,CAAa,iBAAb,EAAgCd,eAAhC;IAIAG,QAAQ,CAACV,aAAa,CAACI,KAAK,CAACkB,OAAN,CAAcC,KAAf,EAAqBJ,QAArB,CAAd,CAAR;EACH,CAVD;;EAcA,oBACI,QAAC,QAAD;IAAA,uBAwCR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAxCQ;IAAA;IAAA;IAAA;EAAA,QADJ;AA4CH,CAzFD;;GAAMjB,W;UAQYL,Q,EAEGC,W,EAGSC,W;;;KAbxBG,W;AA4FN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}