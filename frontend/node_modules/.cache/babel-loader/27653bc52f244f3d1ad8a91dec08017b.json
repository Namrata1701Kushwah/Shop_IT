{"ast":null,"code":"var _jsxFileName = \"/home/ibm/shopit/frontend/src/components/route/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    isAuthenticated,\n    loading,\n    user\n  } = useSelector(state => state.auth);\n  console.log(\"data auth\", loading, user === null || user === void 0 ? void 0 : user.role);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading === false && /*#__PURE__*/_jsxDEV(Route, { ...rest,\n      render: props => {\n        if (isAuthenticated === false) {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 32\n          }, this);\n        }\n\n        if (isAdmin === true && user.role !== 'admin') {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 32\n          }, this);\n        }\n\n        return /*#__PURE__*/_jsxDEV(Component, { ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 28\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProtectedRoute, \"5r69LXG8DDnfY7zXqiiiVGBh/qA=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Route","Redirect","useSelector","Fragment","ProtectedRoute","component","Component","rest","isAuthenticated","loading","user","state","auth","console","log","role","props","isAdmin"],"sources":["/home/ibm/shopit/frontend/src/components/route/ProtectedRoute.js"],"sourcesContent":["import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Fragment } from 'react';\n\n\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => {\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\n    console.log(\"data auth\",loading, user?.role);\n    return (\n        <Fragment>\n        {loading === false && (\n            <Route\n                {...rest}\n                render={props => {\n                    if (isAuthenticated === false) {\n                        return <Redirect to='/login' />\n                    }\n\n                    if (isAdmin === true && user.role !== 'admin') {\n                        return <Redirect to=\"/\" />\n                    }\n\n                    return <Component {...props} />\n                }}\n            />\n        )}\n    </Fragment>\n\n\n    )\n}\n\n\nexport default ProtectedRoute;"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAIA,MAAMC,cAAc,GAAG,QAAuC;EAAA;;EAAA,IAAtC;IAAEC,SAAS,EAAEC,SAAb;IAAwB,GAAGC;EAA3B,CAAsC;EAC1D,MAAM;IAAEC,eAAF;IAAmBC,OAAnB;IAA4BC;EAA5B,IAAqCR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAtD;EACAC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBL,OAAxB,EAAiCC,IAAjC,aAAiCA,IAAjC,uBAAiCA,IAAI,CAAEK,IAAvC;EACA,oBACI,QAAC,QAAD;IAAA,UACCN,OAAO,KAAK,KAAZ,iBACG,QAAC,KAAD,OACQF,IADR;MAEI,MAAM,EAAES,KAAK,IAAI;QACb,IAAIR,eAAe,KAAK,KAAxB,EAA+B;UAC3B,oBAAO,QAAC,QAAD;YAAU,EAAE,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QAAP;QACH;;QAED,IAAIS,OAAO,KAAK,IAAZ,IAAoBP,IAAI,CAACK,IAAL,KAAc,OAAtC,EAA+C;UAC3C,oBAAO,QAAC,QAAD;YAAU,EAAE,EAAC;UAAb;YAAA;YAAA;YAAA;UAAA,QAAP;QACH;;QAED,oBAAO,QAAC,SAAD,OAAeC;QAAf;UAAA;UAAA;UAAA;QAAA,QAAP;MACH;IAZL;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAsBH,CAzBD;;GAAMZ,c;UACyCF,W;;;KADzCE,c;AA4BN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}