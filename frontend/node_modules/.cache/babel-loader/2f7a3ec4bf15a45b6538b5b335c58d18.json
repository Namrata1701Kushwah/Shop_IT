{"ast":null,"code":"var _jsxFileName = \"/home/ibm/shopit/frontend/src/components/route/ProtectedRoute.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProtectedRoute = _ref => {\n  _s();\n\n  let {\n    isAdmin,\n    component: Component,\n    ...rest\n  } = _ref;\n  const {\n    isAuthenticated,\n    loading,\n    user\n  } = useSelector(state => state.auth);\n  console.log(\"data auth\", loading, user === null || user === void 0 ? void 0 : user.role);\n  return (\n    /*#__PURE__*/\n    //     <Fragment>\n    //     {loading === false && (\n    //         <Route\n    //             {...rest}\n    //             render={props => {\n    //                 if (isAuthenticated === false) {\n    //                     return <Redirect to='/login' />\n    //                 }\n    //                 if(isAdmin == true && user.role !== 'admin'){\n    //                     return <Redirect to =\"/\" />\n    //                 }\n    //                 return <Component {...props} />\n    //             }}\n    //         />\n    //     )}\n    // </Fragment>\n    _jsxDEV(Fragment, {\n      children: loading === false && /*#__PURE__*/_jsxDEV(Route, { ...rest,\n        render: props => {\n          if (isAuthenticated === false) {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 36\n            }, this);\n          }\n\n          if (isAdmin === true && user.role !== 'admin') {\n            return /*#__PURE__*/_jsxDEV(Redirect, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 36\n            }, this);\n          }\n\n          return /*#__PURE__*/_jsxDEV(Component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 32\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(ProtectedRoute, \"5r69LXG8DDnfY7zXqiiiVGBh/qA=\", false, function () {\n  return [useSelector];\n});\n\n_c = ProtectedRoute;\nexport default ProtectedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["Route","Redirect","useSelector","Fragment","ProtectedRoute","isAdmin","component","Component","rest","isAuthenticated","loading","user","state","auth","console","log","role","props"],"sources":["/home/ibm/shopit/frontend/src/components/route/ProtectedRoute.js"],"sourcesContent":["import { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Fragment } from 'react';\n\n\n\nconst ProtectedRoute = ({isAdmin, component: Component, ...rest }) => {\n    const { isAuthenticated, loading, user } = useSelector(state => state.auth)\n    console.log(\"data auth\",loading, user?.role);\n    return (\n    //     <Fragment>\n    //     {loading === false && (\n    //         <Route\n    //             {...rest}\n    //             render={props => {\n    //                 if (isAuthenticated === false) {\n    //                     return <Redirect to='/login' />\n    //                 }\n                  \n    //                 if(isAdmin == true && user.role !== 'admin'){\n    //                     return <Redirect to =\"/\" />\n    //                 }\n                   \n\n    //                 return <Component {...props} />\n    //             }}\n    //         />\n    //     )}\n    // </Fragment>\n\n    <Fragment>\n            {loading === false && (\n                <Route\n                    {...rest}\n                    render={props => {\n                        if (isAuthenticated === false) {\n                            return <Redirect to='/login' />\n                        }\n\n                        if (isAdmin === true && user.role !== 'admin') {\n                            return <Redirect to=\"/\" />\n                        }\n\n                        return <Component {...props} />\n                    }}\n                />\n            )}\n        </Fragment>\n\n\n    )\n}\n\n\nexport default ProtectedRoute;"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAIA,MAAMC,cAAc,GAAG,QAA+C;EAAA;;EAAA,IAA9C;IAACC,OAAD;IAAUC,SAAS,EAAEC,SAArB;IAAgC,GAAGC;EAAnC,CAA8C;EAClE,MAAM;IAAEC,eAAF;IAAmBC,OAAnB;IAA4BC;EAA5B,IAAqCT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAtD;EACAC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBL,OAAxB,EAAiCC,IAAjC,aAAiCA,IAAjC,uBAAiCA,IAAI,CAAEK,IAAvC;EACA;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IAGA;IACA;IACA;IACA;IACA;IAEA,QAAC,QAAD;MAAA,UACSN,OAAO,KAAK,KAAZ,iBACG,QAAC,KAAD,OACQF,IADR;QAEI,MAAM,EAAES,KAAK,IAAI;UACb,IAAIR,eAAe,KAAK,KAAxB,EAA+B;YAC3B,oBAAO,QAAC,QAAD;cAAU,EAAE,EAAC;YAAb;cAAA;cAAA;cAAA;YAAA,QAAP;UACH;;UAED,IAAIJ,OAAO,KAAK,IAAZ,IAAoBM,IAAI,CAACK,IAAL,KAAc,OAAtC,EAA+C;YAC3C,oBAAO,QAAC,QAAD;cAAU,EAAE,EAAC;YAAb;cAAA;cAAA;cAAA;YAAA,QAAP;UACH;;UAED,oBAAO,QAAC,SAAD,OAAeC;UAAf;YAAA;YAAA;YAAA;UAAA,QAAP;QACH;MAZL;QAAA;QAAA;QAAA;MAAA;IAFZ;MAAA;MAAA;MAAA;IAAA;EArBA;AA0CH,CA7CD;;GAAMb,c;UACyCF,W;;;KADzCE,c;AAgDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}