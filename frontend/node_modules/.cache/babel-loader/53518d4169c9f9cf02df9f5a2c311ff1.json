{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, CLEAR_ERRORS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from '../constants/productConstants';\nexport const getProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.payload\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/products');\n    dispatch({\n      type: ALL_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Clear Error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","CLEAR_ERRORS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","getProducts","dispatch","type","data","get","id","payload","error","response","message","getProductDetails","clearErrors"],"sources":["/home/ibm/shopit/frontend/src/actions/productActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n    ALL_PRODUCTS_REQUEST , \n    ALL_PRODUCTS_SUCCESS, \n    ALL_PRODUCTS_FAIL,\n    CLEAR_ERRORS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL\n\n} from  '../constants/productConstants'\n\n\nexport const getProducts = ()=> async(dispatch)=>{\n    try {\n        dispatch({type :PRODUCT_DETAILS_REQUEST})\n        const {data} = await axios.get(`/api/v1/product/${id}`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload:data.payload\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ALL_PRODUCTS_FAIL,\n            payload : error.response.data.message\n        })\n        \n    }\n}\n\nexport const getProductDetails = (id)=> async(dispatch)=>{\n    try {\n        dispatch({type :ALL_PRODUCTS_REQUEST})\n        const {data} = await axios.get('/api/v1/products')\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload:data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ALL_PRODUCTS_FAIL,\n            payload : error.response.data.message\n        })\n        \n    }\n}\n\n\n//Clear Error\n\nexport const clearErrors = ()=>async(dispatch)=>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n    \n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,YAJJ,EAKIC,uBALJ,EAMIC,uBANJ,EAOIC,oBAPJ,QASQ,+BATR;AAYA,OAAO,MAAMC,WAAW,GAAG,MAAK,MAAMC,QAAN,IAAiB;EAC7C,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAEL;IAAP,CAAD,CAAR;IACA,MAAM;MAACM;IAAD,IAAS,MAAMX,KAAK,CAACY,GAAN,CAAW,mBAAkBC,EAAG,EAAhC,CAArB;IACAJ,QAAQ,CAAC;MACLC,IAAI,EAAEJ,uBADD;MAELQ,OAAO,EAACH,IAAI,CAACG;IAFR,CAAD,CAAR;EAKH,CARD,CAQE,OAAOC,KAAP,EAAc;IACZN,QAAQ,CAAC;MACLC,IAAI,EAAGP,iBADF;MAELW,OAAO,EAAGC,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM;IAFzB,CAAD,CAAR;EAKH;AACJ,CAhBM;AAkBP,OAAO,MAAMC,iBAAiB,GAAIL,EAAD,IAAO,MAAMJ,QAAN,IAAiB;EACrD,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAET;IAAP,CAAD,CAAR;IACA,MAAM;MAACU;IAAD,IAAS,MAAMX,KAAK,CAACY,GAAN,CAAU,kBAAV,CAArB;IACAH,QAAQ,CAAC;MACLC,IAAI,EAAER,oBADD;MAELY,OAAO,EAACH;IAFH,CAAD,CAAR;EAKH,CARD,CAQE,OAAOI,KAAP,EAAc;IACZN,QAAQ,CAAC;MACLC,IAAI,EAAGP,iBADF;MAELW,OAAO,EAAGC,KAAK,CAACC,QAAN,CAAeL,IAAf,CAAoBM;IAFzB,CAAD,CAAR;EAKH;AACJ,CAhBM,C,CAmBP;;AAEA,OAAO,MAAME,WAAW,GAAG,MAAI,MAAMV,QAAN,IAAiB;EAC5CA,QAAQ,CAAC;IACLC,IAAI,EAACN;EADA,CAAD,CAAR;AAIH,CALM"},"metadata":{},"sourceType":"module"}