{"ast":null,"code":"import _slicedToArray from\"/home/ibm/shopit/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";// import { Fragment, useEffect, useState } from \"react\";\n// import MetaData from \"../layouts/MetaData\";\n// import { useAlert } from \"react-alert\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { forgotPassword, clearErrors } from '../../actions/userActions';\n// import { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n// const ForgotPassword = ({history}) =>{\n//     const [email, setEmail] = useState('')\n//     const alert = useAlert();\n//     const dispatch = useDispatch();\n//     const { error, message , loading} = useSelector(state => state.ForgotPassword)\n//     useEffect(() => {\n//         if (error) {\n//             alert.error(error)\n//             dispatch(clearErrors());\n//         }\n//         if (message) {\n//             alert.success(message)\n//         }\n//     }, [dispatch, loading, error, message])\n//     const submitHandler = (e) => {\n//         e.preventDefault();\n//         const formData = new FormData();\n//         formData.set('email', email);\n//         dispatch(forgotPassword(formData))\n//     }\n//     return (\n//         <Fragment>\n//             <MetaData title={'Forgot Password'} />\n//             <div className=\"row wrapper\">\n//                 <div className=\"col-10 col-lg-5\">\n//                     <form className=\"shadow-lg\" onSubmit={submitHandler}>\n//                         <h1 className=\"mb-3\">Forgot Password</h1>\n//                         <div className=\"form-group\">\n//                             <label for=\"email_field\">Enter Email</label>\n//                             <input\n//                                 type=\"email\"\n//                                 id=\"email_field\"\n//                                 className=\"form-control\"\n//                                 value={email}\n//                                 onChange={(e)=>setEmail(e.target.value)}\n//                             />\n//                         </div>\n//                         <button\n//                             id=\"forgot_password_button\"\n//                             type=\"submit\"\n//                             className=\"btn btn-block py-3\" disabled={loading ? true :false}>\n//                             Send Email\n//                     </button>\n//                     </form>\n//                 </div>\n//             </div>\n//         </Fragment>\n//     )\n// }\n// export default ForgotPassword;\nimport React,{Fragment,useState,useEffect}from'react';import MetaData from\"../layouts/MetaData\";import{useAlert}from'react-alert';import{useDispatch,useSelector}from'react-redux';import{forgotPassword,clearErrors}from'../../actions/userActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ForgotPassword=function ForgotPassword(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var alert=useAlert();var dispatch=useDispatch();var _useSelector=useSelector(function(state){return state.forgotPassword;}),error=_useSelector.error,loading=_useSelector.loading,message=_useSelector.message;useEffect(function(){if(error){alert.error(error);dispatch(clearErrors());}if(message){alert.success(message);}},[dispatch,alert,error,message]);var submitHandler=function submitHandler(e){e.preventDefault();var formData=new FormData();formData.set('email',email);dispatch(forgotPassword(formData));};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(MetaData,{title:'Forgot Password'}),/*#__PURE__*/_jsx(\"div\",{className:\"row wrapper\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-10 col-lg-5\",children:/*#__PURE__*/_jsxs(\"form\",{className:\"shadow-lg\",onSubmit:submitHandler,children:[/*#__PURE__*/_jsx(\"h1\",{className:\"mb-3\",children:\"Forgot Password\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email_field\",children:\"Enter Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email_field\",className:\"form-control\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(\"button\",{id:\"forgot_password_button\",type:\"submit\",className:\"btn btn-block py-3\",disabled:loading?true:false,children:\"Send Email\"})]})})})]});};export default ForgotPassword;","map":{"version":3,"names":["React","Fragment","useState","useEffect","MetaData","useAlert","useDispatch","useSelector","forgotPassword","clearErrors","ForgotPassword","email","setEmail","alert","dispatch","state","error","loading","message","success","submitHandler","e","preventDefault","formData","FormData","set","target","value"],"sources":["/home/ibm/shopit/frontend/src/components/user/ForgotPassword.js"],"sourcesContent":["\n// import { Fragment, useEffect, useState } from \"react\";\n\n// import MetaData from \"../layouts/MetaData\";\n\n// import { useAlert } from \"react-alert\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { forgotPassword, clearErrors } from '../../actions/userActions';\n// import { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\n\n\n\n// const ForgotPassword = ({history}) =>{\n//     const [email, setEmail] = useState('')\n    \n\n\n\n//     const alert = useAlert();\n\n//     const dispatch = useDispatch();\n\n \n//     const { error, message , loading} = useSelector(state => state.ForgotPassword)\n\n//     useEffect(() => {\n\n\n\n//         if (error) {\n//             alert.error(error)\n//             dispatch(clearErrors());\n//         }\n\n//         if (message) {\n//             alert.success(message)\n//         }\n\n//     }, [dispatch, loading, error, message])\n\n//     const submitHandler = (e) => {\n//         e.preventDefault();\n\n//         const formData = new FormData();\n//         formData.set('email', email);\n    \n      \n\n//         dispatch(forgotPassword(formData))\n//     }\n\n//     return (\n//         <Fragment>\n//             <MetaData title={'Forgot Password'} />\n\n//             <div className=\"row wrapper\">\n//                 <div className=\"col-10 col-lg-5\">\n//                     <form className=\"shadow-lg\" onSubmit={submitHandler}>\n//                         <h1 className=\"mb-3\">Forgot Password</h1>\n//                         <div className=\"form-group\">\n//                             <label for=\"email_field\">Enter Email</label>\n//                             <input\n//                                 type=\"email\"\n//                                 id=\"email_field\"\n//                                 className=\"form-control\"\n//                                 value={email}\n//                                 onChange={(e)=>setEmail(e.target.value)}\n//                             />\n//                         </div>\n\n//                         <button\n//                             id=\"forgot_password_button\"\n//                             type=\"submit\"\n//                             className=\"btn btn-block py-3\" disabled={loading ? true :false}>\n//                             Send Email\n//                     </button>\n\n//                     </form>\n//                 </div>\n//             </div>\n\n//         </Fragment>\n//     )\n// }\n\n\n// export default ForgotPassword;\n\n\nimport React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from \"../layouts/MetaData\";\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { forgotPassword, clearErrors } from '../../actions/userActions'\n\nconst ForgotPassword = () => {\n\n    const [email, setEmail] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, loading, message } = useSelector(state => state.forgotPassword)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (message) {\n            alert.success(message)\n        }\n\n    }, [dispatch, alert, error, message])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('email', email);\n\n        dispatch(forgotPassword(formData))\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Forgot Password'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                        <h1 className=\"mb-3\">Forgot Password</h1>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Enter Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <button\n                            id=\"forgot_password_button\"\n                            type=\"submit\"\n                            className=\"btn btn-block py-3\"\n                            disabled={loading ? true : false} >\n                            Send Email\n                    </button>\n\n                    </form>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ForgotPassword"],"mappings":"+GACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAKA;AAEA;AAGA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAIA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAGA,MAAOA,MAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CAEA,MAAOC,SAAP,KAAqB,qBAArB,CAEA,OAASC,QAAT,KAAyB,aAAzB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,cAAT,CAAyBC,WAAzB,KAA4C,2BAA5C,C,wFAEA,GAAMC,eAAc,CAAG,QAAjBA,eAAiB,EAAM,CAEzB,cAA0BR,QAAQ,CAAC,EAAD,CAAlC,wCAAOS,KAAP,eAAcC,QAAd,eAEA,GAAMC,MAAK,CAAGR,QAAQ,EAAtB,CACA,GAAMS,SAAQ,CAAGR,WAAW,EAA5B,CAEA,iBAAoCC,WAAW,CAAC,SAAAQ,KAAK,QAAIA,MAAK,CAACP,cAAV,EAAN,CAA/C,CAAQQ,KAAR,cAAQA,KAAR,CAAeC,OAAf,cAAeA,OAAf,CAAwBC,OAAxB,cAAwBA,OAAxB,CAEAf,SAAS,CAAC,UAAM,CAEZ,GAAIa,KAAJ,CAAW,CACPH,KAAK,CAACG,KAAN,CAAYA,KAAZ,EACAF,QAAQ,CAACL,WAAW,EAAZ,CAAR,CACH,CAED,GAAIS,OAAJ,CAAa,CACTL,KAAK,CAACM,OAAN,CAAcD,OAAd,EACH,CAEJ,CAXQ,CAWN,CAACJ,QAAD,CAAWD,KAAX,CAAkBG,KAAlB,CAAyBE,OAAzB,CAXM,CAAT,CAaA,GAAME,cAAa,CAAG,QAAhBA,cAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GAEA,GAAMC,SAAQ,CAAG,GAAIC,SAAJ,EAAjB,CACAD,QAAQ,CAACE,GAAT,CAAa,OAAb,CAAsBd,KAAtB,EAEAG,QAAQ,CAACN,cAAc,CAACe,QAAD,CAAf,CAAR,CACH,CAPD,CASA,mBACI,MAAC,QAAD,yBACI,KAAC,QAAD,EAAU,KAAK,CAAE,iBAAjB,EADJ,cAGI,YAAK,SAAS,CAAC,aAAf,uBACI,YAAK,SAAS,CAAC,iBAAf,uBACI,cAAM,SAAS,CAAC,WAAhB,CAA4B,QAAQ,CAAEH,aAAtC,wBACI,WAAI,SAAS,CAAC,MAAd,6BADJ,cAEI,aAAK,SAAS,CAAC,YAAf,wBACI,cAAO,OAAO,CAAC,aAAf,yBADJ,cAEI,cACI,IAAI,CAAC,OADT,CAEI,EAAE,CAAC,aAFP,CAGI,SAAS,CAAC,cAHd,CAII,KAAK,CAAET,KAJX,CAKI,QAAQ,CAAE,kBAACU,CAAD,QAAOT,SAAQ,CAACS,CAAC,CAACK,MAAF,CAASC,KAAV,CAAf,EALd,EAFJ,GAFJ,cAaI,eACI,EAAE,CAAC,wBADP,CAEI,IAAI,CAAC,QAFT,CAGI,SAAS,CAAC,oBAHd,CAII,QAAQ,CAAEV,OAAO,CAAG,IAAH,CAAU,KAJ/B,wBAbJ,GADJ,EADJ,EAHJ,GADJ,CAiCH,CAhED,CAkEA,cAAeP,eAAf"},"metadata":{},"sourceType":"module"}