{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, ADMIN_PRODUCTS_REQUEST, ADMIN_PRODUCTS_SUCCESS, ADMIN_PRODUCTS_FAIL, GET_REVIEWS_REQUEST, GET_REVIEWS_SUCCESS, GET_REVIEWS_FAIL, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_RESET, NEW_REVIEW_FAIL, NEW_PRODUCT_REQUEST, NEW_PRODUCT_SUCCESS, NEW_PRODUCT_FAIL, CLEAR_ERRORS } from '../constants/productConstants';\nexport const getProducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let price = arguments.length > 2 ? arguments[2] : undefined;\n  let category = arguments.length > 3 ? arguments[3] : undefined;\n  let rating = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ALL_PRODUCTS_REQUEST\n      }); // let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}\n      // &price[gte]=${price[0]}`\n\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`;\n\n      if (category) {\n        //   console.log(\"Actionnnnnnnnnnnnnnnnnnnnnnnnnn\",category)\n        link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`;\n      }\n\n      const {\n        data\n      } = await axios.get(link); // console.log(\"===============================================\",data);\n\n      dispatch({\n        type: ALL_PRODUCTS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCTS_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  };\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; // Get product reviews\n\nexport const getProductReviews = id => async dispatch => {\n  try {\n    dispatch({\n      type: GET_REVIEWS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/reviews?id=${id}`); // console.log(\"NNNNNNNNNNNNNNNNNN\", data)\n\n    dispatch({\n      type: GET_REVIEWS_SUCCESS,\n      payload: data.reviews\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: GET_REVIEWS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    console.log(\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\", data);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const newProduct = productData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_PRODUCT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/product/new`, productData, config);\n    console.log(\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\", data);\n    dispatch({\n      type: NEW_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getAdminProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: ADMIN_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/admin/products`);\n    console.log(\"HHHHHHHHHHHHHH\", data);\n    dispatch({\n      type: ADMIN_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADMIN_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Clear Error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","ADMIN_PRODUCTS_REQUEST","ADMIN_PRODUCTS_SUCCESS","ADMIN_PRODUCTS_FAIL","GET_REVIEWS_REQUEST","GET_REVIEWS_SUCCESS","GET_REVIEWS_FAIL","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_RESET","NEW_REVIEW_FAIL","NEW_PRODUCT_REQUEST","NEW_PRODUCT_SUCCESS","NEW_PRODUCT_FAIL","CLEAR_ERRORS","getProducts","keyword","currentPage","price","category","rating","dispatch","type","link","data","get","payload","error","response","message","getProductDetails","id","getProductReviews","reviews","console","log","newReview","reviewData","config","headers","put","success","newProduct","productData","getAdminProducts","clearErrors"],"sources":["/home/ibm/shopit/frontend/src/actions/productActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_FAIL,\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_RESET,\n    NEW_REVIEW_FAIL,\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n\n    NEW_PRODUCT_FAIL,\n    CLEAR_ERRORS\n} from '../constants/productConstants'\n\n\nexport const getProducts = (keyword = \"\", currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n\n    try {\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        // let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}\n        // &price[gte]=${price[0]}`\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price\n        [1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            //   console.log(\"Actionnnnnnnnnnnnnnnnnnnnnnnnnn\",category)\n\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price\n            [1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n\n        const { data } = await axios.get(link)\n        // console.log(\"===============================================\",data);\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n        dispatch({ type: GET_REVIEWS_REQUEST })\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n        // console.log(\"NNNNNNNNNNNNNNNNNN\", data)\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n    } catch (error) {\n        console.log(error);\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const newReview = (reviewData) => async (dispatch) => {\n\n    try {\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': \"application/json\"\n            }\n        }\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n        console.log(\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\", data);\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n\n    try {\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': \"application/json\"\n            }\n        }\n        const { data } = await axios.put(`/api/v1/product/new`, productData, config)\n        console.log(\"}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}\", data);\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n\n\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n        const { data } = await axios.get(`/api/v1/admin/products`)\n        console.log(\"HHHHHHHHHHHHHH\", data);\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n\n    }\n}\n\n\n\n//Clear Error\n\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}