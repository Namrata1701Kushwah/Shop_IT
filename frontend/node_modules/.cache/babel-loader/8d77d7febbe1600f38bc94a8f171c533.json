{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, productDetailsReducer } from './reducers/productReducers';\nimport { authReducer, userReducers, forgotPasswordReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport Shipping from './components/cart/Shipping';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  auth: authReducer,\n  user: userReducers,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    ShippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store; // fragment\n// useEffect\n// thunk\n// export vs default export\n// package-lock.json // \n// formatting\n// git","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","productDetailsReducer","authReducer","userReducers","forgotPasswordReducer","cartReducer","Shipping","reducer","products","productDetails","auth","user","forgotPassword","cart","initialState","cartItems","localStorage","getItem","JSON","parse","ShippingInfo","middleware","store"],"sources":["/home/ibm/shopit/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {productsReducer,productDetailsReducer} from './reducers/productReducers'\nimport { authReducer, userReducers,forgotPasswordReducer} from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport Shipping from './components/cart/Shipping';\n\nconst reducer = combineReducers({\n products : productsReducer,\n productDetails : productDetailsReducer,\n auth : authReducer,\n user : userReducers,\n forgotPassword : forgotPasswordReducer,\n cart : cartReducer\n})\n\n\nlet initialState = {\n    cart : {\n        cartItems : localStorage.getItem('cartItems')\n        ? JSON.parse(localStorage.getItem('cartItems'))\n        : [],\n        ShippingInfo : localStorage.getItem('shippingInfo')\n        ? JSON.parse(localStorage.getItem('shippingInfo'))\n        :{}\n    }\n}\n\n\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store; \n\n\n// fragment\n// useEffect\n// thunk\n// export vs default export\n// package-lock.json // \n// formatting\n// git"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,eAAR,EAAwBC,qBAAxB,QAAoD,4BAApD;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAmCC,qBAAnC,QAA+D,yBAA/D;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,OAAO,GAAGX,eAAe,CAAC;EAC/BY,QAAQ,EAAGR,eADoB;EAE/BS,cAAc,EAAGR,qBAFc;EAG/BS,IAAI,EAAGR,WAHwB;EAI/BS,IAAI,EAAGR,YAJwB;EAK/BS,cAAc,EAAGR,qBALc;EAM/BS,IAAI,EAAGR;AANwB,CAAD,CAA/B;AAUA,IAAIS,YAAY,GAAG;EACfD,IAAI,EAAG;IACHE,SAAS,EAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACVC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADU,GAEV,EAHC;IAIHG,YAAY,EAAGJ,YAAY,CAACC,OAAb,CAAqB,cAArB,IACbC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAX,CADa,GAEd;EANE;AADQ,CAAnB;AAYA,MAAMI,UAAU,GAAG,CAACvB,KAAD,CAAnB;AACA,MAAMwB,KAAK,GAAG3B,WAAW,CAACY,OAAD,EAAUO,YAAV,EAAwBf,mBAAmB,CAACF,eAAe,CAAC,GAAGwB,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}