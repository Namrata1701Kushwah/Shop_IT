{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL, ORDERS_DETAILS_REQUEST, ORDERS_DETAILS_SUCCESS, ORDERS_DETAILS_FAIL, CLEAR_ERRORS } from '../constants/orderConstant';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/order/new', order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Get Currently logged in user orders\n\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/orders/me');\n    console.log(data, \"???????????\");\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Get order details\n// export const getOrderDetails = (id) => async (dispatch) => {\n//     try {\n//         dispatch({ type: ORDERS_DETAILS_REQUEST });\n//         const { data } = await axios.get(`/api/v1/order/${id}`)\n//         console.log(data,\"???????????\");\n//         dispatch({\n//             type: ORDERS_DETAILS_SUCCESS,\n//             payload: data.order\n//         })\n//     } catch (error) {\n//         dispatch({\n//             type: ORDERS_DETAILS_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n// //Clear Error\n// export const clearErrors = () => async (dispatch) => {\n//     dispatch({\n//         type: CLEAR_ERRORS\n//     })\n// }","map":{"version":3,"names":["axios","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ORDERS_DETAILS_REQUEST","ORDERS_DETAILS_SUCCESS","ORDERS_DETAILS_FAIL","CLEAR_ERRORS","createOrder","order","dispatch","getState","type","config","headers","data","post","payload","error","response","message","myOrders","get","console","log","orders"],"sources":["/home/ibm/shopit/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from 'axios'\nimport {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    ORDERS_DETAILS_REQUEST,\n    ORDERS_DETAILS_SUCCESS,\n    ORDERS_DETAILS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstant'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CREATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/order/new', order, config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n\n\n    }\n}\n\n\n//Get Currently logged in user orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: MY_ORDERS_REQUEST });\n\n        const { data } = await axios.get('/api/v1/orders/me')\n        console.log(data,\"???????????\");\n\n        dispatch({\n            type: MY_ORDERS_SUCCESS,\n            payload: data.orders\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\n//Get order details\n// export const getOrderDetails = (id) => async (dispatch) => {\n//     try {\n\n//         dispatch({ type: ORDERS_DETAILS_REQUEST });\n\n//         const { data } = await axios.get(`/api/v1/order/${id}`)\n//         console.log(data,\"???????????\");\n\n//         dispatch({\n//             type: ORDERS_DETAILS_SUCCESS,\n//             payload: data.order\n//         })\n\n//     } catch (error) {\n//         dispatch({\n//             type: ORDERS_DETAILS_FAIL,\n//             payload: error.response.data.message\n//         })\n//     }\n// }\n\n// //Clear Error\n\n// export const clearErrors = () => async (dispatch) => {\n//     dispatch({\n//         type: CLEAR_ERRORS\n//     })\n\n// }"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,iBAJJ,EAKIC,iBALJ,EAMIC,cANJ,EAOIC,sBAPJ,EAQIC,sBARJ,EASIC,mBATJ,EAUIC,YAVJ,QAWO,4BAXP;AAcA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAChE,IAAI;IACAD,QAAQ,CAAC;MAAEE,IAAI,EAAEd;IAAR,CAAD,CAAR;IAEA,MAAMe,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB;MADX;IADE,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMlB,KAAK,CAACmB,IAAN,CAAW,mBAAX,EAAgCP,KAAhC,EAAuCI,MAAvC,CAAvB;IAEAH,QAAQ,CAAC;MACLE,IAAI,EAAEb,oBADD;MAELkB,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAKH,CAhBD,CAgBE,OAAOG,KAAP,EAAc;IACZR,QAAQ,CAAC;MACLE,IAAI,EAAEZ,iBADD;MAELiB,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;IAFxB,CAAD,CAAR;EAMH;AACJ,CAzBM,C,CA4BP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOX,QAAP,IAAoB;EAC9C,IAAI;IAEAA,QAAQ,CAAC;MAAEE,IAAI,EAAEX;IAAR,CAAD,CAAR;IAEA,MAAM;MAAEc;IAAF,IAAW,MAAMlB,KAAK,CAACyB,GAAN,CAAU,mBAAV,CAAvB;IACAC,OAAO,CAACC,GAAR,CAAYT,IAAZ,EAAiB,aAAjB;IAEAL,QAAQ,CAAC;MACLE,IAAI,EAAEV,iBADD;MAELe,OAAO,EAAEF,IAAI,CAACU;IAFT,CAAD,CAAR;EAKH,CAZD,CAYE,OAAOP,KAAP,EAAc;IACZR,QAAQ,CAAC;MACLE,IAAI,EAAET,cADD;MAELc,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;IAFxB,CAAD,CAAR;EAIH;AACJ,CAnBM,C,CAsBP;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}