{"ast":null,"code":"var _jsxFileName = \"/home/ibm/shopit/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './components/Home';\nimport Footer from './components/layouts/Footer';\nimport Header from './components/layouts/Header';\nimport ProductDetails from './components/product/productDetails';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile';\nimport ProtectedRoute from './components/route/ProtectedRoute';\nimport Register from './components/user/Register';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport { loadUser } from './actions/userActions';\nimport { useSelector } from 'react-redux';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport NewPassword from './components/user/NewPassword';\nimport Cart from './components/cart/Cart';\nimport Shipping from './components/cart/Shipping';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Payment from './components/cart/Payment';\nimport OrderSuccess from './components/cart/OrderSuccess';\nimport ListOrders from './components/order/ListOrders';\nimport Dashboard from './components/admin/Dashboard';\nimport NewProduct from './components/admin/NewProduct';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport OrderList from './components/admin/OrderList';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport UsersList from './components/admin/UsersList';\nimport UpdateUser from './components/admin/UpdateUser';\nimport ProductReviews from './components/admin/ProductReviews';\nimport store from './store';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react'; //Payments\n\nimport { Elements } from '@stripe/react-stripe-js';\nimport { loadStripe } from '@stripe/stripe-js';\nimport OrderDetails from './components/order/OrderDetails';\nimport ProductList from './components/admin/ProductList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [stripeApiKey, setStripeApiKey] = useState();\n  useEffect(() => {\n    store.dispatch(loadUser());\n\n    async function getStripApiKey() {\n      const {\n        data\n      } = await axios.get('/api/v1/stripeapi');\n      console.log(data.stripeApiKey);\n      setStripeApiKey(data.stripeApiKey);\n    }\n\n    getStripApiKey();\n  }, []);\n  const {\n    user,\n    loading,\n    isAuthenticated\n  } = useSelector(state => state.auth);\n  return (\n    /*#__PURE__*/\n    //     <Router>\n    //       <div className=\"App\">\n    //         <Header />\n    //         <div className='container container-fluid'>\n    //           <Route path=\"/\" component={Home} exact />\n    //           <Route path=\"/search/:keyword\" component={Home} />\n    //           <Route path=\"/product/:id\" component={ProductDetails} exact />\n    //           <Route path=\"/cart\" component={Cart} exact />\n    //           <ProtectedRoute path=\"/ship\" component={Shipping} />\n    //           <ProtectedRoute path=\"/order/confirm\" component={ConfirmOrder} />\n    //           <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n    //           {stripeApiKey &&\n    //             <Elements stripe={loadStripe(stripeApiKey)}>\n    //               <ProtectedRoute path=\"/payment\" component={Payment} />\n    //             </Elements>\n    //           }\n    //           <Route path=\"/login\" component={Login} />\n    //           <Route path=\"/register\" component={Register} />\n    //           <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n    //           <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n    //           <ProtectedRoute path=\"/me\" component={Profile} exact />\n    //           <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n    //           <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n    //           <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\n    //           <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n    //           <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n    //           <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductList} exact />\n    //           <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrderList} exact />\n    //           <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n    //           <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n    //           <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n    //           <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n    //           <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n    //           <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n    //         </div>\n    //         {/* {!loading && user.role !== 'admin' && (\n    //           <Footer />\n    //         )} */}\n    // {!loading && (!isAuthenticated || user.role !== 'admin') && (\n    //           <Footer />\n    //         )}\n    //       </div>\n    //     </Router>\n    _jsxDEV(NewPassword, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }, this)\n  );\n}\n\n_s(App, \"sEbOEZmUazMDlLP0fPHBdAmjx3o=\", false, function () {\n  return [useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Router","Route","Home","Footer","Header","ProductDetails","Login","Profile","ProtectedRoute","Register","UpdateProfile","UpdatePassword","loadUser","useSelector","ForgotPassword","NewPassword","Cart","Shipping","ConfirmOrder","Payment","OrderSuccess","ListOrders","Dashboard","NewProduct","UpdateProduct","OrderList","ProcessOrder","UsersList","UpdateUser","ProductReviews","store","axios","useEffect","useState","Elements","loadStripe","OrderDetails","ProductList","App","stripeApiKey","setStripeApiKey","dispatch","getStripApiKey","data","get","console","log","user","loading","isAuthenticated","state","auth"],"sources":["/home/ibm/shopit/frontend/src/App.js"],"sourcesContent":["import { BrowserRouter as Router, Route } from 'react-router-dom'\n\nimport Home from './components/Home';\nimport Footer from './components/layouts/Footer';\nimport Header from './components/layouts/Header';\nimport ProductDetails from './components/product/productDetails';\nimport Login from './components/user/Login';\nimport Profile from './components/user/Profile'\nimport ProtectedRoute from './components/route/ProtectedRoute';\nimport Register from './components/user/Register';\nimport UpdateProfile from './components/user/UpdateProfile';\nimport UpdatePassword from './components/user/UpdatePassword';\nimport { loadUser } from './actions/userActions'\nimport { useSelector } from 'react-redux';\nimport ForgotPassword from './components/user/ForgotPassword';\nimport NewPassword from './components/user/NewPassword';\nimport Cart from './components/cart/Cart';\nimport Shipping from './components/cart/Shipping';\nimport ConfirmOrder from './components/cart/ConfirmOrder';\nimport Payment from './components/cart/Payment'\nimport OrderSuccess from './components/cart/OrderSuccess'\nimport ListOrders from './components/order/ListOrders';\nimport Dashboard from './components/admin/Dashboard';\nimport NewProduct from './components/admin/NewProduct';\nimport UpdateProduct from './components/admin/UpdateProduct';\nimport OrderList from './components/admin/OrderList';\nimport ProcessOrder from './components/admin/ProcessOrder';\nimport UsersList from './components/admin/UsersList';\nimport UpdateUser from './components/admin/UpdateUser';\nimport ProductReviews from './components/admin/ProductReviews';\nimport store from './store'\nimport axios from 'axios'\nimport { useEffect, useState } from 'react';\n\n\n\n//Payments\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport OrderDetails from './components/order/OrderDetails';\nimport ProductList from './components/admin/ProductList';\n\n\nfunction App() {\n\n  const [stripeApiKey, setStripeApiKey] = useState()\n\n\n\n  useEffect(() => {\n    store.dispatch(loadUser())\n\n    async function getStripApiKey() {\n      const { data } = await axios.get('/api/v1/stripeapi');\n      console.log(data.stripeApiKey)\n\n      setStripeApiKey(data.stripeApiKey)\n    }\n\n    getStripApiKey();\n  }, [])\n  const { user, loading ,isAuthenticated } = useSelector(state => state.auth)\n\n  return (\n//     <Router>\n//       <div className=\"App\">\n//         <Header />\n//         <div className='container container-fluid'>\n//           <Route path=\"/\" component={Home} exact />\n//           <Route path=\"/search/:keyword\" component={Home} />\n//           <Route path=\"/product/:id\" component={ProductDetails} exact />\n//           <Route path=\"/cart\" component={Cart} exact />\n//           <ProtectedRoute path=\"/ship\" component={Shipping} />\n//           <ProtectedRoute path=\"/order/confirm\" component={ConfirmOrder} />\n//           <ProtectedRoute path=\"/success\" component={OrderSuccess} />\n//           {stripeApiKey &&\n//             <Elements stripe={loadStripe(stripeApiKey)}>\n//               <ProtectedRoute path=\"/payment\" component={Payment} />\n//             </Elements>\n//           }\n\n//           <Route path=\"/login\" component={Login} />\n//           <Route path=\"/register\" component={Register} />\n//           <Route path=\"/password/forgot\" component={ForgotPassword} exact />\n//           <Route path=\"/password/reset/:token\" component={NewPassword} exact />\n//           <ProtectedRoute path=\"/me\" component={Profile} exact />\n//           <ProtectedRoute path=\"/me/update\" component={UpdateProfile} exact />\n//           <ProtectedRoute path=\"/password/update\" component={UpdatePassword} exact />\n//           <ProtectedRoute path=\"/orders/me\" component={ListOrders} exact />\n//           <ProtectedRoute path=\"/order/:id\" component={OrderDetails} exact />\n//           <ProtectedRoute path=\"/dashboard\" isAdmin={true} component={Dashboard} exact />\n//           <ProtectedRoute path=\"/admin/products\" isAdmin={true} component={ProductList} exact />\n//           <ProtectedRoute path=\"/admin/orders\" isAdmin={true} component={OrderList} exact />\n//           <ProtectedRoute path=\"/admin/users\" isAdmin={true} component={UsersList} exact />\n//           <ProtectedRoute path=\"/admin/product\" isAdmin={true} component={NewProduct} exact />\n//           <ProtectedRoute path=\"/admin/product/:id\" isAdmin={true} component={UpdateProduct} exact />\n//           <ProtectedRoute path=\"/admin/order/:id\" isAdmin={true} component={ProcessOrder} exact />\n//           <ProtectedRoute path=\"/admin/user/:id\" isAdmin={true} component={UpdateUser} exact />\n//           <ProtectedRoute path=\"/admin/reviews\" isAdmin={true} component={ProductReviews} exact />\n\n\n//         </div>\n//         {/* {!loading && user.role !== 'admin' && (\n//           <Footer />\n//         )} */}\n\n// {!loading && (!isAuthenticated || user.role !== 'admin') && (\n//           <Footer />\n//         )}\n\n\n//       </div>\n\n//     </Router>\n<NewPassword/>\n\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC,C,CAIA;;AACA,SAASC,QAAT,QAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,EAAhD;EAIAD,SAAS,CAAC,MAAM;IACdF,KAAK,CAACW,QAAN,CAAe7B,QAAQ,EAAvB;;IAEA,eAAe8B,cAAf,GAAgC;MAC9B,MAAM;QAAEC;MAAF,IAAW,MAAMZ,KAAK,CAACa,GAAN,CAAU,mBAAV,CAAvB;MACAC,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACJ,YAAjB;MAEAC,eAAe,CAACG,IAAI,CAACJ,YAAN,CAAf;IACD;;IAEDG,cAAc;EACf,CAXQ,EAWN,EAXM,CAAT;EAYA,MAAM;IAAEK,IAAF;IAAQC,OAAR;IAAiBC;EAAjB,IAAqCpC,WAAW,CAACqC,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAtD;EAEA;IAAA;IACF;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAGA;IACA;IACA;IACA;IAEA;IACA;IACA;IAGA;IAEA;IACA,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA;EAnDE;AAsDD;;GA1EQb,G;UAkBoCzB,W;;;KAlBpCyB,G;AA4ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}