{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, CLEAR_ERRORS } from '../constants/orderConstant';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/order/new', order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Clear Error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","CLEAR_ERRORS","createOrder","order","dispatch","getState","type","config","headers","data","post","payload","error","response","message","clearErrors"],"sources":["/home/ibm/shopit/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from 'axios'\nimport {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstant'\n\n\nexport const createOrder = (order) => async(dispatch,getState)=>{\n    try {\n        dispatch({type : CREATE_ORDER_REQUEST})\n\n        const config = {\n            headers:{\n                'Content-Type' : 'application/json'\n            }\n        }\n\n        const {data}  = await axios.post('/api/v1/order/new', order,config)\n\n        dispatch({\n            type:CREATE_ORDER_SUCCESS,\n            payload:data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : CREATE_ORDER_FAIL,\n            payload : error.response.data.message\n        })\n       \n        \n    }\n}\n\n//Clear Error\n\nexport const clearErrors = ()=>async(dispatch)=>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n    \n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,YAJJ,QAKO,4BALP;AAQA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAMC,QAAN,EAAeC,QAAf,KAA0B;EAC5D,IAAI;IACAD,QAAQ,CAAC;MAACE,IAAI,EAAGR;IAAR,CAAD,CAAR;IAEA,MAAMS,MAAM,GAAG;MACXC,OAAO,EAAC;QACJ,gBAAiB;MADb;IADG,CAAf;IAMA,MAAM;MAACC;IAAD,IAAU,MAAMZ,KAAK,CAACa,IAAN,CAAW,mBAAX,EAAgCP,KAAhC,EAAsCI,MAAtC,CAAtB;IAEAH,QAAQ,CAAC;MACLE,IAAI,EAACP,oBADA;MAELY,OAAO,EAACF;IAFH,CAAD,CAAR;EAKH,CAhBD,CAgBE,OAAOG,KAAP,EAAc;IACZR,QAAQ,CAAC;MACLE,IAAI,EAAGN,iBADF;MAELW,OAAO,EAAGC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;IAFzB,CAAD,CAAR;EAMH;AACJ,CAzBM,C,CA2BP;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAI,MAAMX,QAAN,IAAiB;EAC5CA,QAAQ,CAAC;IACLE,IAAI,EAACL;EADA,CAAD,CAAR;AAIH,CALM"},"metadata":{},"sourceType":"module"}