{"ast":null,"code":"var _jsxFileName = \"/home/ibm/shopit/frontend/src/components/Home.js\",\n    _s = $RefreshSig$();\n\nimport { Fragment, useEffect, useState } from \"react\";\nimport MetaData from \"./layouts/MetaData\";\nimport Product from \"./product/Product\";\nimport Pagination from \"react-js-pagination\"; // import ReactPaginate from 'react-paginate';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProducts } from \"../actions/productActions\";\nimport { useAlert } from \"react-alert\";\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  createSliderWithTooltip\n} = Slider;\nconst Range = createSliderWithTooltip(Slider.Range);\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [price, setPrice] = useState([1, 1000]);\n  const [category, setCategory] = useState('');\n  const [rating, setRating] = useState(0);\n  console.log(\"999999999999999999999999\", category);\n  const categories = [\"Electronics\", \"Cameras\", \"Laptops\", \"Accessories\", \"Headphones\", \"Food\", \"Books\", \"Clothes/Shoes\", \"Beauty/Health\", \"Sports\", \"Outdoor\", \"Home\"]; // console.log(currentPage)\n\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    products,\n    error,\n    resPerPage,\n    productsCount,\n    filteredProductsCount\n  } = useSelector(state => state.products);\n  const keyword = match.params.keyword;\n  useEffect(() => {\n    if (error) {\n      return alert.error(error);\n    }\n\n    dispatch(getProducts(keyword, currentPage, price, category, rating));\n    console.log(\"3444444444444444\", price);\n  }, [dispatch, alert, error, currentPage, keyword, price, category, rating]);\n\n  const setCurrentPageNo = PageNumber => {\n    setCurrentPage(PageNumber);\n  };\n\n  let count = productsCount;\n\n  if (keyword) {\n    count = filteredProductsCount;\n  }\n\n  return (\n    /*#__PURE__*/\n    // <Fragment> {/*TODO*/}\n    //     {loading ? <h1>Loading...</h1> : (\n    //         <Fragment>\n    //             <MetaData title={'Buy Best Products Online'} />\n    //             <h1 id=\"products_heading\">Latest Products</h1>\n    //             <section id=\"products\" className=\"container mt-5\">\n    //                 <div className=\"row\">\n    //                     {keyword ? (\n    //                         <Fragment>\n    //                             <div className=\"col-6 col-md-3 mt-5 mb-5\">\n    //                                 <div className=\"px-5\" >\n    //                                     <Range\n    //                                         marks={{\n    //                                             1: `$1`,\n    //                                             1000: `$1000`\n    //                                         }}\n    //                                         min={1}\n    //                                         max={1000}\n    //                                         defaultValue={[1, 1000]}\n    //                                         tipFormatter={value => `$${value}`}\n    //                                         tipProps={{\n    //                                             placement: \"top\",\n    //                                             visible: true\n    //                                         }}\n    //                                         value={price}\n    //                                         onChange={price => setPrice(price)}\n    //                                     />\n    //                                     <hr className=\"my-3\" />\n    //                                     <div className=\"mt-5\">\n    //                                         <h4 className=\"mb-3\">\n    //                                             categories\n    //                                         </h4>\n    //                                         <ul className=\"pl-0\">\n    //                                             {categories?.map(category => (\n    //                                                 <li\n    //                                                     style={{\n    //                                                         cursor: 'pointer',\n    //                                                         listStyleType: 'none'\n    //                                                     }}\n    //                                                     key={category}\n    //                                                     onClick={() => setCategory(category)\n    //                                                     }\n    //                                                 >\n    //                                                     {category}\n    //                                                 </li>\n    //                                             ))}\n    //                                         </ul>\n    //                                     </div>\n    //                                     <hr className=\"my-5\" />\n    //                                     <div className=\"mt-5\">\n    //                                         <h4 className=\"mb-3\">\n    //                                             Ratings\n    //                                         </h4>\n    //                                         <ul className=\"pl-0\">\n    //                                             {[5, 4, 3, 2, 1]?.map(star => (\n    //                                                 <li\n    //                                                     style={{\n    //                                                         cursor: 'pointer',\n    //                                                         listStyleType: 'none'\n    //                                                     }}\n    //                                                     key={star}\n    //                                                     onClick={() => setRating(star)\n    //                                                     }\n    //                                                 >\n    //                                                     <div className=\"rating-outer\">\n    //                                                         <div className=\"rating-inner\"\n    //                                                             style={{\n    //                                                                 width: `${star * 20}%`\n    //                                                             }}\n    //                                                         >\n    //                                                         </div>\n    //                                                     </div>\n    //                                                 </li>\n    //                                             ))}\n    //                                         </ul>\n    //                                     </div>\n    //                                 </div>\n    //                             </div>\n    //                             <div className=\"col-6 col-md-9\">\n    //                                 <div className=\"row\">\n    //                                     {products?.map(product => (\n    //                                         <Product key={product?._id} product={product} col={4} />\n    //                                     ))}\n    //                                 </div>\n    //                             </div>\n    //                         </Fragment>\n    //                     ) : (\n    //                         products?.map(product => (\n    //                             <Product key={product?._id} product={product} />\n    //                         ))\n    //                     )}\n    //                 </div>\n    //             </section>\n    //             {resPerPage <= count && (\n    //                 <div className=\"d-flex justify-content-center mt-5\">\n    //                     <Pagination\n    //                         activePage={currentPage}\n    //                         itemsCountPerPage={resPerPage}\n    //                         totalItemsCount={productsCount}\n    //                         onChange={setCurrentPageNo}\n    //                         nextPageText={'Next'}\n    //                         prevPageText={'Prev'}\n    //                         firstPageText={'First'}\n    //                         lastPageText={'Last'}\n    //                         itemClass=\"page-item\"\n    //                         linkClass=\"page-link\"\n    //                     />\n    //                 </div>\n    //             )}\n    //         </Fragment>\n    //     )}\n    // </Fragment>\n    _jsxDEV(\"h1\", {\n      children: \"dgfhkj\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Home, \"8Qs1ae2z3gb4rxc3p7uBCIvRJhk=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Fragment","useEffect","useState","MetaData","Product","Pagination","useDispatch","useSelector","getProducts","useAlert","Slider","createSliderWithTooltip","Range","Home","match","currentPage","setCurrentPage","price","setPrice","category","setCategory","rating","setRating","console","log","categories","alert","dispatch","loading","products","error","resPerPage","productsCount","filteredProductsCount","state","keyword","params","setCurrentPageNo","PageNumber","count"],"sources":["/home/ibm/shopit/frontend/src/components/Home.js"],"sourcesContent":["import { Fragment, useEffect, useState } from \"react\";\nimport MetaData from \"./layouts/MetaData\";\nimport Product from \"./product/Product\";\nimport Pagination from \"react-js-pagination\";\n// import ReactPaginate from 'react-paginate';\n\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProducts } from \"../actions/productActions\";\nimport { useAlert } from \"react-alert\";\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\nconst Home = ({ match }) => {\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 1000])\n    const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n    console.log(\"999999999999999999999999\", category)\n\n    const categories = [\n        \"Electronics\",\n        \"Cameras\",\n        \"Laptops\",\n        \"Accessories\",\n        \"Headphones\",\n        \"Food\",\n        \"Books\",\n        \"Clothes/Shoes\",\n        \"Beauty/Health\",\n        \"Sports\",\n        \"Outdoor\",\n        \"Home\",\n    ]\n\n\n\n\n    // console.log(currentPage)\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, products, error, resPerPage, productsCount, filteredProductsCount } = useSelector(state => state.products)\n\n    const keyword = match.params.keyword\n\n\n    useEffect(() => {\n        if (error) {\n\n            return alert.error(error)\n        }\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\n        console.log(\"3444444444444444\", price);\n\n\n    }, [dispatch, alert, error, currentPage, keyword, price, category, rating])\n\n\n    const setCurrentPageNo = (PageNumber) => {\n        setCurrentPage(PageNumber)\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n\n    return (\n\n        // <Fragment> {/*TODO*/}\n        //     {loading ? <h1>Loading...</h1> : (\n        //         <Fragment>\n\n        //             <MetaData title={'Buy Best Products Online'} />\n        //             <h1 id=\"products_heading\">Latest Products</h1>\n\n        //             <section id=\"products\" className=\"container mt-5\">\n        //                 <div className=\"row\">\n\n        //                     {keyword ? (\n        //                         <Fragment>\n        //                             <div className=\"col-6 col-md-3 mt-5 mb-5\">\n        //                                 <div className=\"px-5\" >\n        //                                     <Range\n        //                                         marks={{\n        //                                             1: `$1`,\n        //                                             1000: `$1000`\n        //                                         }}\n        //                                         min={1}\n        //                                         max={1000}\n        //                                         defaultValue={[1, 1000]}\n        //                                         tipFormatter={value => `$${value}`}\n        //                                         tipProps={{\n        //                                             placement: \"top\",\n        //                                             visible: true\n        //                                         }}\n        //                                         value={price}\n        //                                         onChange={price => setPrice(price)}\n        //                                     />\n\n        //                                     <hr className=\"my-3\" />\n        //                                     <div className=\"mt-5\">\n        //                                         <h4 className=\"mb-3\">\n        //                                             categories\n        //                                         </h4>\n\n        //                                         <ul className=\"pl-0\">\n        //                                             {categories?.map(category => (\n        //                                                 <li\n        //                                                     style={{\n        //                                                         cursor: 'pointer',\n        //                                                         listStyleType: 'none'\n        //                                                     }}\n        //                                                     key={category}\n        //                                                     onClick={() => setCategory(category)\n        //                                                     }\n        //                                                 >\n        //                                                     {category}\n        //                                                 </li>\n        //                                             ))}\n        //                                         </ul>\n\n        //                                     </div>\n\n        //                                     <hr className=\"my-5\" />\n        //                                     <div className=\"mt-5\">\n        //                                         <h4 className=\"mb-3\">\n        //                                             Ratings\n        //                                         </h4>\n\n        //                                         <ul className=\"pl-0\">\n        //                                             {[5, 4, 3, 2, 1]?.map(star => (\n        //                                                 <li\n        //                                                     style={{\n        //                                                         cursor: 'pointer',\n        //                                                         listStyleType: 'none'\n        //                                                     }}\n        //                                                     key={star}\n        //                                                     onClick={() => setRating(star)\n        //                                                     }\n        //                                                 >\n        //                                                     <div className=\"rating-outer\">\n        //                                                         <div className=\"rating-inner\"\n        //                                                             style={{\n        //                                                                 width: `${star * 20}%`\n        //                                                             }}\n        //                                                         >\n\n        //                                                         </div>\n\n        //                                                     </div>\n        //                                                 </li>\n        //                                             ))}\n        //                                         </ul>\n\n        //                                     </div>\n\n\n\n\n\n        //                                 </div>\n\n        //                             </div>\n\n        //                             <div className=\"col-6 col-md-9\">\n        //                                 <div className=\"row\">\n        //                                     {products?.map(product => (\n        //                                         <Product key={product?._id} product={product} col={4} />\n        //                                     ))}\n        //                                 </div>\n\n        //                             </div>\n        //                         </Fragment>\n        //                     ) : (\n        //                         products?.map(product => (\n        //                             <Product key={product?._id} product={product} />\n        //                         ))\n\n\n        //                     )}\n\n\n\n\n\n        //                 </div>\n        //             </section>\n        //             {resPerPage <= count && (\n        //                 <div className=\"d-flex justify-content-center mt-5\">\n\n        //                     <Pagination\n\n        //                         activePage={currentPage}\n        //                         itemsCountPerPage={resPerPage}\n        //                         totalItemsCount={productsCount}\n        //                         onChange={setCurrentPageNo}\n        //                         nextPageText={'Next'}\n        //                         prevPageText={'Prev'}\n        //                         firstPageText={'First'}\n        //                         lastPageText={'Last'}\n        //                         itemClass=\"page-item\"\n        //                         linkClass=\"page-link\"\n        //                     />\n\n\n        //                 </div>\n        //             )}\n\n\n        //         </Fragment>\n        //     )}\n\n        // </Fragment>\n        <h1>dgfhkj</h1>\n    )\n}\n\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}