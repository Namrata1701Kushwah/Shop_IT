{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, CLEAR_ERRORS } from '../constants/productConstants';\nexport const getProducts = () => async dispatch => {\n  try {\n    dispatch({\n      ALL_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/v1/products');\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCTS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};","map":{"version":3,"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","CLEAR_ERRORS","getProducts","dispatch","data","get","error","type","payload","response","message"],"sources":["/home/ibm/shopit/frontend/src/actions/productActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n    ALL_PRODUCTS_REQUEST , \n    ALL_PRODUCTS_SUCCESS, \n    ALL_PRODUCTS_FAIL,\n    CLEAR_ERRORS \n} from  '../constants/productConstants'\n\n\nexport const getProducts = ()=> async(dispatch)=>{\n    try {\n        dispatch({ALL_PRODUCTS_REQUEST})\n        const {data} = await axios.get('/api/v1/products')\n        \n    } catch (error) {\n        dispatch({\n            type : ALL_PRODUCTS_FAIL,\n            payload : error.response.data.message\n        })\n        \n    }\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,YAJJ,QAKQ,+BALR;AAQA,OAAO,MAAMC,WAAW,GAAG,MAAK,MAAMC,QAAN,IAAiB;EAC7C,IAAI;IACAA,QAAQ,CAAC;MAACL;IAAD,CAAD,CAAR;IACA,MAAM;MAACM;IAAD,IAAS,MAAMP,KAAK,CAACQ,GAAN,CAAU,kBAAV,CAArB;EAEH,CAJD,CAIE,OAAOC,KAAP,EAAc;IACZH,QAAQ,CAAC;MACLI,IAAI,EAAGP,iBADF;MAELQ,OAAO,EAAGF,KAAK,CAACG,QAAN,CAAeL,IAAf,CAAoBM;IAFzB,CAAD,CAAR;EAKH;AACJ,CAZM"},"metadata":{},"sourceType":"module"}