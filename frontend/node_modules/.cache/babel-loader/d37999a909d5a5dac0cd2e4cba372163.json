{"ast":null,"code":"import axios from 'axios';\nimport { ALL_PRODUCTS_REQUEST, ALL_PRODUCTS_SUCCESS, ALL_PRODUCTS_FAIL, CLEAR_ERRORS, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL } from '../constants/productConstants';\nexport const getProducts = function () {\n  let keyword = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let currentPage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  let price = arguments.length > 2 ? arguments[2] : undefined;\n  return async dispatch => {\n    try {\n      dispatch({\n        type: ALL_PRODUCTS_REQUEST\n      }); // let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}\n      // &price[gte]=${price[0]}`\n\n      let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${products.price[1]}`;\n      const {\n        data\n      } = await axios.get(link);\n      console.log(\"===============================================\", data.products.price);\n      dispatch({\n        type: ALL_PRODUCTS_SUCCESS,\n        payload: data\n      });\n    } catch (error) {\n      dispatch({\n        type: ALL_PRODUCTS_FAIL,\n        payload: error.response.data.message\n      });\n    }\n  };\n};\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Clear Error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCTS_REQUEST","ALL_PRODUCTS_SUCCESS","ALL_PRODUCTS_FAIL","CLEAR_ERRORS","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","getProducts","keyword","currentPage","price","dispatch","type","link","products","data","get","console","log","payload","error","response","message","getProductDetails","id","clearErrors"],"sources":["/home/ibm/shopit/frontend/src/actions/productActions.js"],"sourcesContent":["import axios from 'axios';\nimport {\n    ALL_PRODUCTS_REQUEST , \n    ALL_PRODUCTS_SUCCESS, \n    ALL_PRODUCTS_FAIL,\n    CLEAR_ERRORS, \n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_FAIL\n} from  '../constants/productConstants'\n\n\nexport const getProducts = (keyword=\"\" ,currentPage = 1, price)=> async(dispatch)=>{\n  \n    try {\n        dispatch({type :ALL_PRODUCTS_REQUEST})\n         \n        // let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}\n        // &price[gte]=${price[0]}`\n      let link=`/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${products.price[1]}`\n\n\n        const {data} = await axios.get(link)\n        console.log(\"===============================================\",data.products.price);\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload:data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : ALL_PRODUCTS_FAIL,\n            payload : error.response.data.message\n        })\n        \n    }\n}\n\nexport const getProductDetails = (id)=> async(dispatch)=>{\n    try {\n        dispatch({type :PRODUCT_DETAILS_REQUEST})\n        const {data} = await axios.get(`/api/v1/product/${id}`)\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload:data\n        })\n        \n    } catch (error) {\n        dispatch({\n            type : PRODUCT_DETAILS_FAIL,\n            payload : error.response.data.message\n        })\n        \n    }\n}\n\n\n//Clear Error\n\nexport const clearErrors = ()=>async(dispatch)=>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n    \n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,YAJJ,EAKIC,uBALJ,EAMIC,uBANJ,EAOIC,oBAPJ,QAQQ,+BARR;AAWA,OAAO,MAAMC,WAAW,GAAG;EAAA,IAACC,OAAD,uEAAS,EAAT;EAAA,IAAaC,WAAb,uEAA2B,CAA3B;EAAA,IAA8BC,KAA9B;EAAA,OAAuC,MAAMC,QAAN,IAAiB;IAE/E,IAAI;MACAA,QAAQ,CAAC;QAACC,IAAI,EAAEZ;MAAP,CAAD,CAAR,CADA,CAGA;MACA;;MACF,IAAIa,IAAI,GAAE,4BAA2BL,OAAQ,SAAQC,WAAY,eAAcK,QAAQ,CAACJ,KAAT,CAAe,CAAf,CAAkB,EAAjG;MAGE,MAAM;QAACK;MAAD,IAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAUH,IAAV,CAArB;MACAI,OAAO,CAACC,GAAR,CAAY,iDAAZ,EAA8DH,IAAI,CAACD,QAAL,CAAcJ,KAA5E;MACAC,QAAQ,CAAC;QACLC,IAAI,EAAEX,oBADD;QAELkB,OAAO,EAACJ;MAFH,CAAD,CAAR;IAKH,CAfD,CAeE,OAAOK,KAAP,EAAc;MACZT,QAAQ,CAAC;QACLC,IAAI,EAAGV,iBADF;QAELiB,OAAO,EAAGC,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO;MAFzB,CAAD,CAAR;IAKH;EACJ,CAxB0B;AAAA,CAApB;AA0BP,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAO,MAAMb,QAAN,IAAiB;EACrD,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAEP;IAAP,CAAD,CAAR;IACA,MAAM;MAACU;IAAD,IAAS,MAAMhB,KAAK,CAACiB,GAAN,CAAW,mBAAkBQ,EAAG,EAAhC,CAArB;IACAb,QAAQ,CAAC;MACLC,IAAI,EAAER,uBADD;MAELe,OAAO,EAACJ;IAFH,CAAD,CAAR;EAKH,CARD,CAQE,OAAOK,KAAP,EAAc;IACZT,QAAQ,CAAC;MACLC,IAAI,EAAGN,oBADF;MAELa,OAAO,EAAGC,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBO;IAFzB,CAAD,CAAR;EAKH;AACJ,CAhBM,C,CAmBP;;AAEA,OAAO,MAAMG,WAAW,GAAG,MAAI,MAAMd,QAAN,IAAiB;EAC5CA,QAAQ,CAAC;IACLC,IAAI,EAACT;EADA,CAAD,CAAR;AAIH,CALM"},"metadata":{},"sourceType":"module"}