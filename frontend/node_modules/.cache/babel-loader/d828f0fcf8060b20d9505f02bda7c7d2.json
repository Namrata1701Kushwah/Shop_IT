{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, REGISTER_USER_REQUEST, REGISTER_SUCCESS, REGISTER_FAIL, CLEAR_ERRORS } from '../constants/userConstants';\nexport const authReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    user: {}\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n    case LOGIN_USER_REQUEST:\n      return {\n        loading: true,\n        isAuthenticated: false\n      };\n\n    case LOGIN_SUCCESS:\n    case LOGIN_USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        isAuthenticated: true,\n        user: action.payload\n      };\n\n    case LOGIN_FAIL:\n    case LOGIN_USER_FAIL:\n      return { ...state,\n        loading: true,\n        isAuthenticated: false,\n        user: null,\n        error: action.payload\n      };\n\n    case CLEAR_ERRORS:\n      return { ...state,\n        errror: null\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","REGISTER_USER_REQUEST","REGISTER_SUCCESS","REGISTER_FAIL","CLEAR_ERRORS","authReducer","state","user","action","type","LOGIN_USER_REQUEST","loading","isAuthenticated","LOGIN_USER_SUCCESS","payload","LOGIN_USER_FAIL","error","errror"],"sources":["/home/ibm/shopit/frontend/src/reducers/userReducers.js"],"sourcesContent":["import {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    REGISTER_USER_REQUEST,\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n\nexport const authReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n\n        case LOGIN_REQUEST : \n        case  LOGIN_USER_REQUEST :\n        return {\n            loading : true,\n            isAuthenticated : false,\n        }\n\n        case LOGIN_SUCCESS : \n        case LOGIN_USER_SUCCESS :\n        return {\n             ...state,\n            loading : false,\n            isAuthenticated : true,\n            user : action.payload\n        }\n\n        case LOGIN_FAIL :\n            case   LOGIN_USER_FAIL :\n            return {\n                ...state,\n                loading : true,\n                isAuthenticated : false,\n                user : null,\n                error : action.payload\n            }\n\n            case CLEAR_ERRORS :\n                return{\n                    ...state,\n                    errror : null\n                }\n        default:\n            return state\n\n    }\n\n}"],"mappings":"AAAA,SACIA,aADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,qBAJJ,EAKIC,gBALJ,EAMIC,aANJ,EAOIC,YAPJ,QAQO,4BARP;AAWA,OAAO,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzB;IAAEC,IAAI,EAAE;EAAR,CAAyB;EAAA,IAAXC,MAAW;;EACzD,QAAQA,MAAM,CAACC,IAAf;IAEI,KAAKX,aAAL;IACA,KAAMY,kBAAN;MACA,OAAO;QACHC,OAAO,EAAG,IADP;QAEHC,eAAe,EAAG;MAFf,CAAP;;IAKA,KAAKb,aAAL;IACA,KAAKc,kBAAL;MACA,OAAO,EACF,GAAGP,KADD;QAEHK,OAAO,EAAG,KAFP;QAGHC,eAAe,EAAG,IAHf;QAIHL,IAAI,EAAGC,MAAM,CAACM;MAJX,CAAP;;IAOA,KAAKd,UAAL;IACI,KAAOe,eAAP;MACA,OAAO,EACH,GAAGT,KADA;QAEHK,OAAO,EAAG,IAFP;QAGHC,eAAe,EAAG,KAHf;QAIHL,IAAI,EAAG,IAJJ;QAKHS,KAAK,EAAGR,MAAM,CAACM;MALZ,CAAP;;IAQA,KAAKV,YAAL;MACI,OAAM,EACF,GAAGE,KADD;QAEFW,MAAM,EAAG;MAFP,CAAN;;IAIR;MACI,OAAOX,KAAP;EAlCR;AAsCH,CAvCM"},"metadata":{},"sourceType":"module"}