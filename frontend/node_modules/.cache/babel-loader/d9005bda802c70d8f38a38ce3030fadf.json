{"ast":null,"code":"import axios from 'axios';\nimport { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL, CLEAR_ERRORS } from '../constants/orderConstant';\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/order/new', order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Get Currently logged in user orders\n\nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/orders/me\");\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.myOrders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Clear Error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","CLEAR_ERRORS","createOrder","order","dispatch","getState","type","config","headers","data","post","payload","error","response","message","myOrders","get","clearErrors"],"sources":["/home/ibm/shopit/frontend/src/actions/orderActions.js"],"sourcesContent":["import axios from 'axios'\nimport {\n    CREATE_ORDER_REQUEST,\n    CREATE_ORDER_SUCCESS,\n    CREATE_ORDER_FAIL,\n    MY_ORDERS_REQUEST,\n    MY_ORDERS_SUCCESS,\n    MY_ORDERS_FAIL,\n    CLEAR_ERRORS\n} from '../constants/orderConstant'\n\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CREATE_ORDER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/v1/order/new', order, config)\n\n        dispatch({\n            type: CREATE_ORDER_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_ORDER_FAIL,\n            payload: error.response.data.message\n        })\n\n\n    }\n}\n\n\n//Get Currently logged in user orders\nexport const myOrders = () => async (dispatch) => {\n    try {\n        dispatch({ type: MY_ORDERS_REQUEST })\n        const { data } = await axios.get(\"/api/v1/orders/me\")\n\n        dispatch({\n            type:\n                MY_ORDERS_SUCCESS,\n            payload: data.myOrders\n        })\n\n    } catch (error) {\n        dispatch({\n            type: MY_ORDERS_FAIL,\n            payload: error.response.data.message\n\n        })\n\n    }\n}\n\n//Clear Error\n\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,iBAJJ,EAKIC,iBALJ,EAMIC,cANJ,EAOIC,YAPJ,QAQO,4BARP;AAWA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;EAChE,IAAI;IACAD,QAAQ,CAAC;MAAEE,IAAI,EAAEX;IAAR,CAAD,CAAR;IAEA,MAAMY,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAgB;MADX;IADE,CAAf;IAMA,MAAM;MAAEC;IAAF,IAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,mBAAX,EAAgCP,KAAhC,EAAuCI,MAAvC,CAAvB;IAEAH,QAAQ,CAAC;MACLE,IAAI,EAAEV,oBADD;MAELe,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAKH,CAhBD,CAgBE,OAAOG,KAAP,EAAc;IACZR,QAAQ,CAAC;MACLE,IAAI,EAAET,iBADD;MAELc,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;IAFxB,CAAD,CAAR;EAMH;AACJ,CAzBM,C,CA4BP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOX,QAAP,IAAoB;EAC9C,IAAI;IACAA,QAAQ,CAAC;MAAEE,IAAI,EAAER;IAAR,CAAD,CAAR;IACA,MAAM;MAAEW;IAAF,IAAW,MAAMf,KAAK,CAACsB,GAAN,CAAU,mBAAV,CAAvB;IAEAZ,QAAQ,CAAC;MACLE,IAAI,EACAP,iBAFC;MAGLY,OAAO,EAAEF,IAAI,CAACM;IAHT,CAAD,CAAR;EAMH,CAVD,CAUE,OAAOH,KAAP,EAAc;IACZR,QAAQ,CAAC;MACLE,IAAI,EAAEN,cADD;MAELW,OAAO,EAAEC,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK;IAFxB,CAAD,CAAR;EAMH;AACJ,CAnBM,C,CAqBP;;AAEA,OAAO,MAAMG,WAAW,GAAG,MAAM,MAAOb,QAAP,IAAoB;EACjDA,QAAQ,CAAC;IACLE,IAAI,EAAEL;EADD,CAAD,CAAR;AAIH,CALM"},"metadata":{},"sourceType":"module"}