{"ast":null,"code":"var _jsxFileName = \"/home/ibm/shopit/frontend/src/components/admin/UsersList.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MDBDataTable } from 'mdbreact';\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\nimport Sidebar from './Sidebar';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { allUsers, clearErrors } from '../../actions/userActions'; // import { DELETE_USER_RESET } from '../../constants/userConstants'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UsersList = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    users\n  } = useSelector(state => state.allUsers); // const { isDeleted } = useSelector(state => state.user)\n\n  useEffect(() => {\n    dispatch(allUsers());\n\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    } // if (isDeleted) {\n    //     alert.success('User deleted successfully');\n    //     history.push('/admin/users');\n    //     dispatch({ type: DELETE_USER_RESET })\n    // }\n\n  }, [dispatch, alert, error]); // const deleteUserHandler = (id) => {\n  //     dispatch(deleteUser(id))\n  // }\n\n  const setUsers = () => {\n    const data = {\n      columns: [{\n        label: 'User ID',\n        field: 'id',\n        sort: 'asc'\n      }, {\n        label: 'Name',\n        field: 'name',\n        sort: 'asc'\n      }, {\n        label: 'Email',\n        field: 'email',\n        sort: 'asc'\n      }, {\n        label: 'Role',\n        field: 'role',\n        sort: 'asc'\n      }, {\n        label: 'Actions',\n        field: 'actions'\n      }],\n      rows: []\n    };\n    users.forEach(user => {\n      data.rows.push({\n        id: user._id,\n        name: user.name,\n        email: user.email,\n        role: user.role,\n        actions: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `/admin/user/${user._id}`,\n            className: \"btn btn-primary py-1 px-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-pencil\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger py-1 px-2 ml-2\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-trash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 26\n        }, this)\n      });\n    });\n    return data;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: 'All Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-md-10\",\n        children: /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-5\",\n            children: \"All Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 36\n          }, this) : /*#__PURE__*/_jsxDEV(MDBDataTable, {\n            data: setUsers(),\n            className: \"px-3\",\n            bordered: true,\n            striped: true,\n            hover: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UsersList, \"MVZEwOt30u8A350eJacUQ0kQ4XA=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = UsersList;\nexport default UsersList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","Fragment","useEffect","Link","MDBDataTable","MetaData","Loader","Sidebar","useAlert","useDispatch","useSelector","allUsers","clearErrors","UsersList","history","alert","dispatch","loading","error","users","state","setUsers","data","columns","label","field","sort","rows","forEach","user","push","id","_id","name","email","role","actions"],"sources":["/home/ibm/shopit/frontend/src/components/admin/UsersList.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { allUsers, clearErrors } from '../../actions/userActions'\n// import { DELETE_USER_RESET } from '../../constants/userConstants'\n\nconst UsersList = ({ history }) => {\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, users } = useSelector(state => state.allUsers);\n    // const { isDeleted } = useSelector(state => state.user)\n\n    useEffect(() => {\n        dispatch(allUsers());\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        // if (isDeleted) {\n        //     alert.success('User deleted successfully');\n        //     history.push('/admin/users');\n        //     dispatch({ type: DELETE_USER_RESET })\n        // }\n\n    }, [dispatch, alert, error])\n\n    // const deleteUserHandler = (id) => {\n    //     dispatch(deleteUser(id))\n    // }\n\n    const setUsers = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'User ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Name',\n                    field: 'name',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Email',\n                    field: 'email',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Role',\n                    field: 'role',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        users.forEach(user => {\n            data.rows.push({\n                id: user._id,\n                name: user.name,\n                email: user.email,\n                role: user.role,\n\n                actions: <Fragment>\n                    <Link to={`/admin/user/${user._id}`} className=\"btn btn-primary py-1 px-2\">\n                        <i className=\"fa fa-pencil\"></i>\n                    </Link>\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\">\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n                </Fragment>\n            })\n        })\n\n        return data;\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'All Users'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <h1 className=\"my-5\">All Users</h1>\n\n                        {loading ? <Loader /> : (\n                            <MDBDataTable\n                                data={setUsers()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        )}\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default UsersList"],"mappings":"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"},"metadata":{},"sourceType":"module"}