{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, CLEAR_ERRORS } from '../constants/userConstants'; //Login\n\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/login', {\n      email,\n      password\n    }, config);\n    console.log(data);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Register User \n\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        'content-Type': 'multipart/form-data'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/v1/register', userData, config);\n    console.log(data);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n}; //Clear Error\n\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","CLEAR_ERRORS","login","email","password","dispatch","type","config","headers","data","post","console","log","payload","user","error","response","message","register","userData","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","clearErrors"],"sources":["/home/ibm/shopit/frontend/src/actions/userActions.js"],"sourcesContent":["import axios from 'axios'\n\n\n\nimport {\n    LOGIN_REQUEST,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    CLEAR_ERRORS\n} from '../constants/userConstants'\n\n//Login\n\nexport const login  = (email, password)=> async (dispatch)=>{\n    try {\n        dispatch({type : LOGIN_REQUEST})\n\n        const config = {\n            headers : {\n                'content-Type' : 'application/json'\n            }\n        }\n\n        const {data} = await axios.post('/api/v1/login', {email, password}, config)\n        console.log(data)\n\n        dispatch({\n            type : LOGIN_SUCCESS,\n            payload : data.user\n        })\n\n\n        \n    } catch (error) {\n        dispatch({\n            type : LOGIN_FAIL,\n            payload : error.response.data.message\n        })\n        \n    }\n\n}\n\n//Register User \n\nexport const register = (userData)=> async (dispatch)=>{\n    try {\n        dispatch({type :REGISTER_USER_REQUEST})\n\n        const config = {\n            headers : {\n                'content-Type' : 'multipart/form-data'\n            }\n        }\n\n        const {data} = await axios.post('/api/v1/register', userData, config)\n        console.log(data)\n\n        dispatch({\n            type : REGISTER_USER_SUCCESS,\n            payload : data.user\n        })\n\n\n        \n    } catch (error) {\n        dispatch({\n            type : LOGIN_FAIL,\n            payload : error.response.data.message\n        })\n        \n    }\n\n}\n\n//Clear Error\n\nexport const clearErrors = ()=>async(dispatch)=>{\n    dispatch({\n        type:CLEAR_ERRORS\n    })\n    \n}\n\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SACIC,aADJ,EAEIC,aAFJ,EAGIC,UAHJ,EAIIC,YAJJ,QAKO,4BALP,C,CAOA;;AAEA,OAAO,MAAMC,KAAK,GAAI,CAACC,KAAD,EAAQC,QAAR,KAAoB,MAAOC,QAAP,IAAkB;EACxD,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAGR;IAAR,CAAD,CAAR;IAEA,MAAMS,MAAM,GAAG;MACXC,OAAO,EAAG;QACN,gBAAiB;MADX;IADC,CAAf;IAMA,MAAM;MAACC;IAAD,IAAS,MAAMZ,KAAK,CAACa,IAAN,CAAW,eAAX,EAA4B;MAACP,KAAD;MAAQC;IAAR,CAA5B,EAA+CG,MAA/C,CAArB;IACAI,OAAO,CAACC,GAAR,CAAYH,IAAZ;IAEAJ,QAAQ,CAAC;MACLC,IAAI,EAAGP,aADF;MAELc,OAAO,EAAGJ,IAAI,CAACK;IAFV,CAAD,CAAR;EAOH,CAnBD,CAmBE,OAAOC,KAAP,EAAc;IACZV,QAAQ,CAAC;MACLC,IAAI,EAAGN,UADF;MAELa,OAAO,EAAGE,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ;IAFzB,CAAD,CAAR;EAKH;AAEJ,CA5BM,C,CA8BP;;AAEA,OAAO,MAAMC,QAAQ,GAAIC,QAAD,IAAa,MAAOd,QAAP,IAAkB;EACnD,IAAI;IACAA,QAAQ,CAAC;MAACC,IAAI,EAAEc;IAAP,CAAD,CAAR;IAEA,MAAMb,MAAM,GAAG;MACXC,OAAO,EAAG;QACN,gBAAiB;MADX;IADC,CAAf;IAMA,MAAM;MAACC;IAAD,IAAS,MAAMZ,KAAK,CAACa,IAAN,CAAW,kBAAX,EAA+BS,QAA/B,EAAyCZ,MAAzC,CAArB;IACAI,OAAO,CAACC,GAAR,CAAYH,IAAZ;IAEAJ,QAAQ,CAAC;MACLC,IAAI,EAAGe,qBADF;MAELR,OAAO,EAAGJ,IAAI,CAACK;IAFV,CAAD,CAAR;EAOH,CAnBD,CAmBE,OAAOC,KAAP,EAAc;IACZV,QAAQ,CAAC;MACLC,IAAI,EAAGN,UADF;MAELa,OAAO,EAAGE,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ;IAFzB,CAAD,CAAR;EAKH;AAEJ,CA5BM,C,CA8BP;;AAEA,OAAO,MAAMK,WAAW,GAAG,MAAI,MAAMjB,QAAN,IAAiB;EAC5CA,QAAQ,CAAC;IACLC,IAAI,EAACL;EADA,CAAD,CAAR;AAIH,CALM"},"metadata":{},"sourceType":"module"}