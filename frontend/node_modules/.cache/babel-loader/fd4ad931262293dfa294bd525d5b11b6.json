{"ast":null,"code":"var _jsxFileName = \"/home/ibm/shopit/frontend/src/components/admin/NewProduct.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport MetaData from '../layouts/MetaData';\nimport Loader from '../layouts/Loader';\nimport { useAlert } from 'react-alert';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { newProduct, clearErrors } from '../../actions/productActions';\nimport Sidebar from './Sidebar';\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewProduct = _ref => {\n  _s();\n\n  let {\n    history\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState('');\n  const [description, setDescription] = useState('');\n  const [category, setCategory] = useState('');\n  const [stock, setStock] = useState(0);\n  const [seller, setSeller] = useState('');\n  const [images, setImages] = useState([]);\n  const [imagesPreview, setImagesPreview] = useState([]);\n  const categories = [\"Electronics\", \"Cameras\", \"Laptops\", \"Accessories\", \"Headphones\", \"Food\", \"Books\", \"Clothes/Shoes\", \"Beauty/Health\", \"Sports\", \"Outdoor\", \"Home\"];\n  const alert = useAlert();\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    success\n  } = useSelector(state => state === null || state === void 0 ? void 0 : state.newProduct);\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n\n    if (success) {\n      history.push('/admin/products');\n      alert.success(\"Product created successfully\");\n      dispatch({\n        type: NEW_PRODUCT_RESET\n      });\n    }\n  }, [dispatch, alert, error, success, history]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.set('name', name);\n    formData.set('price', price);\n    formData.set('description', description);\n    formData.set('category', category);\n    formData.set('stock', stock);\n    formData.set('seller', seller);\n    images.forEach(image => {\n      formData.append('images', image);\n    });\n    dispatch(newProduct(formData));\n  };\n\n  const onChange = e => {\n    const files = Array.from(e.target.files);\n    setImagesPreview([]);\n    setImages([]);\n    files.forEach(file => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setImagesPreview(oldArray => [...oldArray, reader.result]);\n          setImages(oldArray => [...oldArray, reader.result]);\n        }\n      };\n\n      reader.readAsDataURL(file);\n    });\n  };\n\n  return (\n    /*#__PURE__*/\n    // <Fragment>\n    //     <MetaData title={'New Product'} />\n    //     <div classNameName='row'>\n    //         <div classNameName='col-12 col-md-2'>\n    //             <Sidebar />\n    //         </div>\n    //         <div classNameName='col-12 col-md-10'>\n    //             <Fragment>\n    //                 <div className=\"wrapper my-5\">\n    //                     <form className=\"shadow-lg\" onSubmit={ submitHandler} encType='multipart/form-data'>\n    //                         <h1 className=\"mb-4\">New Product</h1>\n    //                         <div className=\"form-group\">\n    //                             <label for=\"name_field\">Name</label>\n    //                             <input\n    //                                 type=\"text\"\n    //                                 id=\"name_field\"\n    //                                 className=\"form-control\"\n    //                                 value ={name}\n    //                                 onChange = {(e)=>setName(e.target.value)}\n    //                             />\n    //                         </div>\n    //                         <div className=\"form-group\">\n    //                             <label for=\"price_field\">Price</label>\n    //                             <input\n    //                                 type=\"text\"\n    //                                 id=\"price_field\"\n    //                                 className=\"form-control\"\n    //                                 value={price}\n    //                                 onChange  = {(e)=>setPrice(e.target.value)}\n    //                             />\n    //                         </div>\n    //                         <div className=\"form-group\">\n    //                             <label for=\"description_field\">Description</label>\n    //                             <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value = {description}   onChange  = {(e)=>setDescription(e.target.value)} ></textarea>\n    //                         </div>\n    //                         <div className=\"form-group\">\n    //                             <label for=\"category_field\">Category</label>\n    //                             <select className=\"form-control\" id=\"category_field\" value={category} onChange  = {(e)=>setCategory(e.target.value)}>\n    //                                {categories.map(category =>(\n    //                                      <option key={category} value={category}>{category}</option>  \n    //                                ))}\n    //                             </select>\n    //                         </div>\n    //                         <div className=\"form-group\">\n    //                             <label for=\"stock_field\">Stock</label>\n    //                             <input\n    //                                 type=\"number\"\n    //                                 id=\"stock_field\"\n    //                                 className=\"form-control\"\n    //                                 value={stock}\n    //                                 onChange  = {(e)=>setStock(e.target.value)}\n    //                             />\n    //                         </div>\n    //                         <div className=\"form-group\">\n    //                             <label for=\"seller_field\">Seller Name</label>\n    //                             <input\n    //                                 type=\"text\"\n    //                                 id=\"seller_field\"\n    //                                 className=\"form-control\"\n    //                                 value={seller}\n    //                                 onChange = {(e)=>setSeller\n    //                                 (e.target.value)}\n    //                             />\n    //                         </div>\n    //                         <div className='form-group'>\n    //                             <label>Images</label>\n    //                             <div className='custom-file'>\n    //                                 <input\n    //                                     type='file'\n    //                                     name='product_images'\n    //                                     className='custom-file-input'\n    //                                     id='customFile'\n    //                                     onChange={onChange}\n    //                                     multiple\n    //                                 />\n    //                                 <label className='custom-file-label' for='customFile'>\n    //                                     Choose Images\n    //                                 </label>\n    //                             </div>\n    //                             {imagesPreview.map((img)=>(\n    //                                 <img src={img} key={img} alt=\"Images Preview\" className='mt-3 mr-2' width = \"55\" heigth=\"52\" />\n    //                             ))}\n    //                         </div>\n    //                         <button\n    //                             id=\"login_button\"\n    //                             type=\"submit\"\n    //                             className=\"btn btn-block py-3\"\n    //                             disabled={loading ? true : false}\n    //                         >\n    //                             CREATE\n    //                         </button>\n    //                     </form>\n    //                 </div>\n    //             </Fragment>\n    //         </div>\n    //     </div>\n    // </Fragment>\n    _jsxDEV(\"h1\", {\n      children: \"shadffff\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(NewProduct, \"908ERS9rPa+Z9ze6ddS42kDNII4=\", false, function () {\n  return [useAlert, useDispatch, useSelector];\n});\n\n_c = NewProduct;\nexport default NewProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewProduct\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","MetaData","Loader","useAlert","useDispatch","useSelector","newProduct","clearErrors","Sidebar","NEW_PRODUCT_RESET","NewProduct","history","name","setName","price","setPrice","description","setDescription","category","setCategory","stock","setStock","seller","setSeller","images","setImages","imagesPreview","setImagesPreview","categories","alert","dispatch","loading","error","success","state","push","type","submitHandler","e","preventDefault","formData","FormData","set","forEach","image","append","onChange","files","Array","from","target","file","reader","FileReader","onload","readyState","oldArray","result","readAsDataURL"],"sources":["/home/ibm/shopit/frontend/src/components/admin/NewProduct.js"],"sourcesContent":["import React, { Fragment, useState ,useEffect} from 'react'\n\nimport MetaData from '../layouts/MetaData'\nimport Loader from '../layouts/Loader'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport Sidebar from './Sidebar'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\n\n\n\n\nconst NewProduct = ({ history }) => {\n    const [name, setName] = useState(\"\")\n    const [price, setPrice] = useState('')\n    const [description, setDescription] = useState('')\n    const [category, setCategory] = useState('')\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('')\n    const [images, setImages] = useState([])\n    const [imagesPreview, setImagesPreview] = useState([])\n\n\n    const categories = [\n        \"Electronics\",\n        \"Cameras\",\n        \"Laptops\",\n        \"Accessories\",\n        \"Headphones\",\n        \"Food\",\n        \"Books\",\n        \"Clothes/Shoes\",\n        \"Beauty/Health\",\n        \"Sports\",\n        \"Outdoor\",\n        \"Home\",\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state?.newProduct);\n\n    useEffect(() => {\n\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products')\n            alert.success(\"Product created successfully\")\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n        const files = Array.from(e.target.files)\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n\n\n\n\n\n\n    }\n\n\n\n\n\n\n\n\n    return (\n        // <Fragment>\n        //     <MetaData title={'New Product'} />\n        //     <div classNameName='row'>\n        //         <div classNameName='col-12 col-md-2'>\n        //             <Sidebar />\n\n        //         </div>\n        //         <div classNameName='col-12 col-md-10'>\n        //             <Fragment>\n        //                 <div className=\"wrapper my-5\">\n        //                     <form className=\"shadow-lg\" onSubmit={ submitHandler} encType='multipart/form-data'>\n        //                         <h1 className=\"mb-4\">New Product</h1>\n\n        //                         <div className=\"form-group\">\n        //                             <label for=\"name_field\">Name</label>\n        //                             <input\n        //                                 type=\"text\"\n        //                                 id=\"name_field\"\n        //                                 className=\"form-control\"\n        //                                 value ={name}\n        //                                 onChange = {(e)=>setName(e.target.value)}\n        //                             />\n        //                         </div>\n\n        //                         <div className=\"form-group\">\n        //                             <label for=\"price_field\">Price</label>\n        //                             <input\n        //                                 type=\"text\"\n        //                                 id=\"price_field\"\n        //                                 className=\"form-control\"\n        //                                 value={price}\n        //                                 onChange  = {(e)=>setPrice(e.target.value)}\n        //                             />\n        //                         </div>\n\n        //                         <div className=\"form-group\">\n        //                             <label for=\"description_field\">Description</label>\n        //                             <textarea className=\"form-control\" id=\"description_field\" rows=\"8\" value = {description}   onChange  = {(e)=>setDescription(e.target.value)} ></textarea>\n        //                         </div>\n\n        //                         <div className=\"form-group\">\n        //                             <label for=\"category_field\">Category</label>\n        //                             <select className=\"form-control\" id=\"category_field\" value={category} onChange  = {(e)=>setCategory(e.target.value)}>\n                                       \n        //                                {categories.map(category =>(\n        //                                      <option key={category} value={category}>{category}</option>  \n        //                                ))}\n        //                             </select>\n        //                         </div>\n        //                         <div className=\"form-group\">\n        //                             <label for=\"stock_field\">Stock</label>\n        //                             <input\n        //                                 type=\"number\"\n        //                                 id=\"stock_field\"\n        //                                 className=\"form-control\"\n        //                                 value={stock}\n        //                                 onChange  = {(e)=>setStock(e.target.value)}\n        //                             />\n        //                         </div>\n\n        //                         <div className=\"form-group\">\n        //                             <label for=\"seller_field\">Seller Name</label>\n        //                             <input\n        //                                 type=\"text\"\n        //                                 id=\"seller_field\"\n        //                                 className=\"form-control\"\n        //                                 value={seller}\n        //                                 onChange = {(e)=>setSeller\n        //                                 (e.target.value)}\n        //                             />\n        //                         </div>\n\n        //                         <div className='form-group'>\n        //                             <label>Images</label>\n\n        //                             <div className='custom-file'>\n        //                                 <input\n        //                                     type='file'\n        //                                     name='product_images'\n        //                                     className='custom-file-input'\n        //                                     id='customFile'\n        //                                     onChange={onChange}\n        //                                     multiple\n        //                                 />\n        //                                 <label className='custom-file-label' for='customFile'>\n        //                                     Choose Images\n        //                                 </label>\n        //                             </div>\n\n        //                             {imagesPreview.map((img)=>(\n        //                                 <img src={img} key={img} alt=\"Images Preview\" className='mt-3 mr-2' width = \"55\" heigth=\"52\" />\n        //                             ))}\n        //                         </div>\n\n\n        //                         <button\n        //                             id=\"login_button\"\n        //                             type=\"submit\"\n        //                             className=\"btn btn-block py-3\"\n        //                             disabled={loading ? true : false}\n        //                         >\n        //                             CREATE\n        //                         </button>\n\n        //                     </form>\n        //                 </div>\n\n        //             </Fragment>\n\n        //         </div>\n\n        //     </div>\n\n        // </Fragment>\n        <h1>shadffff</h1>\n    )\n}\n\nexport default NewProduct;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}